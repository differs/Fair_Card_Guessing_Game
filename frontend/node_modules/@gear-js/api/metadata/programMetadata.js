import { hexToU8a } from '@polkadot/util';
import { CreateType } from './create-type.js';
import { GearMetadata } from './metadata.js';

var Lang;
(function (Lang) {
    Lang[Lang["RUST"] = 0] = "RUST";
    Lang[Lang["ASSEMBLYSCRIPT"] = 1] = "ASSEMBLYSCRIPT";
})(Lang || (Lang = {}));
class ProgramMetadata extends GearMetadata {
    types;
    constructor({ reg, ...types }) {
        super(reg);
        this.types = types;
    }
}
function getProgramMetadata(hexMetadata) {
    if (!hexMetadata.startsWith('0x')) {
        hexMetadata = '0x' + hexMetadata;
    }
    const u8aMeta = hexToU8a(hexMetadata);
    const lang = CreateType.create('u8', u8aMeta[0]).toNumber();
    // TODO: support different versions
    // const version = CreateType.create<u16>('u16', u8aMeta.slice(1, 3)).toNumber();
    if (lang === Lang.RUST) {
        try {
            const metaRepr = CreateType.create('ProgramMetadataRepr', u8aMeta.slice(3)).toJSON();
            return new ProgramMetadata(metaRepr);
        }
        catch (err) {
            throw new Error('Metadata: Invalid metadata');
        }
    }
    // TODO: support assemblyscript metadata
}

export { ProgramMetadata, getProgramMetadata };
