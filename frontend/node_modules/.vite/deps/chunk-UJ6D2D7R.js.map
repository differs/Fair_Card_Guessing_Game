{
  "version": 3,
  "sources": ["../../has-symbols/shams.js", "../../has-tostringtag/shams.js", "../../has-symbols/index.js", "../../has-proto/index.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../has/src/index.js", "../../get-intrinsic/index.js", "../../call-bind/index.js", "../../call-bind/callBound.js", "../../is-arguments/index.js", "../../is-generator-function/index.js", "../../is-callable/index.js", "../../for-each/index.js", "../../available-typed-arrays/index.js", "../../gopd/index.js", "../../is-typed-array/index.js", "../../which-typed-array/index.js", "../../util/support/types.js", "../../util/support/isBufferBrowser.js", "../../inherits/inherits_browser.js", "../../util/util.js", "../../assert/build/internal/errors.js", "../../assert/build/internal/assert/assertion_error.js", "../../es6-object-assign/index.js", "../../object-keys/isArguments.js", "../../object-keys/implementation.js", "../../object-keys/index.js", "../../has-property-descriptors/index.js", "../../define-properties/index.js", "../../object-is/implementation.js", "../../object-is/polyfill.js", "../../object-is/shim.js", "../../object-is/index.js", "../../is-nan/implementation.js", "../../is-nan/polyfill.js", "../../is-nan/shim.js", "../../is-nan/index.js", "../../assert/build/internal/util/comparisons.js", "../../assert/build/assert.js", "../../@gear-js/api/index.js", "../../@polkadot/api-augment/index.js", "../../@polkadot/api-augment/detectPackage.js", "../../@polkadot/api-augment/detectOther.js", "../../@polkadot/api-base/packageInfo.js", "../../@polkadot/types/packageInfo.js", "../../@polkadot/types-codec/packageInfo.js", "../../@polkadot/api-augment/packageInfo.js", "../../@polkadot/api-augment/bundle.js", "../../@polkadot/api-augment/substrate/index.js", "../../@polkadot/api-augment/base.js", "../../@polkadot/rpc-augment/index.js", "../../@polkadot/rpc-augment/detectPackage.js", "../../@polkadot/rpc-augment/detectOther.js", "../../@polkadot/rpc-core/packageInfo.js", "../../@polkadot/rpc-augment/packageInfo.js", "../../@polkadot/rpc-augment/bundle.js", "../../@polkadot/rpc-augment/augment/index.js", "../../@polkadot/rpc-augment/augment/jsonrpc.js", "../../@polkadot/rpc-core/types/jsonrpc.js", "../../@polkadot/types-augment/index.js", "../../@polkadot/types-augment/detectPackage.js", "../../@polkadot/types-augment/detectOther.js", "../../@polkadot/types-augment/packageInfo.js", "../../@polkadot/types-augment/bundle.js", "../../@polkadot/types-augment/augment.js", "../../@polkadot/types-augment/registry/index.js", "../../@polkadot/types-augment/registry/interfaces.js", "../../@polkadot/types/types/registry.js", "../../@polkadot/types-augment/lookup/index.js", "../../@polkadot/types-augment/lookup/types.js", "../../@polkadot/types-augment/lookup/types-substrate.js", "../../@polkadot/types/lookup.js", "../../@polkadot/types-augment/lookup/types-polkadot.js", "../../@polkadot/types-augment/lookup/types-kusama.js", "../../@polkadot/api-augment/substrate/consts.js", "../../@polkadot/api-base/types/consts.js", "../../@polkadot/api-augment/substrate/errors.js", "../../@polkadot/api-base/types/errors.js", "../../@polkadot/api-augment/substrate/events.js", "../../@polkadot/api-base/types/events.js", "../../@polkadot/api-augment/substrate/query.js", "../../@polkadot/api-base/types/storage.js", "../../@polkadot/api-augment/substrate/registry.js", "../../@polkadot/types-augment/registry/substrate.js", "../../@polkadot/api-augment/substrate/runtime.js", "../../@polkadot/api-base/types/calls.js", "../../@polkadot/api-augment/substrate/tx.js", "../../@polkadot/api-base/types/submittable.js", "../../@gear-js/api/GearApi.js", "../../@polkadot/api/index.js", "../../@polkadot/api/detectPackage.js", "../../@polkadot/api/detectOther.js", "../../@polkadot/api-derive/packageInfo.js", "../../@polkadot/rpc-provider/packageInfo.js", "../../@polkadot/types-known/packageInfo.js", "../../@polkadot/api/packageInfo.js", "../../@polkadot/api/bundle.js", "../../@polkadot/keyring/index.js", "../../@polkadot/keyring/detectPackage.js", "../../@polkadot/keyring/detectOther.js", "../../@polkadot/keyring/packageInfo.js", "../../@polkadot/keyring/bundle.js", "../../@polkadot/keyring/keyring.js", "../../@polkadot/keyring/pair/index.js", "../../@polkadot/keyring/pair/decode.js", "../../@polkadot/keyring/pair/defaults.js", "../../@polkadot/keyring/pair/encode.js", "../../@polkadot/keyring/pair/toJson.js", "../../@polkadot/keyring/defaults.js", "../../@polkadot/keyring/pairs.js", "../../@polkadot/keyring/testing.js", "../../@polkadot/keyring/testingPairs.js", "../../@polkadot/keyring/pair/nobody.js", "../../@polkadot/rpc-provider/index.js", "../../@polkadot/rpc-provider/detectPackage.js", "../../@polkadot/rpc-provider/detectOther.js", "../../@polkadot/rpc-provider/bundle.js", "../../@polkadot/rpc-provider/http/index.js", "../../@polkadot/x-fetch/browser.js", "../../@polkadot/x-fetch/packageInfo.js", "../../@polkadot/rpc-provider/coder/index.js", "../../@polkadot/rpc-provider/coder/error.js", "../../@polkadot/rpc-provider/defaults.js", "../../@polkadot/rpc-provider/lru.js", "../../@polkadot/rpc-provider/substrate-connect/index.js", "../../@polkadot/rpc-provider/substrate-connect/Health.js", "../../@polkadot/rpc-provider/ws/index.js", "../../@polkadot/x-ws/browser.js", "../../@polkadot/x-ws/packageInfo.js", "../../@polkadot/rpc-provider/ws/errors.js", "../../@polkadot/api/submittable/index.js", "../../@polkadot/api/submittable/createSubmittable.js", "../../@polkadot/api/submittable/createClass.js", "../../rxjs/src/index.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/node_modules/tslib/tslib.es6.js", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/util/isObservable.ts", "../../rxjs/src/internal/lastValueFrom.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/firstValueFrom.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/util/isDate.ts", "../../rxjs/src/internal/observable/bindCallback.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/observable/bindNodeCallback.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/observable/connectable.ts", "../../rxjs/src/internal/observable/defer.ts", "../../rxjs/src/internal/observable/forkJoin.ts", "../../rxjs/src/internal/observable/fromEventPattern.ts", "../../rxjs/src/internal/observable/iif.ts", "../../rxjs/src/internal/observable/interval.ts", "../../rxjs/src/internal/observable/timer.ts", "../../rxjs/src/internal/observable/merge.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/observable/onErrorResumeNext.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/observable/pairs.ts", "../../rxjs/src/internal/observable/partition.ts", "../../rxjs/src/internal/util/not.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/observable/race.ts", "../../rxjs/src/internal/observable/range.ts", "../../rxjs/src/internal/observable/using.ts", "../../rxjs/dist/esm5/internal/types.js", "../../rxjs/src/internal/operators/audit.ts", "../../rxjs/src/internal/operators/auditTime.ts", "../../rxjs/src/internal/operators/buffer.ts", "../../rxjs/src/internal/operators/bufferWhen.ts", "../../rxjs/src/internal/operators/catchError.ts", "../../rxjs/src/internal/operators/combineAll.ts", "../../rxjs/src/internal/operators/combineLatestAll.ts", "../../rxjs/src/internal/operators/joinAllInternals.ts", "../../rxjs/src/internal/operators/toArray.ts", "../../rxjs/src/internal/operators/reduce.ts", "../../rxjs/src/internal/operators/scanInternals.ts", "../../rxjs/src/internal/operators/concatMap.ts", "../../rxjs/src/internal/operators/concatMapTo.ts", "../../rxjs/src/internal/operators/connect.ts", "../../rxjs/src/internal/observable/fromSubscribable.ts", "../../rxjs/src/internal/operators/count.ts", "../../rxjs/src/internal/operators/debounce.ts", "../../rxjs/src/internal/operators/debounceTime.ts", "../../rxjs/src/internal/operators/defaultIfEmpty.ts", "../../rxjs/src/internal/operators/delay.ts", "../../rxjs/src/internal/operators/delayWhen.ts", "../../rxjs/src/internal/operators/take.ts", "../../rxjs/src/internal/operators/ignoreElements.ts", "../../rxjs/src/internal/operators/mapTo.ts", "../../rxjs/src/internal/operators/dematerialize.ts", "../../rxjs/src/internal/operators/distinct.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../rxjs/src/internal/operators/elementAt.ts", "../../rxjs/src/internal/operators/throwIfEmpty.ts", "../../rxjs/src/internal/operators/every.ts", "../../rxjs/src/internal/operators/exhaust.ts", "../../rxjs/src/internal/operators/exhaustAll.ts", "../../rxjs/src/internal/operators/exhaustMap.ts", "../../rxjs/src/internal/operators/expand.ts", "../../rxjs/src/internal/operators/finalize.ts", "../../rxjs/src/internal/operators/find.ts", "../../rxjs/src/internal/operators/findIndex.ts", "../../rxjs/src/internal/operators/first.ts", "../../rxjs/src/internal/operators/groupBy.ts", "../../rxjs/src/internal/operators/isEmpty.ts", "../../rxjs/src/internal/operators/last.ts", "../../rxjs/src/internal/operators/materialize.ts", "../../rxjs/src/internal/operators/max.ts", "../../rxjs/src/internal/operators/flatMap.ts", "../../rxjs/src/internal/operators/mergeMapTo.ts", "../../rxjs/src/internal/operators/mergeScan.ts", "../../rxjs/src/internal/operators/min.ts", "../../rxjs/src/internal/operators/multicast.ts", "../../rxjs/src/internal/operators/pairwise.ts", "../../rxjs/src/internal/operators/pluck.ts", "../../rxjs/src/internal/operators/publish.ts", "../../rxjs/src/internal/operators/publishBehavior.ts", "../../rxjs/src/internal/operators/publishLast.ts", "../../rxjs/src/internal/operators/publishReplay.ts", "../../rxjs/src/internal/operators/repeat.ts", "../../rxjs/src/internal/operators/repeatWhen.ts", "../../rxjs/src/internal/operators/retry.ts", "../../rxjs/src/internal/operators/retryWhen.ts", "../../rxjs/src/internal/operators/sample.ts", "../../rxjs/src/internal/operators/sampleTime.ts", "../../rxjs/src/internal/operators/scan.ts", "../../rxjs/src/internal/operators/sequenceEqual.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/single.ts", "../../rxjs/src/internal/operators/skip.ts", "../../rxjs/src/internal/operators/skipLast.ts", "../../rxjs/src/internal/operators/skipUntil.ts", "../../rxjs/src/internal/operators/skipWhile.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/switchAll.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/switchMapTo.ts", "../../rxjs/src/internal/operators/switchScan.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/takeWhile.ts", "../../rxjs/src/internal/operators/tap.ts", "../../rxjs/src/internal/operators/throttle.ts", "../../rxjs/src/internal/operators/throttleTime.ts", "../../rxjs/src/internal/operators/timeInterval.ts", "../../rxjs/src/internal/operators/timeoutWith.ts", "../../rxjs/src/internal/operators/timestamp.ts", "../../rxjs/src/internal/operators/window.ts", "../../rxjs/src/internal/operators/windowTime.ts", "../../rxjs/src/internal/operators/windowWhen.ts", "../../rxjs/src/internal/operators/zipAll.ts", "../../@polkadot/api/util/index.js", "../../@polkadot/api/util/filterEvents.js", "../../@polkadot/api/util/logging.js", "../../@polkadot/api/util/isKeyringPair.js", "../../@polkadot/api/util/decorate.js", "../../@polkadot/api-derive/index.js", "../../@polkadot/api-derive/detectPackage.js", "../../@polkadot/api-derive/detectOther.js", "../../@polkadot/api-derive/bundle.js", "../../@polkadot/api-derive/util/index.js", "../../@polkadot/rpc-core/index.js", "../../@polkadot/rpc-core/detectPackage.js", "../../@polkadot/rpc-core/detectOther.js", "../../@polkadot/rpc-core/bundle.js", "../../@polkadot/types/index.js", "../../@polkadot/types/detectPackage.js", "../../@polkadot/types/detectOther.js", "../../@polkadot/types-create/packageInfo.js", "../../@polkadot/types/bundle.js", "../../@polkadot/types/interfaces/definitions.js", "../../@polkadot/types/interfaces/essentials.js", "../../@polkadot/types/interfaces/metadata/definitions.js", "../../@polkadot/types/interfaces/metadata/hashers.js", "../../@polkadot/types/interfaces/metadata/runtime.js", "../../@polkadot/types/interfaces/metadata/v9.js", "../../@polkadot/types/interfaces/metadata/v10.js", "../../@polkadot/types/interfaces/metadata/v11.js", "../../@polkadot/types/interfaces/metadata/v12.js", "../../@polkadot/types/interfaces/metadata/v13.js", "../../@polkadot/types/interfaces/metadata/v14.js", "../../@polkadot/types/interfaces/scaleInfo/v1.js", "../../@polkadot/types/interfaces/metadata/v15.js", "../../@polkadot/types/interfaces/runtime/definitions.js", "../../@polkadot/types/interfaces/runtime/runtime.js", "../../@polkadot/types/interfaces/scaleInfo/definitions.js", "../../@polkadot/types/interfaces/scaleInfo/v0.js", "../../@polkadot/types/interfaces/assets/definitions.js", "../../@polkadot/types/interfaces/assets/runtime.js", "../../@polkadot/types/interfaces/aura/definitions.js", "../../@polkadot/types/interfaces/aura/runtime.js", "../../@polkadot/types/interfaces/authorship/definitions.js", "../../@polkadot/types/interfaces/babe/definitions.js", "../../@polkadot/types/interfaces/babe/rpc.js", "../../@polkadot/types/interfaces/babe/runtime.js", "../../@polkadot/types/interfaces/balances/definitions.js", "../../@polkadot/types/interfaces/beefy/definitions.js", "../../@polkadot/types/interfaces/beefy/rpc.js", "../../@polkadot/types/interfaces/beefy/runtime.js", "../../@polkadot/types/interfaces/benchmark/definitions.js", "../../@polkadot/types/interfaces/benchmark/runtime.js", "../../@polkadot/types/interfaces/blockbuilder/definitions.js", "../../@polkadot/types/interfaces/blockbuilder/runtime.js", "../../@polkadot/types/interfaces/collective/definitions.js", "../../@polkadot/types/interfaces/consensus/definitions.js", "../../@polkadot/types/interfaces/contracts/definitions.js", "../../@polkadot/types/interfaces/contracts/rpc.js", "../../@polkadot/types/interfaces/contracts/runtime.js", "../../@polkadot/types/interfaces/democracy/definitions.js", "../../@polkadot/types/interfaces/dev/definitions.js", "../../@polkadot/types/interfaces/dev/rpc.js", "../../@polkadot/types/interfaces/discovery/definitions.js", "../../@polkadot/types/interfaces/discovery/runtime.js", "../../@polkadot/types/interfaces/elections/definitions.js", "../../@polkadot/types/interfaces/engine/definitions.js", "../../@polkadot/types/interfaces/engine/rpc.js", "../../@polkadot/types/interfaces/evm/definitions.js", "../../@polkadot/types/interfaces/extrinsics/definitions.js", "../../@polkadot/types/interfaces/fungibles/definitions.js", "../../@polkadot/types/interfaces/fungibles/runtime.js", "../../@polkadot/types/interfaces/genericAsset/definitions.js", "../../@polkadot/types/interfaces/gilt/definitions.js", "../../@polkadot/types/interfaces/grandpa/definitions.js", "../../@polkadot/types/interfaces/grandpa/rpc.js", "../../@polkadot/types/interfaces/grandpa/runtime.js", "../../@polkadot/types/interfaces/identity/definitions.js", "../../@polkadot/types/interfaces/imOnline/definitions.js", "../../@polkadot/types/interfaces/lottery/definitions.js", "../../@polkadot/types/interfaces/mmr/definitions.js", "../../@polkadot/types/interfaces/mmr/rpc.js", "../../@polkadot/types/interfaces/mmr/runtime.js", "../../@polkadot/types/interfaces/nfts/definitions.js", "../../@polkadot/types/interfaces/nfts/runtime.js", "../../@polkadot/types/interfaces/nompools/definitions.js", "../../@polkadot/types/interfaces/nompools/runtime.js", "../../@polkadot/types/interfaces/offences/definitions.js", "../../@polkadot/types/interfaces/pow/definitions.js", "../../@polkadot/types/interfaces/pow/runtime.js", "../../@polkadot/types/interfaces/proxy/definitions.js", "../../@polkadot/types/interfaces/recovery/definitions.js", "../../@polkadot/types/interfaces/scheduler/definitions.js", "../../@polkadot/types/interfaces/session/definitions.js", "../../@polkadot/types/interfaces/session/runtime.js", "../../@polkadot/types/interfaces/society/definitions.js", "../../@polkadot/types/interfaces/staking/definitions.js", "../../@polkadot/types/interfaces/staking/runtime.js", "../../@polkadot/types/interfaces/support/definitions.js", "../../@polkadot/types/interfaces/syncstate/definitions.js", "../../@polkadot/types/interfaces/syncstate/rpc.js", "../../@polkadot/types/interfaces/system/definitions.js", "../../@polkadot/types/interfaces/system/rpc.js", "../../@polkadot/types/interfaces/system/runtime.js", "../../@polkadot/types/interfaces/treasury/definitions.js", "../../@polkadot/types/interfaces/txpayment/definitions.js", "../../@polkadot/types/interfaces/txqueue/definitions.js", "../../@polkadot/types/interfaces/txqueue/runtime.js", "../../@polkadot/types/interfaces/uniques/definitions.js", "../../@polkadot/types/interfaces/utility/definitions.js", "../../@polkadot/types/interfaces/vesting/definitions.js", "../../@polkadot/types/interfaces/attestations/definitions.js", "../../@polkadot/types/interfaces/bridges/definitions.js", "../../@polkadot/types/interfaces/claims/definitions.js", "../../@polkadot/types/interfaces/crowdloan/definitions.js", "../../@polkadot/types/interfaces/cumulus/definitions.js", "../../@polkadot/types/interfaces/cumulus/runtime.js", "../../@polkadot/types/interfaces/finality/definitions.js", "../../@polkadot/types/interfaces/finality/runtime.js", "../../@polkadot/types/interfaces/parachains/definitions.js", "../../@polkadot/types/interfaces/parachains/hrmp.js", "../../@polkadot/types/interfaces/parachains/runtime.js", "../../@polkadot/types/interfaces/parachains/slots.js", "../../@polkadot/types/interfaces/poll/definitions.js", "../../@polkadot/types/interfaces/purchase/definitions.js", "../../@polkadot/types/interfaces/xcm/definitions.js", "../../@polkadot/types-create/index.js", "../../@polkadot/types-create/detectPackage.js", "../../@polkadot/types-create/detectOther.js", "../../@polkadot/types-create/bundle.js", "../../@polkadot/types-create/types/index.js", "../../@polkadot/types-create/types/augmentRegistry.js", "../../@polkadot/types-codec/types/registry.js", "../../@polkadot/types-create/types/lookup.js", "../../@polkadot/types-create/types/types.js", "../../@polkadot/types-create/exports.js", "../../@polkadot/types-create/create/index.js", "../../@polkadot/types-create/create/class.js", "../../@polkadot/types-codec/index.js", "../../@polkadot/types-codec/detectPackage.js", "../../@polkadot/types-codec/detectOther.js", "../../@polkadot/types-codec/bundle.js", "../../@polkadot/types-codec/abstract/index.js", "../../@polkadot/types-codec/abstract/Array.js", "../../@polkadot/types-codec/utils/compareArray.js", "../../@polkadot/types-codec/utils/util.js", "../../@polkadot/types-codec/abstract/Base.js", "../../@polkadot/types-codec/abstract/Int.js", "../../@polkadot/types-codec/base/index.js", "../../@polkadot/types-codec/base/Compact.js", "../../@polkadot/types-codec/utils/index.js", "../../@polkadot/types-codec/utils/compareMap.js", "../../@polkadot/types-codec/utils/compareSet.js", "../../@polkadot/types-codec/utils/decodeU8a.js", "../../@polkadot/types-codec/utils/sanitize.js", "../../@polkadot/types-codec/utils/sortValues.js", "../../@polkadot/types-codec/utils/toConstructors.js", "../../@polkadot/types-codec/utils/typesToMap.js", "../../@polkadot/types-codec/base/DoNotConstruct.js", "../../@polkadot/types-codec/base/Enum.js", "../../@polkadot/types-codec/base/Null.js", "../../@polkadot/types-codec/base/Int.js", "../../@polkadot/types-codec/base/Option.js", "../../@polkadot/types-codec/base/Result.js", "../../@polkadot/types-codec/base/Tuple.js", "../../@polkadot/types-codec/base/UInt.js", "../../@polkadot/types-codec/base/Vec.js", "../../@polkadot/types-codec/base/VecAny.js", "../../@polkadot/types-codec/base/VecFixed.js", "../../@polkadot/types-codec/extended/index.js", "../../@polkadot/types-codec/extended/BitVec.js", "../../@polkadot/types-codec/native/Raw.js", "../../@polkadot/types-codec/extended/BTreeMap.js", "../../@polkadot/types-codec/extended/Map.js", "../../@polkadot/types-codec/native/Struct.js", "../../@polkadot/types-codec/extended/BTreeSet.js", "../../@polkadot/types-codec/extended/Bytes.js", "../../@polkadot/types-codec/extended/HashMap.js", "../../@polkadot/types-codec/extended/Linkage.js", "../../@polkadot/types-codec/extended/OptionBool.js", "../../@polkadot/types-codec/native/Bool.js", "../../@polkadot/types-codec/extended/Range.js", "../../@polkadot/types-codec/extended/RangeInclusive.js", "../../@polkadot/types-codec/extended/Type.js", "../../@polkadot/types-codec/native/Text.js", "../../@polkadot/types-codec/extended/U8aFixed.js", "../../@polkadot/types-codec/extended/WrapperKeepOpaque.js", "../../@polkadot/types-codec/extended/WrapperOpaque.js", "../../@polkadot/types-codec/native/index.js", "../../@polkadot/types-codec/native/Date.js", "../../@polkadot/types-codec/native/Float.js", "../../@polkadot/types-codec/native/Json.js", "../../@polkadot/types-codec/native/Set.js", "../../@polkadot/types-codec/primitive/index.js", "../../@polkadot/types-codec/primitive/F32.js", "../../@polkadot/types-codec/primitive/F64.js", "../../@polkadot/types-codec/primitive/I8.js", "../../@polkadot/types-codec/primitive/I16.js", "../../@polkadot/types-codec/primitive/I32.js", "../../@polkadot/types-codec/primitive/I64.js", "../../@polkadot/types-codec/primitive/I128.js", "../../@polkadot/types-codec/primitive/I256.js", "../../@polkadot/types-codec/primitive/ISize.js", "../../@polkadot/types-codec/primitive/U8.js", "../../@polkadot/types-codec/primitive/U16.js", "../../@polkadot/types-codec/primitive/U32.js", "../../@polkadot/types-codec/primitive/U64.js", "../../@polkadot/types-codec/primitive/U128.js", "../../@polkadot/types-codec/primitive/U256.js", "../../@polkadot/types-codec/primitive/USize.js", "../../@polkadot/types-create/util/getTypeDef.js", "../../@polkadot/types-create/util/typeSplit.js", "../../@polkadot/types-create/create/type.js", "../../@polkadot/types-create/util/index.js", "../../@polkadot/types-create/util/encodeTypes.js", "../../@polkadot/types-create/util/xcm.js", "../../@polkadot/types/interfaces/xcm/v0.js", "../../@polkadot/types/interfaces/xcm/v1.js", "../../@polkadot/types/interfaces/xcm/v2.js", "../../@polkadot/types/interfaces/contractsAbi/definitions.js", "../../@polkadot/types/interfaces/eth/definitions.js", "../../@polkadot/types/interfaces/eth/rpc.js", "../../@polkadot/types/interfaces/eth/runtime.js", "../../@polkadot/types/interfaces/nimbus/definitions.js", "../../@polkadot/types/interfaces/nimbus/runtime.js", "../../@polkadot/types/interfaces/ormlOracle/definitions.js", "../../@polkadot/types/interfaces/ormlOracle/runtime.js", "../../@polkadot/types/interfaces/ormlTokens/definitions.js", "../../@polkadot/types/interfaces/ormlTokens/runtime.js", "../../@polkadot/types/interfaces/rpc/definitions.js", "../../@polkadot/types/interfaces/rpc/rpc.js", "../../@polkadot/types/interfaces/author/definitions.js", "../../@polkadot/types/interfaces/author/rpc.js", "../../@polkadot/types/interfaces/chain/definitions.js", "../../@polkadot/types/interfaces/chain/rpc.js", "../../@polkadot/types/interfaces/childstate/definitions.js", "../../@polkadot/types/interfaces/childstate/rpc.js", "../../@polkadot/types/interfaces/offchain/definitions.js", "../../@polkadot/types/interfaces/offchain/rpc.js", "../../@polkadot/types/interfaces/offchain/runtime.js", "../../@polkadot/types/interfaces/payment/definitions.js", "../../@polkadot/types/interfaces/payment/rpc.js", "../../@polkadot/types/interfaces/payment/runtime.js", "../../@polkadot/types/interfaces/state/definitions.js", "../../@polkadot/types/interfaces/state/rpc.js", "../../@polkadot/types/interfaces/jsonrpc.js", "../../@polkadot/types/metadata/PortableRegistry/index.js", "../../@polkadot/types/metadata/PortableRegistry/PortableRegistry.js", "../../@polkadot/types/metadata/PortableRegistry/toV1.js", "../../@polkadot/types/util/index.js", "../../@polkadot/types/util/storage.js", "../../@polkadot/types/metadata/util/index.js", "../../@polkadot/types/metadata/util/flattenUniq.js", "../../@polkadot/types/metadata/util/getSiName.js", "../../@polkadot/types/metadata/util/getUniqTypes.js", "../../@polkadot/types/metadata/util/validateTypes.js", "../../@polkadot/types/metadata/util/extractTypes.js", "../../@polkadot/types/metadata/util/toCallsOnly.js", "../../@polkadot/types/codec/index.js", "../../@polkadot/types/create/index.js", "../../@polkadot/types/create/createClass.js", "../../@polkadot/types/create/createType.js", "../../@polkadot/types/create/lazy.js", "../../@polkadot/types/create/registry.js", "../../@polkadot/types/extrinsic/signedExtensions/index.js", "../../@polkadot/types/extrinsic/signedExtensions/polkadot.js", "../../@polkadot/types/extrinsic/signedExtensions/emptyCheck.js", "../../@polkadot/types/extrinsic/signedExtensions/shell.js", "../../@polkadot/types/extrinsic/signedExtensions/statemint.js", "../../@polkadot/types/extrinsic/signedExtensions/substrate.js", "../../@polkadot/types/generic/Event.js", "../../@polkadot/types/index.types.js", "../../@polkadot/types/extrinsic/index.js", "../../@polkadot/types/extrinsic/Extrinsic.js", "../../@polkadot/types/extrinsic/v4/Extrinsic.js", "../../@polkadot/types/extrinsic/constants.js", "../../@polkadot/types/extrinsic/ExtrinsicEra.js", "../../@polkadot/types/extrinsic/ExtrinsicPayload.js", "../../@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js", "../../@polkadot/types/extrinsic/ExtrinsicUnknown.js", "../../@polkadot/types/extrinsic/SignerPayload.js", "../../@polkadot/types/extrinsic/v4/index.js", "../../@polkadot/types/extrinsic/v4/ExtrinsicPayload.js", "../../@polkadot/types/extrinsic/util.js", "../../@polkadot/types/extrinsic/v4/ExtrinsicSignature.js", "../../@polkadot/types/generic/index.js", "../../@polkadot/types/generic/AccountId.js", "../../@polkadot/types/generic/AccountIndex.js", "../../@polkadot/types/generic/Block.js", "../../@polkadot/types/generic/Call.js", "../../@polkadot/types/generic/ChainProperties.js", "../../@polkadot/types/generic/ConsensusEngineId.js", "../../@polkadot/types/generic/LookupSource.js", "../../@polkadot/types/generic/MultiAddress.js", "../../@polkadot/types/generic/Vote.js", "../../@polkadot/types/ethereum/index.js", "../../@polkadot/types/ethereum/AccountId.js", "../../@polkadot/types/ethereum/LookupSource.js", "../../@polkadot/types/primitive/index.js", "../../@polkadot/types/primitive/Data.js", "../../@polkadot/types/primitive/StorageKey.js", "../../@polkadot/types/metadata/decorate/extrinsics/index.js", "../../@polkadot/types/metadata/decorate/util.js", "../../@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js", "../../@polkadot/types/metadata/decorate/index.js", "../../@polkadot/types/metadata/Metadata.js", "../../@polkadot/types/metadata/MetadataVersioned.js", "../../@polkadot/types/metadata/v9/toV10.js", "../../@polkadot/types/metadata/v10/toV11.js", "../../@polkadot/types/metadata/v11/toV12.js", "../../@polkadot/types/metadata/v12/toV13.js", "../../@polkadot/types/metadata/v13/toV14.js", "../../@polkadot/types/interfaces/alias.js", "../../@polkadot/types/metadata/v14/toV15.js", "../../@polkadot/types/metadata/v15/toLatest.js", "../../@polkadot/types/metadata/MagicNumber.js", "../../@polkadot/types/metadata/versions.js", "../../@polkadot/types/metadata/decorate/constants/index.js", "../../@polkadot/types/metadata/decorate/errors/index.js", "../../@polkadot/types/metadata/decorate/events/index.js", "../../@polkadot/types/metadata/decorate/storage/index.js", "../../@polkadot/types/metadata/decorate/storage/createFunction.js", "../../@polkadot/types/metadata/decorate/storage/getHasher.js", "../../@polkadot/types/metadata/decorate/storage/getStorage.js", "../../@polkadot/types/metadata/decorate/storage/substrate.js", "../../@polkadot/types/metadata/decorate/storage/util.js", "../../@polkadot/types/metadata/index.js", "../../@polkadot/rpc-core/util/index.js", "../../@polkadot/rpc-core/util/drr.js", "../../@polkadot/rpc-core/util/refCountDelay.js", "../../@polkadot/rpc-core/util/memo.js", "../../@polkadot/api-derive/util/approvalFlagsToBools.js", "../../@polkadot/api-derive/util/blockNumber.js", "../../@polkadot/api-derive/util/cache.js", "../../@polkadot/api-derive/util/cacheImpl.js", "../../@polkadot/api-derive/util/first.js", "../../@polkadot/api-derive/util/lazy.js", "../../@polkadot/api-derive/derive.js", "../../@polkadot/api-derive/accounts/index.js", "../../@polkadot/api-derive/accounts/accountId.js", "../../@polkadot/api-derive/accounts/flags.js", "../../@polkadot/api-derive/accounts/idAndIndex.js", "../../@polkadot/api-derive/accounts/identity.js", "../../@polkadot/api-derive/accounts/idToIndex.js", "../../@polkadot/api-derive/accounts/indexes.js", "../../@polkadot/api-derive/accounts/indexToId.js", "../../@polkadot/api-derive/accounts/info.js", "../../@polkadot/api-derive/alliance/index.js", "../../@polkadot/api-derive/collective/index.js", "../../@polkadot/api-derive/collective/members.js", "../../@polkadot/api-derive/collective/helpers.js", "../../@polkadot/api-derive/collective/prime.js", "../../@polkadot/api-derive/collective/proposals.js", "../../@polkadot/api-derive/bagsList/index.js", "../../@polkadot/api-derive/bagsList/get.js", "../../@polkadot/api-derive/bagsList/util.js", "../../@polkadot/api-derive/bagsList/getExpanded.js", "../../@polkadot/api-derive/bagsList/listNodes.js", "../../@polkadot/api-derive/balances/index.js", "../../@polkadot/api-derive/balances/all.js", "../../@polkadot/api-derive/balances/account.js", "../../@polkadot/api-derive/balances/votingBalances.js", "../../@polkadot/api-derive/bounties/index.js", "../../@polkadot/api-derive/bounties/bounties.js", "../../@polkadot/api-derive/bounties/helpers/filterBountyProposals.js", "../../@polkadot/api-derive/chain/index.js", "../../@polkadot/api-derive/chain/bestNumber.js", "../../@polkadot/api-derive/chain/util.js", "../../@polkadot/api-derive/chain/bestNumberFinalized.js", "../../@polkadot/api-derive/chain/bestNumberLag.js", "../../@polkadot/api-derive/chain/getBlock.js", "../../@polkadot/api-derive/type/index.js", "../../@polkadot/api-derive/type/HeaderExtended.js", "../../@polkadot/api-derive/type/util.js", "../../@polkadot/api-derive/type/SignedBlockExtended.js", "../../@polkadot/api-derive/chain/getBlockByNumber.js", "../../@polkadot/api-derive/chain/getHeader.js", "../../@polkadot/api-derive/chain/subscribeFinalizedHeads.js", "../../@polkadot/api-derive/chain/subscribeNewBlocks.js", "../../@polkadot/api-derive/chain/subscribeNewHeads.js", "../../@polkadot/api-derive/contracts/index.js", "../../@polkadot/api-derive/contracts/fees.js", "../../@polkadot/api-derive/council/index.js", "../../@polkadot/api-derive/council/votes.js", "../../@polkadot/api-derive/council/votesOf.js", "../../@polkadot/api-derive/crowdloan/index.js", "../../@polkadot/api-derive/crowdloan/childKey.js", "../../@polkadot/api-derive/crowdloan/contributions.js", "../../@polkadot/api-derive/crowdloan/util.js", "../../@polkadot/api-derive/crowdloan/ownContributions.js", "../../@polkadot/api-derive/democracy/index.js", "../../@polkadot/api-derive/democracy/dispatchQueue.js", "../../@polkadot/api-derive/democracy/util.js", "../../@polkadot/api-derive/democracy/locks.js", "../../@polkadot/api-derive/democracy/nextExternal.js", "../../@polkadot/api-derive/democracy/preimages.js", "../../@polkadot/api-derive/democracy/proposals.js", "../../@polkadot/api-derive/democracy/referendumIds.js", "../../@polkadot/api-derive/democracy/referendums.js", "../../@polkadot/api-derive/democracy/referendumsActive.js", "../../@polkadot/api-derive/democracy/referendumsFinished.js", "../../@polkadot/api-derive/democracy/referendumsInfo.js", "../../@polkadot/api-derive/democracy/sqrtElectorate.js", "../../@polkadot/api-derive/elections/index.js", "../../@polkadot/api-derive/elections/info.js", "../../@polkadot/api-derive/imOnline/index.js", "../../@polkadot/api-derive/imOnline/receivedHeartbeats.js", "../../@polkadot/api-derive/membership/index.js", "../../@polkadot/api-derive/parachains/index.js", "../../@polkadot/api-derive/parachains/info.js", "../../@polkadot/api-derive/parachains/util.js", "../../@polkadot/api-derive/parachains/overview.js", "../../@polkadot/api-derive/session/index.js", "../../@polkadot/api-derive/session/indexes.js", "../../@polkadot/api-derive/session/info.js", "../../@polkadot/api-derive/session/progress.js", "../../@polkadot/api-derive/society/index.js", "../../@polkadot/api-derive/society/candidates.js", "../../@polkadot/api-derive/society/info.js", "../../@polkadot/api-derive/society/member.js", "../../@polkadot/api-derive/society/members.js", "../../@polkadot/api-derive/staking/index.js", "../../@polkadot/api-derive/staking/account.js", "../../@polkadot/api-derive/staking/currentPoints.js", "../../@polkadot/api-derive/staking/electedInfo.js", "../../@polkadot/api-derive/staking/erasExposure.js", "../../@polkadot/api-derive/staking/cache.js", "../../@polkadot/api-derive/staking/util.js", "../../@polkadot/api-derive/staking/erasHistoric.js", "../../@polkadot/api-derive/staking/erasPoints.js", "../../@polkadot/api-derive/staking/erasPrefs.js", "../../@polkadot/api-derive/staking/erasRewards.js", "../../@polkadot/api-derive/staking/erasSlashes.js", "../../@polkadot/api-derive/staking/keys.js", "../../@polkadot/api-derive/staking/overview.js", "../../@polkadot/api-derive/staking/ownExposure.js", "../../@polkadot/api-derive/staking/ownSlashes.js", "../../@polkadot/api-derive/staking/query.js", "../../@polkadot/api-derive/staking/stakerExposure.js", "../../@polkadot/api-derive/staking/stakerPoints.js", "../../@polkadot/api-derive/staking/stakerPrefs.js", "../../@polkadot/api-derive/staking/stakerRewards.js", "../../@polkadot/api-derive/staking/stakerSlashes.js", "../../@polkadot/api-derive/staking/stashes.js", "../../@polkadot/api-derive/staking/validators.js", "../../@polkadot/api-derive/staking/waitingInfo.js", "../../@polkadot/api-derive/technicalCommittee/index.js", "../../@polkadot/api-derive/treasury/index.js", "../../@polkadot/api-derive/treasury/proposals.js", "../../@polkadot/api-derive/tx/index.js", "../../@polkadot/api-derive/tx/events.js", "../../@polkadot/api-derive/tx/signingInfo.js", "../../@polkadot/api-derive/tx/constants.js", "../../@polkadot/api/submittable/Result.js", "../../@polkadot/api/promise/index.js", "../../@polkadot/api/promise/Api.js", "../../@polkadot/api/base/index.js", "../../@polkadot/api/base/Getters.js", "../../@polkadot/api/base/find.js", "../../@polkadot/api/base/Init.js", "../../@polkadot/types-known/index.js", "../../@polkadot/types-known/detectPackage.js", "../../@polkadot/types-known/detectOther.js", "../../@polkadot/types-known/bundle.js", "../../@polkadot/types-known/util.js", "../../@polkadot/types-known/chain/index.js", "../../@polkadot/types-known/spec/index.js", "../../@polkadot/types-known/spec/centrifuge-chain.js", "../../@polkadot/types-known/spec/kusama.js", "../../@polkadot/types-known/spec/node.js", "../../@polkadot/types-known/spec/node-template.js", "../../@polkadot/types-known/spec/polkadot.js", "../../@polkadot/types-known/spec/rococo.js", "../../@polkadot/types-known/spec/shell.js", "../../@polkadot/types-known/spec/statemint.js", "../../@polkadot/types-known/spec/westend.js", "../../@polkadot/types-known/upgrades/index.js", "../../@polkadot/types-known/upgrades/e2e/index.js", "../../@polkadot/types-known/upgrades/e2e/kusama.js", "../../@polkadot/types-known/upgrades/e2e/polkadot.js", "../../@polkadot/types-known/upgrades/e2e/westend.js", "../../@polkadot/api/base/Decorate.js", "../../@polkadot/api/util/augmentObject.js", "../../@polkadot/api/util/validate.js", "../../@polkadot/api/base/Events.js", "../../@polkadot/api/promise/Combinator.js", "../../@polkadot/api/promise/decorateMethod.js", "../../@polkadot/api/rx/index.js", "../../@polkadot/api/rx/Api.js", "../../@polkadot/api/rx/decorateMethod.js", "../../@gear-js/api/default/index.js", "../../@gear-js/api/default/rpc.json.js", "../../@gear-js/api/default/types-debug.json.js", "../../@gear-js/api/default/types-message.json.js", "../../@gear-js/api/default/types-metadata.json.js", "../../@gear-js/api/default/types-program.json.js", "../../@gear-js/api/utils/types.js", "../../@gear-js/api/utils/regexp.js", "../../@gear-js/api/Balance.js", "../../@gear-js/api/Transaction.js", "../../@gear-js/api/errors/gear.errors.js", "../../@gear-js/api/Blocks.js", "../../@gear-js/api/metadata/create-type.js", "../../@gear-js/api/utils/json.js", "../../@gear-js/api/metadata/metadata.js", "../../@gear-js/api/metadata/programMetadata.js", "../../@gear-js/api/errors/blocks.errors.js", "../../@gear-js/api/Claim.js", "../../@gear-js/api/errors/claim.errors.js", "../../@gear-js/api/Code.js", "../../@gear-js/api/utils/generate.js", "../../@gear-js/api/utils/prefixes.js", "../../@gear-js/api/utils/separator.js", "../../@gear-js/api/utils/validate.js", "../../@gear-js/api/errors/validation.errors.js", "../../@gear-js/api/errors/program.errors.js", "../../@gear-js/api/wasm/reply.js", "../../@gear-js/api/wasm/importObj.js", "../../@gear-js/api/events/Events.js", "../../@gear-js/api/Mailbox.js", "../../@gear-js/api/Message.js", "../../@gear-js/api/errors/message.errors.js", "../../@gear-js/api/utils/create-payload.js", "../../@gear-js/api/metadata/is.js", "../../@gear-js/api/metadata/stateMetadata.js", "../../@gear-js/api/Program.js", "../../@gear-js/api/Gas.js", "../../@gear-js/api/ResumeSession.js", "../../@gear-js/api/State.js", "../../@gear-js/api/Storage.js", "../../@gear-js/api/Voucher.js", "../../@gear-js/api/Waitlist.js", "../../@gear-js/api/Keyring.js", "../../@gear-js/api/utils/address.js", "../../@gear-js/api/DebugMode.js", "../../@gear-js/api/wasm/readState.js", "../../@gear-js/api/wasm/utils.js", "../../@gear-js/api/events/GearEventData.js", "../../@gear-js/api/utils/string.js", "../../@gear-js/api/utils/signature.js"],
  "sourcesContent": ["'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n", "'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n", "'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n", "'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n", "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n", "// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n", "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n", "// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;", "// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;", "/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};", "// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;", "import '@polkadot/api-augment';\nexport { GearApi } from './GearApi.js';\nexport { GearKeyring } from './Keyring.js';\nexport { GearProgram } from './Program.js';\nexport { GearMessage } from './Message.js';\nexport { GearBalance } from './Balance.js';\nexport { DebugMode } from './DebugMode.js';\nexport { GearMailbox } from './Mailbox.js';\nexport { GearProgramState } from './State.js';\nexport { GearBlock } from './Blocks.js';\nexport { GearGas } from './Gas.js';\nexport { GearProgramStorage } from './Storage.js';\nexport { GearClaimValue } from './Claim.js';\nexport { GearWaitlist } from './Waitlist.js';\nexport { GearTransaction } from './Transaction.js';\nimport '@polkadot/types';\nimport 'assert';\nexport { readState } from './wasm/readState.js';\nexport { getGrReply } from './wasm/reply.js';\nexport { GearEventData } from './events/GearEventData.js';\nexport { GearEvents } from './events/Events.js';\nexport { splitByCommas, toCamelCase } from './utils/string.js';\nexport { generateCodeHash, generateProgramId, generateVoucherId } from './utils/generate.js';\nexport { isJSON, toJSON } from './utils/json.js';\nexport { convertString, getTypeAndPayload, joinTypePath, transformTypes, typeIsGeneric, typeIsString } from './utils/types.js';\nexport { GPAGES, GPAGES_HEX, GPROG, GPROG_HEX, getIdsFromKeys } from './utils/prefixes.js';\nexport { SEPARATOR } from './utils/separator.js';\nexport { validateCodeId, validateGasLimit, validateMailboxItem, validateProgramId, validateValue, validateVoucher } from './utils/validate.js';\nexport { decodeAddress, encodeAddress } from './utils/address.js';\nexport { signatureIsValid } from './utils/signature.js';\nexport { REGULAR_EXP } from './utils/regexp.js';\nexport { encodePayload, getRegistry } from './utils/create-payload.js';\nexport { GearMetadata } from './metadata/metadata.js';\nexport { StateMetadata, getStateMetadata } from './metadata/stateMetadata.js';\nexport { ProgramMetadata, getProgramMetadata } from './metadata/programMetadata.js';\nexport { isProgramMeta, isStateMeta } from './metadata/is.js';\nexport { CreateType } from './metadata/create-type.js';\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as baseInfo } from '@polkadot/api-base/packageInfo';\nimport { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nimport { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nexport default [baseInfo, typesInfo, codecInfo];\n", "export const packageInfo = { name: '@polkadot/api-base', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/types', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/types-codec', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/api-augment', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "import './substrate/index.js';\nexport { packageInfo } from './packageInfo.js';\n", "import '../base.js';\nimport './consts.js';\nimport './errors.js';\nimport './events.js';\nimport './query.js';\nimport './registry.js';\nimport './runtime.js';\nimport './tx.js';\n", "import '@polkadot/rpc-augment';\nimport '@polkadot/types-augment';\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as coreInfo } from '@polkadot/rpc-core/packageInfo';\nimport { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nexport default [coreInfo, typesInfo];\n", "export const packageInfo = { name: '@polkadot/rpc-core', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/rpc-augment', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "import './augment/index.js';\nexport { packageInfo } from './packageInfo.js';\n", "import './jsonrpc.js';\n", "/* eslint-disable */\nimport '@polkadot/rpc-core/types/jsonrpc';\n", "export {};\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nimport { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nexport default [typesInfo, codecInfo];\n", "export const packageInfo = { name: '@polkadot/types-augment', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "import './augment.js';\nexport { packageInfo } from './packageInfo.js';\n", "import './registry/index.js';\nimport './lookup/index.js';\n", "import './interfaces.js';\n", "/* eslint-disable */\nimport '@polkadot/types/types/registry';\n", "export {};\n", "/* eslint-disable */\nexport * from './types.js';\n", "import './types-substrate.js';\nimport './types-polkadot.js';\nimport './types-kusama.js';\n", "/* eslint-disable */\nimport '@polkadot/types/lookup';\n", "export const __TYPES_LOOKUP = 'augmented';\n", "/* eslint-disable */\nimport '@polkadot/types/lookup';\n", "/* eslint-disable */\nimport '@polkadot/types/lookup';\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/consts';\n", "export {};\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/errors';\n", "export {};\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/events';\n", "export {};\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/storage';\n", "export {};\n", "import '@polkadot/types-augment/registry/substrate';\n", "/* eslint-disable */\nimport '@polkadot/types/types/registry';\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/calls';\n", "export {};\n", "/* eslint-disable */\nimport '@polkadot/api-base/types/submittable';\n", "export {};\n", "import { ApiPromise, WsProvider } from '@polkadot/api';\nimport { gearTypes, gearRpc } from './default/index.js';\nimport { GearBalance } from './Balance.js';\nimport { GearBlock } from './Blocks.js';\nimport { GearClaimValue } from './Claim.js';\nimport { GearCode } from './Code.js';\nimport '@polkadot/types';\nimport { GearEvents } from './events/Events.js';\nimport { GearMailbox } from './Mailbox.js';\nimport { GearMessage } from './Message.js';\nimport { GearProgram } from './Program.js';\nimport { GearProgramState } from './State.js';\nimport { GearProgramStorage } from './Storage.js';\nimport { GearVoucher } from './Voucher.js';\nimport { GearWaitlist } from './Waitlist.js';\n\nclass GearApi extends ApiPromise {\n    program;\n    programState;\n    programStorage;\n    message;\n    balance;\n    gearEvents;\n    defaultTypes;\n    blocks;\n    mailbox;\n    claimValueFromMailbox;\n    code;\n    waitlist;\n    voucher;\n    provider;\n    constructor(options = {}) {\n        const { types, providerAddress, ...restOptions } = options;\n        const provider = restOptions?.provider || new WsProvider(providerAddress ?? 'ws://127.0.0.1:9944');\n        const defaultTypes = types ? { ...types, ...gearTypes } : gearTypes;\n        super({\n            provider,\n            derives: {},\n            types: {\n                ...defaultTypes,\n            },\n            rpc: {\n                ...gearRpc,\n            },\n            // it's temporarily necessary to avoid the warning \"API/INIT: Not decorating unknown runtime apis: GearApi/1\"\n            runtime: {\n                GearApi: [\n                    {\n                        methods: {},\n                        version: 1,\n                    },\n                ],\n            },\n            ...restOptions,\n        });\n        this.provider = provider;\n        this.program = new GearProgram(this);\n        this.voucher = new GearVoucher(this);\n        this.message = new GearMessage(this);\n        this.balance = new GearBalance(this);\n        this.gearEvents = new GearEvents(this);\n        this.defaultTypes = defaultTypes;\n        this.programState = new GearProgramState(this);\n        this.blocks = new GearBlock(this);\n        this.programStorage = new GearProgramStorage(this);\n        this.claimValueFromMailbox = new GearClaimValue(this);\n        this.mailbox = new GearMailbox(this);\n        this.code = new GearCode(this);\n        this.waitlist = new GearWaitlist(this);\n    }\n    static async create(options) {\n        const api = new GearApi(options);\n        await api.isReady;\n        return api;\n    }\n    async totalIssuance() {\n        return (await this.query.balances.totalIssuance()).toHuman();\n    }\n    async chain() {\n        return (await this.rpc.system.chain()).toHuman();\n    }\n    async nodeName() {\n        return (await this.rpc.system.name()).toHuman();\n    }\n    async nodeVersion() {\n        return (await this.rpc.system.version()).toHuman();\n    }\n    get existentialDeposit() {\n        return this.consts.balances.existentialDeposit;\n    }\n    get blockGasLimit() {\n        return this.consts.gearGas.blockGasLimit;\n    }\n    get mailboxTreshold() {\n        return this.consts.gear.mailboxThreshold;\n    }\n    get waitlistCost() {\n        return this.consts.gearScheduler.waitlistCost;\n    }\n    async wasmBlobVersion() {\n        const result = await this.rpc['runtime'].wasmBlobVersion();\n        return result.toString();\n    }\n    /**\n     * Method provides opportunity to get informations about error occurs in ExtrinsicFailed event\n     * @param event\n     * @returns\n     */\n    getExtrinsicFailedError(event) {\n        const error = event.data[0];\n        const { isModule, asModule } = error;\n        return isModule ? this.registry.findMetaError(asModule) : null;\n    }\n}\n\nexport { GearApi };\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as deriveInfo } from '@polkadot/api-derive/packageInfo';\nimport { packageInfo as coreInfo } from '@polkadot/rpc-core/packageInfo';\nimport { packageInfo as providerInfo } from '@polkadot/rpc-provider/packageInfo';\nimport { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nimport { packageInfo as knownInfo } from '@polkadot/types-known/packageInfo';\nexport default [deriveInfo, coreInfo, providerInfo, typesInfo, knownInfo];\n", "export const packageInfo = { name: '@polkadot/api-derive', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/rpc-provider', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/types-known', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "export const packageInfo = { name: '@polkadot/api', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "import '@polkadot/rpc-augment';\nexport { Keyring } from '@polkadot/keyring';\nexport { HttpProvider, ScProvider, WsProvider } from '@polkadot/rpc-provider';\nexport { packageInfo } from './packageInfo.js';\nexport { SubmittableResult } from './submittable/index.js';\nexport * from './promise/index.js';\nexport * from './rx/index.js';\n", "import './detectPackage.js';\nimport { Keyring } from './bundle.js';\nexport * from './bundle.js';\nexport default Keyring;\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as utilInfo } from '@polkadot/util/packageInfo';\nimport { packageInfo as cryptoInfo } from '@polkadot/util-crypto/packageInfo';\nexport default [utilInfo, cryptoInfo];\n", "export const packageInfo = { name: '@polkadot/keyring', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.3.2' };\n", "export { decodeAddress, encodeAddress, setSS58Format } from '@polkadot/util-crypto';\nexport { Keyring } from './keyring.js';\nexport { packageInfo } from './packageInfo.js';\nexport { createPair } from './pair/index.js';\nexport { createTestKeyring } from './testing.js';\nexport { createTestPairs } from './testingPairs.js';\nexport * from './defaults.js';\n", "import { hexToU8a, isHex, stringToU8a } from '@polkadot/util';\nimport { base64Decode, decodeAddress, ed25519PairFromSeed as ed25519FromSeed, encodeAddress, ethereumEncode, hdEthereum, keyExtractSuri, keyFromPath, mnemonicToLegacySeed, mnemonicToMiniSecret, secp256k1PairFromSeed as secp256k1FromSeed, sr25519PairFromSeed as sr25519FromSeed } from '@polkadot/util-crypto';\nimport { createPair } from './pair/index.js';\nimport { DEV_PHRASE } from './defaults.js';\nimport { Pairs } from './pairs.js';\nconst PairFromSeed = {\n    ecdsa: (seed) => secp256k1FromSeed(seed),\n    ed25519: (seed) => ed25519FromSeed(seed),\n    ethereum: (seed) => secp256k1FromSeed(seed),\n    sr25519: (seed) => sr25519FromSeed(seed)\n};\nfunction pairToPublic({ publicKey }) {\n    return publicKey;\n}\n/**\n * # @polkadot/keyring\n *\n * ## Overview\n *\n * @name Keyring\n * @summary Keyring management of user accounts\n * @description Allows generation of keyring pairs from a variety of input combinations, such as\n * json object containing account address or public key, account metadata, and account encoded using\n * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,\n * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.\n * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair\n * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform\n * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with\n * an account may be obtained using `toJson` accompanied by the account passphrase.\n */\nexport class Keyring {\n    constructor(options = {}) {\n        this.decodeAddress = decodeAddress;\n        /**\n         * @name encodeAddress\n         * @description Encodes the input into an ss58 representation\n         */\n        this.encodeAddress = (address, ss58Format) => {\n            return this.type === 'ethereum'\n                ? ethereumEncode(address)\n                : encodeAddress(address, ss58Format ?? this.__internal__ss58);\n        };\n        options.type = options.type || 'ed25519';\n        if (!['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined')) {\n            throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);\n        }\n        this.__internal__pairs = new Pairs();\n        this.__internal__ss58 = options.ss58Format;\n        this.__internal__type = options.type;\n    }\n    /**\n     * @description retrieve the pairs (alias for getPairs)\n     */\n    get pairs() {\n        return this.getPairs();\n    }\n    /**\n     * @description retrieve the publicKeys (alias for getPublicKeys)\n     */\n    get publicKeys() {\n        return this.getPublicKeys();\n    }\n    /**\n     * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa\n     */\n    get type() {\n        return this.__internal__type;\n    }\n    /**\n     * @name addPair\n     * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     */\n    addPair(pair) {\n        return this.__internal__pairs.add(pair);\n    }\n    /**\n     * @name addFromAddress\n     * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally\n     * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from them that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {\n        const publicKey = this.decodeAddress(address, ignoreChecksum);\n        return this.addPair(createPair({ toSS58: this.encodeAddress, type }, { publicKey, secretKey: new Uint8Array() }, meta, encoded, encType));\n    }\n    /**\n     * @name addFromJson\n     * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from it that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromJson(json, ignoreChecksum) {\n        return this.addPair(this.createFromJson(json, ignoreChecksum));\n    }\n    /**\n     * @name addFromMnemonic\n     * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)\n     * argument and a metadata argument that contains account information (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from it that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromMnemonic(mnemonic, meta = {}, type = this.type) {\n        return this.addFromUri(mnemonic, meta, type);\n    }\n    /**\n     * @name addFromPair\n     * @summary Stores an account created from an explicit publicKey/secreteKey combination\n     */\n    addFromPair(pair, meta = {}, type = this.type) {\n        return this.addPair(this.createFromPair(pair, meta, type));\n    }\n    /**\n     * @name addFromSeed\n     * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.\n     * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to\n     * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromSeed(seed, meta = {}, type = this.type) {\n        return this.addPair(createPair({ toSS58: this.encodeAddress, type }, PairFromSeed[type](seed), meta, null));\n    }\n    /**\n     * @name addFromUri\n     * @summary Creates an account via an suri\n     * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)\n     */\n    addFromUri(suri, meta = {}, type = this.type) {\n        return this.addPair(this.createFromUri(suri, meta, type));\n    }\n    /**\n     * @name createFromJson\n     * @description Creates a pair from a JSON keyfile\n     */\n    createFromJson({ address, encoded, encoding: { content, type, version }, meta }, ignoreChecksum) {\n        if (version === '3' && content[0] !== 'pkcs8') {\n            throw new Error(`Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);\n        }\n        const cryptoType = version === '0' || !Array.isArray(content)\n            ? this.type\n            : content[1];\n        const encType = !Array.isArray(type)\n            ? [type]\n            : type;\n        if (!['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType)) {\n            throw new Error(`Unknown crypto type ${cryptoType}`);\n        }\n        // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs\n        const publicKey = isHex(address)\n            ? hexToU8a(address)\n            : this.decodeAddress(address, ignoreChecksum);\n        const decoded = isHex(encoded)\n            ? hexToU8a(encoded)\n            : base64Decode(encoded);\n        return createPair({ toSS58: this.encodeAddress, type: cryptoType }, { publicKey, secretKey: new Uint8Array() }, meta, decoded, encType);\n    }\n    /**\n     * @name createFromPair\n     * @summary Creates a pair from an explicit publicKey/secreteKey combination\n     */\n    createFromPair(pair, meta = {}, type = this.type) {\n        return createPair({ toSS58: this.encodeAddress, type }, pair, meta, null);\n    }\n    /**\n     * @name createFromUri\n     * @summary Creates a Keypair from an suri\n     * @description This creates a pair from the suri, but does not add it to the keyring\n     */\n    createFromUri(_suri, meta = {}, type = this.type) {\n        // here we only aut-add the dev phrase if we have a hard-derived path\n        const suri = _suri.startsWith('//')\n            ? `${DEV_PHRASE}${_suri}`\n            : _suri;\n        const { derivePath, password, path, phrase } = keyExtractSuri(suri);\n        let seed;\n        const isPhraseHex = isHex(phrase, 256);\n        if (isPhraseHex) {\n            seed = hexToU8a(phrase);\n        }\n        else {\n            const parts = phrase.split(' ');\n            if ([12, 15, 18, 21, 24].includes(parts.length)) {\n                seed = type === 'ethereum'\n                    ? mnemonicToLegacySeed(phrase, '', false, 64)\n                    : mnemonicToMiniSecret(phrase, password);\n            }\n            else {\n                if (phrase.length > 32) {\n                    throw new Error('specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');\n                }\n                seed = stringToU8a(phrase.padEnd(32));\n            }\n        }\n        const derived = type === 'ethereum'\n            ? isPhraseHex\n                ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once\n                : hdEthereum(seed, derivePath.substring(1))\n            : keyFromPath(PairFromSeed[type](seed), path, type);\n        return createPair({ toSS58: this.encodeAddress, type }, derived, meta, null);\n    }\n    /**\n     * @name getPair\n     * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address\n     * @description Returns a keyring pair value from the keyring pair dictionary by performing\n     * a key lookup using the provided account address or public key (after decoding it).\n     */\n    getPair(address) {\n        return this.__internal__pairs.get(address);\n    }\n    /**\n     * @name getPairs\n     * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary\n     * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.\n     */\n    getPairs() {\n        return this.__internal__pairs.all();\n    }\n    /**\n     * @name getPublicKeys\n     * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary\n     * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.\n     */\n    getPublicKeys() {\n        return this.__internal__pairs.all().map(pairToPublic);\n    }\n    /**\n     * @name removePair\n     * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.\n     */\n    removePair(address) {\n        this.__internal__pairs.remove(address);\n    }\n    /**\n     * @name setSS58Format;\n     * @description Sets the ss58 format for the keyring\n     */\n    setSS58Format(ss58) {\n        this.__internal__ss58 = ss58;\n    }\n    /**\n     * @name toJson\n     * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account\n     * @description Returns a JSON object containing the metadata associated with an account\n     * when valid address or public key and when the account passphrase is provided if the account secret\n     * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user\n     * may backup their account to a JSON file that contains this information.\n     */\n    toJson(address, passphrase) {\n        return this.__internal__pairs.get(address).toJson(passphrase);\n    }\n}\n", "import { objectSpread, u8aConcat, u8aEmpty, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, ed25519PairFromSeed as ed25519FromSeed, ed25519Sign, ethereumEncode, keccakAsU8a, keyExtractPath, keyFromPath, secp256k1Compress, secp256k1Expand, secp256k1PairFromSeed as secp256k1FromSeed, secp256k1Sign, signatureVerify, sr25519PairFromSeed as sr25519FromSeed, sr25519Sign, sr25519VrfSign, sr25519VrfVerify } from '@polkadot/util-crypto';\nimport { decodePair } from './decode.js';\nimport { encodePair } from './encode.js';\nimport { pairToJson } from './toJson.js';\nconst SIG_TYPE_NONE = new Uint8Array();\nconst TYPE_FROM_SEED = {\n    ecdsa: secp256k1FromSeed,\n    ed25519: ed25519FromSeed,\n    ethereum: secp256k1FromSeed,\n    sr25519: sr25519FromSeed\n};\nconst TYPE_PREFIX = {\n    ecdsa: new Uint8Array([2]),\n    ed25519: new Uint8Array([0]),\n    ethereum: new Uint8Array([2]),\n    sr25519: new Uint8Array([1])\n};\nconst TYPE_SIGNATURE = {\n    ecdsa: (m, p) => secp256k1Sign(m, p, 'blake2'),\n    ed25519: ed25519Sign,\n    ethereum: (m, p) => secp256k1Sign(m, p, 'keccak'),\n    sr25519: sr25519Sign\n};\nconst TYPE_ADDRESS = {\n    ecdsa: (p) => p.length > 32 ? blake2AsU8a(p) : p,\n    ed25519: (p) => p,\n    ethereum: (p) => p.length === 20 ? p : keccakAsU8a(secp256k1Expand(p)),\n    sr25519: (p) => p\n};\nfunction isLocked(secretKey) {\n    return !secretKey || u8aEmpty(secretKey);\n}\nfunction vrfHash(proof, context, extra) {\n    return blake2AsU8a(u8aConcat(context || '', extra || '', proof));\n}\n/**\n * @name createPair\n * @summary Creates a keyring pair object\n * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.\n * The keyring pair stores the account state including the encoded address and associated metadata.\n *\n * It has properties whose values are functions that may be called to perform account actions:\n *\n * - `address` function retrieves the address associated with the account.\n * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.\n * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key\n * and associated secret key that are then available in memory, and changes the account address stored in the\n * state of the pair to correspond to the address of the decoded public key.\n * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair\n * and when the secret key is in memory (when the account pair is not locked) it returns an encoded\n * public key of the account.\n * - `meta` is the metadata that is stored in the state of the pair, either when it was originally\n * created or set via `setMeta`.\n * - `publicKey` returns the public key stored in memory for the pair.\n * - `sign` may be used to return a signature by signing a provided message with the secret\n * key (if it is in memory) using Nacl.\n * - `toJson` calls another `toJson` function and provides the state of the pair,\n * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account\n * that it generates using the secret key from memory (if it has been made available in memory)\n * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`\n * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).\n * The `toJson` function that it calls returns a JSON object with properties including the `address`\n * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,\n * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`\n * property that indicates whether the public key value of the `encoded` property is encoded or not.\n */\nexport function createPair({ toSS58, type }, { publicKey, secretKey }, meta = {}, encoded = null, encTypes) {\n    const decodePkcs8 = (passphrase, userEncoded) => {\n        const decoded = decodePair(passphrase, userEncoded || encoded, encTypes);\n        if (decoded.secretKey.length === 64) {\n            publicKey = decoded.publicKey;\n            secretKey = decoded.secretKey;\n        }\n        else {\n            const pair = TYPE_FROM_SEED[type](decoded.secretKey);\n            publicKey = pair.publicKey;\n            secretKey = pair.secretKey;\n        }\n    };\n    const recode = (passphrase) => {\n        isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);\n        encoded = encodePair({ publicKey, secretKey }, passphrase); // re-encode, latest version\n        encTypes = undefined; // swap to defaults, latest version follows\n        return encoded;\n    };\n    const encodeAddress = () => {\n        const raw = TYPE_ADDRESS[type](publicKey);\n        return type === 'ethereum'\n            ? ethereumEncode(raw)\n            : toSS58(raw);\n    };\n    return {\n        get address() {\n            return encodeAddress();\n        },\n        get addressRaw() {\n            const raw = TYPE_ADDRESS[type](publicKey);\n            return type === 'ethereum'\n                ? raw.slice(-20)\n                : raw;\n        },\n        get isLocked() {\n            return isLocked(secretKey);\n        },\n        get meta() {\n            return meta;\n        },\n        get publicKey() {\n            return publicKey;\n        },\n        get type() {\n            return type;\n        },\n        // eslint-disable-next-line sort-keys\n        decodePkcs8,\n        derive: (suri, meta) => {\n            if (type === 'ethereum') {\n                throw new Error('Unable to derive on this keypair');\n            }\n            else if (isLocked(secretKey)) {\n                throw new Error('Cannot derive on a locked keypair');\n            }\n            const { path } = keyExtractPath(suri);\n            const derived = keyFromPath({ publicKey, secretKey }, path, type);\n            return createPair({ toSS58, type }, derived, meta, null);\n        },\n        encodePkcs8: (passphrase) => {\n            return recode(passphrase);\n        },\n        lock: () => {\n            secretKey = new Uint8Array();\n        },\n        setMeta: (additional) => {\n            meta = objectSpread({}, meta, additional);\n        },\n        sign: (message, options = {}) => {\n            if (isLocked(secretKey)) {\n                throw new Error('Cannot sign with a locked key pair');\n            }\n            return u8aConcat(options.withType\n                ? TYPE_PREFIX[type]\n                : SIG_TYPE_NONE, TYPE_SIGNATURE[type](u8aToU8a(message), { publicKey, secretKey }));\n        },\n        toJson: (passphrase) => {\n            // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these\n            // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)\n            // unless the publicKey is already an address\n            const address = ['ecdsa', 'ethereum'].includes(type)\n                ? publicKey.length === 20\n                    ? u8aToHex(publicKey)\n                    : u8aToHex(secp256k1Compress(publicKey))\n                : encodeAddress();\n            return pairToJson(type, { address, meta }, recode(passphrase), !!passphrase);\n        },\n        unlock: (passphrase) => {\n            return decodePkcs8(passphrase);\n        },\n        verify: (message, signature, signerPublic) => {\n            return signatureVerify(message, signature, TYPE_ADDRESS[type](u8aToU8a(signerPublic))).isValid;\n        },\n        vrfSign: (message, context, extra) => {\n            if (isLocked(secretKey)) {\n                throw new Error('Cannot sign with a locked key pair');\n            }\n            if (type === 'sr25519') {\n                return sr25519VrfSign(message, { secretKey }, context, extra);\n            }\n            const proof = TYPE_SIGNATURE[type](u8aToU8a(message), { publicKey, secretKey });\n            return u8aConcat(vrfHash(proof, context, extra), proof);\n        },\n        vrfVerify: (message, vrfResult, signerPublic, context, extra) => {\n            if (type === 'sr25519') {\n                return sr25519VrfVerify(message, vrfResult, publicKey, context, extra);\n            }\n            const result = signatureVerify(message, u8aConcat(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type](u8aToU8a(signerPublic)));\n            return result.isValid && u8aEq(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));\n        }\n    };\n}\n", "import { u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from './defaults.js';\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n    const encType = Array.isArray(_encType) || _encType === undefined\n        ? _encType\n        : [_encType];\n    const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n    const header = decrypted.subarray(0, PKCS8_HEADER.length);\n    if (!u8aEq(header, PKCS8_HEADER)) {\n        throw new Error('Invalid Pkcs8 header found in body');\n    }\n    let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n    let divOffset = SEED_OFFSET + SEC_LENGTH;\n    let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    // old-style, we have the seed here\n    if (!u8aEq(divider, PKCS8_DIVIDER)) {\n        divOffset = SEED_OFFSET + SEED_LENGTH;\n        secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n        divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n        if (!u8aEq(divider, PKCS8_DIVIDER)) {\n            throw new Error('Invalid Pkcs8 divider found in body');\n        }\n    }\n    const pubOffset = divOffset + PKCS8_DIVIDER.length;\n    const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n", "export const PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nexport const PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nexport const PUB_LENGTH = 32;\nexport const SALT_LENGTH = 32;\nexport const SEC_LENGTH = 64;\nexport const SEED_LENGTH = 32;\n", "import { u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from './defaults.js';\nexport function encodePair({ publicKey, secretKey }, passphrase) {\n    if (!secretKey) {\n        throw new Error('Expected a valid secretKey to be passed to encode');\n    }\n    const encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n    if (!passphrase) {\n        return encoded;\n    }\n    const { params, password, salt } = scryptEncode(passphrase);\n    const { encrypted, nonce } = naclEncrypt(encoded, password.subarray(0, 32));\n    return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}\n", "import { objectSpread } from '@polkadot/util';\nimport { jsonEncryptFormat } from '@polkadot/util-crypto';\nexport function pairToJson(type, { address, meta }, encoded, isEncrypted) {\n    return objectSpread(jsonEncryptFormat(encoded, ['pkcs8', type], isEncrypted), {\n        address,\n        meta\n    });\n}\n", "export const DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk';\nexport const DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';\n", "import { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n    constructor() {\n        this.__internal__map = {};\n    }\n    add(pair) {\n        this.__internal__map[decodeAddress(pair.address).toString()] = pair;\n        return pair;\n    }\n    all() {\n        return Object.values(this.__internal__map);\n    }\n    get(address) {\n        const pair = this.__internal__map[decodeAddress(address).toString()];\n        if (!pair) {\n            throw new Error(`Unable to retrieve keypair '${isU8a(address) || isHex(address)\n                ? u8aToHex(u8aToU8a(address))\n                : address}'`);\n        }\n        return pair;\n    }\n    remove(address) {\n        delete this.__internal__map[decodeAddress(address).toString()];\n    }\n}\n", "import { hexToU8a } from '@polkadot/util';\nimport { createPair } from './pair/index.js';\nimport { Keyring } from './keyring.js';\nexport const PAIRSSR25519 = [\n    {\n        p: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n        s: '0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011',\n        seed: 'Alice',\n        type: 'sr25519'\n    },\n    {\n        p: '0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f',\n        s: '0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd',\n        seed: 'Alice//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48',\n        s: '0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325',\n        seed: 'Bob',\n        type: 'sr25519'\n    },\n    {\n        p: '0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e',\n        s: '0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde',\n        seed: 'Bob//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22',\n        s: '0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c',\n        seed: 'Charlie',\n        type: 'sr25519'\n    },\n    {\n        p: '0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20',\n        s: '0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568',\n        seed: 'Dave',\n        type: 'sr25519'\n    },\n    {\n        p: '0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e',\n        s: '0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587',\n        seed: 'Eve',\n        type: 'sr25519'\n    },\n    {\n        p: '0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c',\n        s: '0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426',\n        seed: 'Ferdie',\n        type: 'sr25519'\n    }\n];\nexport const PAIRSETHEREUM = [\n    {\n        name: 'Alith',\n        p: '0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f',\n        s: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133',\n        type: 'ethereum'\n    },\n    {\n        name: 'Baltathar',\n        p: '0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518',\n        s: '0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b',\n        type: 'ethereum'\n    },\n    {\n        name: 'Charleth',\n        p: '0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e',\n        s: '0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b',\n        type: 'ethereum'\n    },\n    {\n        name: 'Dorothy',\n        p: '0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c',\n        s: '0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68',\n        type: 'ethereum'\n    },\n    {\n        name: 'Ethan',\n        p: '0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa',\n        s: '0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4',\n        type: 'ethereum'\n    },\n    {\n        name: 'Faith',\n        p: '0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74',\n        s: '0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df',\n        type: 'ethereum'\n    }\n];\nfunction createMeta(name, seed) {\n    if (!name && !seed) {\n        throw new Error('Testing pair should have either a name or a seed');\n    }\n    return {\n        isTesting: true,\n        name: name || (seed && seed.replace('//', '_').toLowerCase())\n    };\n}\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\nexport function createTestKeyring(options = {}, isDerived = true) {\n    const keyring = new Keyring(options);\n    const pairs = options.type === 'ethereum'\n        ? PAIRSETHEREUM\n        : PAIRSSR25519;\n    for (const { name, p, s, seed, type } of pairs) {\n        const meta = createMeta(name, seed);\n        const pair = !isDerived && !name && seed\n            ? keyring.addFromUri(seed, meta, options.type)\n            : keyring.addPair(createPair({ toSS58: keyring.encodeAddress, type }, { publicKey: hexToU8a(p), secretKey: hexToU8a(s) }, meta));\n        pair.lock = () => {\n            // we don't have lock/unlock functionality here\n        };\n    }\n    return keyring;\n}\n", "import { nobody } from './pair/nobody.js';\nimport { createTestKeyring } from './testing.js';\nexport function createTestPairs(options, isDerived = true) {\n    const keyring = createTestKeyring(options, isDerived);\n    const pairs = keyring.getPairs();\n    const map = { nobody: nobody() };\n    for (const p of pairs) {\n        map[p.meta.name] = p;\n    }\n    return map;\n}\n", "const publicKey = new Uint8Array(32);\nconst address = '5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM';\nconst meta = {\n    isTesting: true,\n    name: 'nobody'\n};\nconst json = {\n    address,\n    encoded: '',\n    encoding: {\n        content: ['pkcs8', 'ed25519'],\n        type: 'none',\n        version: '0'\n    },\n    meta\n};\nconst pair = {\n    address,\n    addressRaw: publicKey,\n    decodePkcs8: (_passphrase, _encoded) => undefined,\n    derive: (_suri, _meta) => pair,\n    encodePkcs8: (_passphrase) => new Uint8Array(0),\n    isLocked: true,\n    lock: () => {\n        // no locking, it is always locked\n    },\n    meta,\n    publicKey,\n    setMeta: (_meta) => undefined,\n    sign: (_message) => new Uint8Array(64),\n    toJson: (_passphrase) => json,\n    type: 'ed25519',\n    unlock: (_passphrase) => undefined,\n    verify: (_message, _signature) => false,\n    vrfSign: (_message, _context, _extra) => new Uint8Array(96),\n    vrfVerify: (_message, _vrfResult, _context, _extra) => false\n};\nexport function nobody() {\n    return pair;\n}\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nexport default [typesInfo];\n", "export { HttpProvider } from './http/index.js';\nexport { packageInfo } from './packageInfo.js';\nexport { ScProvider } from './substrate-connect/index.js';\nexport { WsProvider } from './ws/index.js';\n", "import { logger, noop } from '@polkadot/util';\nimport { fetch } from '@polkadot/x-fetch';\nimport { RpcCoder } from '../coder/index.js';\nimport defaults from '../defaults.js';\nimport { LRUCache } from '../lru.js';\nconst ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';\nconst l = logger('api-http');\n/**\n * # @polkadot/rpc-provider\n *\n * @name HttpProvider\n *\n * @description The HTTP Provider allows sending requests using HTTP to a HTTP RPC server TCP port. It does not support subscriptions so you won't be able to listen to events such as new blocks or balance changes. It is usually preferable using the [[WsProvider]].\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { HttpProvider } from '@polkadot/rpc-provider';\n *\n * const provider = new HttpProvider('http://127.0.0.1:9933');\n * const api = new Api(provider);\n * ```\n *\n * @see [[WsProvider]]\n */\nexport class HttpProvider {\n    /**\n     * @param {string} endpoint The endpoint url starting with http://\n     */\n    constructor(endpoint = defaults.HTTP_URL, headers = {}) {\n        this.__internal__callCache = new LRUCache();\n        if (!/^(https|http):\\/\\//.test(endpoint)) {\n            throw new Error(`Endpoint should start with 'http://' or 'https://', received '${endpoint}'`);\n        }\n        this.__internal__coder = new RpcCoder();\n        this.__internal__endpoint = endpoint;\n        this.__internal__headers = headers;\n        this.__internal__stats = {\n            active: { requests: 0, subscriptions: 0 },\n            total: { bytesRecv: 0, bytesSent: 0, cached: 0, errors: 0, requests: 0, subscriptions: 0, timeout: 0 }\n        };\n    }\n    /**\n     * @summary `true` when this provider supports subscriptions\n     */\n    get hasSubscriptions() {\n        return false;\n    }\n    /**\n     * @description Returns a clone of the object\n     */\n    clone() {\n        return new HttpProvider(this.__internal__endpoint, this.__internal__headers);\n    }\n    /**\n     * @description Manually connect from the connection\n     */\n    async connect() {\n        // noop\n    }\n    /**\n     * @description Manually disconnect from the connection\n     */\n    async disconnect() {\n        // noop\n    }\n    /**\n     * @description Returns the connection stats\n     */\n    get stats() {\n        return this.__internal__stats;\n    }\n    /**\n     * @summary `true` when this provider supports clone()\n     */\n    get isClonable() {\n        return true;\n    }\n    /**\n     * @summary Whether the node is connected or not.\n     * @return {boolean} true if connected\n     */\n    get isConnected() {\n        return true;\n    }\n    /**\n     * @summary Events are not supported with the HttpProvider, see [[WsProvider]].\n     * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.\n     */\n    on(_type, _sub) {\n        l.error('HTTP Provider does not have \\'on\\' emitters, use WebSockets instead');\n        return noop;\n    }\n    /**\n     * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.\n     */\n    async send(method, params, isCacheable) {\n        this.__internal__stats.total.requests++;\n        const [, body] = this.__internal__coder.encodeJson(method, params);\n        let resultPromise = isCacheable\n            ? this.__internal__callCache.get(body)\n            : null;\n        if (!resultPromise) {\n            resultPromise = this.__internal__send(body);\n            if (isCacheable) {\n                this.__internal__callCache.set(body, resultPromise);\n            }\n        }\n        else {\n            this.__internal__stats.total.cached++;\n        }\n        return resultPromise;\n    }\n    async __internal__send(body) {\n        this.__internal__stats.active.requests++;\n        this.__internal__stats.total.bytesSent += body.length;\n        try {\n            const response = await fetch(this.__internal__endpoint, {\n                body,\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Length': `${body.length}`,\n                    'Content-Type': 'application/json',\n                    ...this.__internal__headers\n                },\n                method: 'POST'\n            });\n            if (!response.ok) {\n                throw new Error(`[${response.status}]: ${response.statusText}`);\n            }\n            const result = await response.text();\n            this.__internal__stats.total.bytesRecv += result.length;\n            const decoded = this.__internal__coder.decodeResponse(JSON.parse(result));\n            this.__internal__stats.active.requests--;\n            return decoded;\n        }\n        catch (e) {\n            this.__internal__stats.active.requests--;\n            this.__internal__stats.total.errors++;\n            throw e;\n        }\n    }\n    /**\n     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async subscribe(_types, _method, _params, _cb) {\n        l.error(ERROR_SUBSCRIBE);\n        throw new Error(ERROR_SUBSCRIBE);\n    }\n    /**\n     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async unsubscribe(_type, _method, _id) {\n        l.error(ERROR_SUBSCRIBE);\n        throw new Error(ERROR_SUBSCRIBE);\n    }\n}\n", "import { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from './packageInfo.js';\nexport const fetch = xglobal.fetch;\n", "export const packageInfo = { name: '@polkadot/x-fetch', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.3.2' };\n", "import { isNumber, isString, isUndefined, stringify } from '@polkadot/util';\nimport RpcError from './error.js';\nfunction formatErrorData(data) {\n    if (isUndefined(data)) {\n        return '';\n    }\n    const formatted = `: ${isString(data)\n        ? data.replace(/Error\\(\"/g, '').replace(/\\(\"/g, '(').replace(/\"\\)/g, ')').replace(/\\(/g, ', ').replace(/\\)/g, '')\n        : stringify(data)}`;\n    // We need some sort of cut-off here since these can be very large and\n    // very nested, pick a number and trim the result display to it\n    return formatted.length <= 256\n        ? formatted\n        : `${formatted.substring(0, 255)}…`;\n}\nfunction checkError(error) {\n    if (error) {\n        const { code, data, message } = error;\n        throw new RpcError(`${code}: ${message}${formatErrorData(data)}`, code, data);\n    }\n}\n/** @internal */\nexport class RpcCoder {\n    constructor() {\n        this.__internal__id = 0;\n    }\n    decodeResponse(response) {\n        if (!response || response.jsonrpc !== '2.0') {\n            throw new Error('Invalid jsonrpc field in decoded object');\n        }\n        const isSubscription = !isUndefined(response.params) && !isUndefined(response.method);\n        if (!isNumber(response.id) &&\n            (!isSubscription || (!isNumber(response.params.subscription) &&\n                !isString(response.params.subscription)))) {\n            throw new Error('Invalid id field in decoded object');\n        }\n        checkError(response.error);\n        if (response.result === undefined && !isSubscription) {\n            throw new Error('No result found in jsonrpc response');\n        }\n        if (isSubscription) {\n            checkError(response.params.error);\n            return response.params.result;\n        }\n        return response.result;\n    }\n    encodeJson(method, params) {\n        const [id, data] = this.encodeObject(method, params);\n        return [id, stringify(data)];\n    }\n    encodeObject(method, params) {\n        const id = ++this.__internal__id;\n        return [id, {\n                id,\n                jsonrpc: '2.0',\n                method,\n                params\n            }];\n    }\n}\n", "import { isFunction } from '@polkadot/util';\nconst UNKNOWN = -99999;\nfunction extend(that, name, value) {\n    Object.defineProperty(that, name, {\n        configurable: true,\n        enumerable: false,\n        value\n    });\n}\n/**\n * @name RpcError\n * @summary Extension to the basic JS Error.\n * @description\n * The built-in JavaScript Error class is extended by adding a code to allow for Error categorization. In addition to the normal `stack`, `message`, the numeric `code` and `data` (any types) parameters are available on the object.\n * @example\n * <BR>\n *\n * ```javascript\n * const { RpcError } from '@polkadot/util');\n *\n * throw new RpcError('some message', RpcError.CODES.METHOD_NOT_FOUND); // => error.code = -32601\n * ```\n */\nclass RpcError extends Error {\n    constructor(message = '', code = UNKNOWN, data) {\n        super();\n        extend(this, 'message', String(message));\n        extend(this, 'name', this.constructor.name);\n        extend(this, 'data', data);\n        extend(this, 'code', code);\n        if (isFunction(Error.captureStackTrace)) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            const { stack } = new Error(message);\n            stack && extend(this, 'stack', stack);\n        }\n    }\n}\nRpcError.CODES = {\n    ASSERT: -90009,\n    INVALID_JSONRPC: -99998,\n    METHOD_NOT_FOUND: -32601,\n    UNKNOWN\n};\nexport default RpcError;\n", "const HTTP_URL = 'http://127.0.0.1:9933';\nconst WS_URL = 'ws://127.0.0.1:9944';\nexport default {\n    HTTP_URL,\n    WS_URL\n};\n", "const DEFAULT_CAPACITY = 128;\nclass LRUNode {\n    constructor(key) {\n        this.key = key;\n        this.next = this.prev = this;\n    }\n}\nexport class LRUCache {\n    constructor(capacity = DEFAULT_CAPACITY) {\n        this.__internal__data = new Map();\n        this.__internal__refs = new Map();\n        this.__internal__length = 0;\n        this.capacity = capacity;\n        this.__internal__head = this.__internal__tail = new LRUNode('<empty>');\n    }\n    get length() {\n        return this.__internal__length;\n    }\n    get lengthData() {\n        return this.__internal__data.size;\n    }\n    get lengthRefs() {\n        return this.__internal__refs.size;\n    }\n    entries() {\n        const keys = this.keys();\n        const count = keys.length;\n        const entries = new Array(count);\n        for (let i = 0; i < count; i++) {\n            const key = keys[i];\n            entries[i] = [key, this.__internal__data.get(key)];\n        }\n        return entries;\n    }\n    keys() {\n        const keys = [];\n        if (this.__internal__length) {\n            let curr = this.__internal__head;\n            while (curr !== this.__internal__tail) {\n                keys.push(curr.key);\n                curr = curr.next;\n            }\n            keys.push(curr.key);\n        }\n        return keys;\n    }\n    get(key) {\n        const data = this.__internal__data.get(key);\n        if (data) {\n            this.__internal__toHead(key);\n            return data;\n        }\n        return null;\n    }\n    set(key, value) {\n        if (this.__internal__data.has(key)) {\n            this.__internal__toHead(key);\n        }\n        else {\n            const node = new LRUNode(key);\n            this.__internal__refs.set(node.key, node);\n            if (this.length === 0) {\n                this.__internal__head = this.__internal__tail = node;\n            }\n            else {\n                this.__internal__head.prev = node;\n                node.next = this.__internal__head;\n                this.__internal__head = node;\n            }\n            if (this.__internal__length === this.capacity) {\n                this.__internal__data.delete(this.__internal__tail.key);\n                this.__internal__refs.delete(this.__internal__tail.key);\n                this.__internal__tail = this.__internal__tail.prev;\n                this.__internal__tail.next = this.__internal__head;\n            }\n            else {\n                this.__internal__length += 1;\n            }\n        }\n        this.__internal__data.set(key, value);\n    }\n    __internal__toHead(key) {\n        const ref = this.__internal__refs.get(key);\n        if (ref && ref !== this.__internal__head) {\n            ref.prev.next = ref.next;\n            ref.next.prev = ref.prev;\n            ref.next = this.__internal__head;\n            this.__internal__head.prev = ref;\n            this.__internal__head = ref;\n        }\n    }\n}\n", "import { EventEmitter } from 'eventemitter3';\nimport { isError, isFunction, isObject, logger, objectSpread } from '@polkadot/util';\nimport { RpcCoder } from '../coder/index.js';\nimport { healthChecker } from './Health.js';\nconst l = logger('api-substrate-connect');\nconst subscriptionUnsubscriptionMethods = new Map([\n    ['author_submitAndWatchExtrinsic', 'author_unwatchExtrinsic'],\n    ['chain_subscribeAllHeads', 'chain_unsubscribeAllHeads'],\n    ['chain_subscribeFinalizedHeads', 'chain_unsubscribeFinalizedHeads'],\n    ['chain_subscribeFinalisedHeads', 'chain_subscribeFinalisedHeads'],\n    ['chain_subscribeNewHeads', 'chain_unsubscribeNewHeads'],\n    ['chain_subscribeNewHead', 'chain_unsubscribeNewHead'],\n    ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n    ['subscribe_newHead', 'unsubscribe_newHead'],\n    ['state_subscribeRuntimeVersion', 'state_unsubscribeRuntimeVersion'],\n    ['state_subscribeStorage', 'state_unsubscribeStorage']\n]);\nconst scClients = new WeakMap();\nexport class ScProvider {\n    constructor(Sc, spec, sharedSandbox) {\n        this.__internal__coder = new RpcCoder();\n        this.__internal__subscriptions = new Map();\n        this.__internal__resubscribeMethods = new Map();\n        this.__internal__requests = new Map();\n        this.__internal__eventemitter = new EventEmitter();\n        this.__internal__chain = null;\n        this.__internal__isChainReady = false;\n        this.__internal__resubscribe = () => {\n            const promises = [];\n            this.__internal__resubscribeMethods.forEach((subDetails) => {\n                // only re-create subscriptions which are not in author (only area where\n                // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n                // are not included (and will not be re-broadcast)\n                if (subDetails.type.startsWith('author_')) {\n                    return;\n                }\n                try {\n                    const promise = new Promise((resolve) => {\n                        this.subscribe(subDetails.type, subDetails.method, subDetails.params, subDetails.callback).catch((error) => console.log(error));\n                        resolve();\n                    });\n                    promises.push(promise);\n                }\n                catch (error) {\n                    l.error(error);\n                }\n            });\n            Promise.all(promises).catch((err) => l.log(err));\n        };\n        if (!isObject(Sc) || !isObject(Sc.WellKnownChain) || !isFunction(Sc.createScClient)) {\n            throw new Error('Expected an @substrate/connect interface as first parameter to ScProvider');\n        }\n        this.__internal__Sc = Sc;\n        this.__internal__spec = spec;\n        this.__internal__sharedSandbox = sharedSandbox;\n        this.__internal__wellKnownChains = new Set(Object.values(Sc.WellKnownChain));\n    }\n    get hasSubscriptions() {\n        // Indicates that subscriptions are supported\n        return true;\n    }\n    get isClonable() {\n        return false;\n    }\n    get isConnected() {\n        return !!this.__internal__chain && this.__internal__isChainReady;\n    }\n    clone() {\n        throw new Error('clone() is not supported.');\n    }\n    // Config details can be found in @substrate/connect repo following the link:\n    // https://github.com/paritytech/substrate-connect/blob/main/packages/connect/src/connector/index.ts\n    async connect(config, checkerFactory = healthChecker) {\n        if (this.isConnected) {\n            throw new Error('Already connected!');\n        }\n        // it could happen that after emitting `disconnected` due to the fact taht\n        // smoldot is syncing, the consumer tries to reconnect after a certain amount\n        // of time... In which case we want to make sure that we don't create a new\n        // chain.\n        if (this.__internal__chain) {\n            await this.__internal__chain;\n            return;\n        }\n        if (this.__internal__sharedSandbox && !this.__internal__sharedSandbox.isConnected) {\n            await this.__internal__sharedSandbox.connect();\n        }\n        const client = this.__internal__sharedSandbox\n            ? scClients.get(this.__internal__sharedSandbox)\n            : this.__internal__Sc.createScClient(config);\n        if (!client) {\n            throw new Error('Unkown ScProvider!');\n        }\n        scClients.set(this, client);\n        const hc = checkerFactory();\n        const onResponse = (res) => {\n            const hcRes = hc.responsePassThrough(res);\n            if (!hcRes) {\n                return;\n            }\n            const response = JSON.parse(hcRes);\n            let decodedResponse;\n            try {\n                decodedResponse = this.__internal__coder.decodeResponse(response);\n            }\n            catch (e) {\n                decodedResponse = e;\n            }\n            // It's not a subscription message, but rather a standar RPC response\n            if (response.params?.subscription === undefined || !response.method) {\n                return this.__internal__requests.get(response.id)?.(decodedResponse);\n            }\n            // We are dealing with a subscription message\n            const subscriptionId = `${response.method}::${response.params.subscription}`;\n            const callback = this.__internal__subscriptions.get(subscriptionId)?.[0];\n            callback?.(decodedResponse);\n        };\n        const addChain = this.__internal__wellKnownChains.has(this.__internal__spec)\n            ? client.addWellKnownChain\n            : client.addChain;\n        this.__internal__chain = addChain(this.__internal__spec, onResponse).then((chain) => {\n            hc.setSendJsonRpc(chain.sendJsonRpc);\n            this.__internal__isChainReady = false;\n            const cleanup = () => {\n                // If there are any callbacks left, we have to reject/error them.\n                // Otherwise, that would cause a memory leak.\n                const disconnectionError = new Error('Disconnected');\n                this.__internal__requests.forEach((cb) => cb(disconnectionError));\n                this.__internal__subscriptions.forEach(([cb]) => cb(disconnectionError));\n                this.__internal__subscriptions.clear();\n            };\n            const staleSubscriptions = [];\n            const killStaleSubscriptions = () => {\n                if (staleSubscriptions.length === 0) {\n                    return;\n                }\n                const stale = staleSubscriptions.pop();\n                if (!stale) {\n                    throw new Error('Unable to get stale subscription');\n                }\n                const { id, unsubscribeMethod } = stale;\n                Promise\n                    .race([\n                    this.send(unsubscribeMethod, [id]).catch(() => undefined),\n                    new Promise((resolve) => setTimeout(resolve, 500))\n                ])\n                    .then(killStaleSubscriptions)\n                    .catch(() => undefined);\n            };\n            hc.start((health) => {\n                const isReady = !health.isSyncing && (health.peers > 0 || !health.shouldHavePeers);\n                // if it's the same as before, then nothing has changed and we are done\n                if (this.__internal__isChainReady === isReady) {\n                    return;\n                }\n                this.__internal__isChainReady = isReady;\n                if (!isReady) {\n                    // If we've reached this point, that means that the chain used to be \"ready\"\n                    // and now we are about to emit `disconnected`.\n                    //\n                    // This will cause the PolkadotJs API think that the connection is\n                    // actually dead. In reality the smoldot chain is not dead, of course.\n                    // However, we have to cleanup all the existing callbacks because when\n                    // the smoldot chain stops syncing, then we will emit `connected` and\n                    // the PolkadotJs API will try to re-create the previous\n                    // subscriptions and requests. Although, now is not a good moment\n                    // to be sending unsubscription messages to the smoldot chain, we\n                    // should wait until is no longer syncing to send the unsubscription\n                    // messages from the stale subscriptions of the previous connection.\n                    //\n                    // That's why -before we perform the cleanup of `this.__internal__subscriptions`-\n                    // we keep the necessary information that we will need later on to\n                    // kill the stale subscriptions.\n                    [...this.__internal__subscriptions.values()].forEach((s) => {\n                        staleSubscriptions.push(s[1]);\n                    });\n                    cleanup();\n                    this.__internal__eventemitter.emit('disconnected');\n                }\n                else {\n                    killStaleSubscriptions();\n                    this.__internal__eventemitter.emit('connected');\n                    if (this.__internal__resubscribeMethods.size) {\n                        this.__internal__resubscribe();\n                    }\n                }\n            });\n            return objectSpread({}, chain, {\n                remove: () => {\n                    hc.stop();\n                    chain.remove();\n                    cleanup();\n                },\n                sendJsonRpc: hc.sendJsonRpc.bind(hc)\n            });\n        });\n        try {\n            await this.__internal__chain;\n        }\n        catch (e) {\n            this.__internal__chain = null;\n            this.__internal__eventemitter.emit('error', e);\n            throw e;\n        }\n    }\n    async disconnect() {\n        if (!this.__internal__chain) {\n            return;\n        }\n        const chain = await this.__internal__chain;\n        this.__internal__chain = null;\n        this.__internal__isChainReady = false;\n        try {\n            chain.remove();\n        }\n        catch (_) { }\n        this.__internal__eventemitter.emit('disconnected');\n    }\n    on(type, sub) {\n        // It's possible. Although, quite unlikely, that by the time that polkadot\n        // subscribes to the `connected` event, the Provider is already connected.\n        // In that case, we must emit to let the consumer know that we are connected.\n        if (type === 'connected' && this.isConnected) {\n            sub();\n        }\n        this.__internal__eventemitter.on(type, sub);\n        return () => {\n            this.__internal__eventemitter.removeListener(type, sub);\n        };\n    }\n    async send(method, params) {\n        if (!this.isConnected || !this.__internal__chain) {\n            throw new Error('Provider is not connected');\n        }\n        const chain = await this.__internal__chain;\n        const [id, json] = this.__internal__coder.encodeJson(method, params);\n        const result = new Promise((resolve, reject) => {\n            this.__internal__requests.set(id, (response) => {\n                (isError(response) ? reject : resolve)(response);\n            });\n            try {\n                chain.sendJsonRpc(json);\n            }\n            catch (e) {\n                this.__internal__chain = null;\n                try {\n                    chain.remove();\n                }\n                catch (_) { }\n                this.__internal__eventemitter.emit('error', e);\n            }\n        });\n        try {\n            return await result;\n        }\n        finally {\n            // let's ensure that once the Promise is resolved/rejected, then we remove\n            // remove its entry from the internal #requests\n            this.__internal__requests.delete(id);\n        }\n    }\n    async subscribe(type, method, params, callback) {\n        if (!subscriptionUnsubscriptionMethods.has(method)) {\n            throw new Error(`Unsupported subscribe method: ${method}`);\n        }\n        const id = await this.send(method, params);\n        const subscriptionId = `${type}::${id}`;\n        const cb = (response) => {\n            if (response instanceof Error) {\n                callback(response, undefined);\n            }\n            else {\n                callback(null, response);\n            }\n        };\n        const unsubscribeMethod = subscriptionUnsubscriptionMethods.get(method);\n        if (!unsubscribeMethod) {\n            throw new Error('Invalid unsubscribe method found');\n        }\n        this.__internal__resubscribeMethods.set(subscriptionId, { callback, method, params, type });\n        this.__internal__subscriptions.set(subscriptionId, [cb, { id, unsubscribeMethod }]);\n        return id;\n    }\n    unsubscribe(type, method, id) {\n        if (!this.isConnected) {\n            throw new Error('Provider is not connected');\n        }\n        const subscriptionId = `${type}::${id}`;\n        if (!this.__internal__subscriptions.has(subscriptionId)) {\n            return Promise.reject(new Error(`Unable to find active subscription=${subscriptionId}`));\n        }\n        this.__internal__resubscribeMethods.delete(subscriptionId);\n        this.__internal__subscriptions.delete(subscriptionId);\n        return this.send(method, [id]);\n    }\n}\n", "import { stringify } from '@polkadot/util';\n/*\n * Creates a new health checker.\n *\n * The role of the health checker is to report to the user the health of a smoldot chain.\n *\n * In order to use it, start by creating a health checker, and call `setSendJsonRpc` to set the\n * way to send a JSON-RPC request to a chain. The health checker is disabled by default. Use\n * `start()` in order to start the health checks. The `start()` function must be passed a callback called\n * when an update to the health of the node is available.\n *\n * In order to send a JSON-RPC request to the chain, you **must** use the `sendJsonRpc` function\n * of the health checker. The health checker rewrites the `id` of the requests it receives.\n *\n * When the chain send a JSON-RPC response, it must be passed to `responsePassThrough()`. This\n * function intercepts the responses destined to the requests that have been emitted by the health\n * checker and returns `null`. If the response doesn't concern the health checker, the response is\n * simply returned by the function.\n *\n * # How it works\n *\n * The health checker periodically calls the `system_health` JSON-RPC call in order to determine\n * the health of the chain.\n *\n * In addition to this, as long as the health check reports that `isSyncing` is `true`, the\n * health checker also maintains a subscription to new best blocks using `chain_subscribeNewHeads`.\n * Whenever a new block is notified, a health check is performed immediately in order to determine\n * whether `isSyncing` has changed to `false`.\n *\n * Thanks to this subscription, the latency of the report of the switch from `isSyncing: true` to\n * `isSyncing: false` is very low.\n *\n */\nexport function healthChecker() {\n    // `null` if health checker is not started.\n    let checker = null;\n    let sendJsonRpc = null;\n    return {\n        responsePassThrough: (jsonRpcResponse) => {\n            if (checker === null) {\n                return jsonRpcResponse;\n            }\n            return checker.responsePassThrough(jsonRpcResponse);\n        },\n        sendJsonRpc: (request) => {\n            if (!sendJsonRpc) {\n                throw new Error('setSendJsonRpc must be called before sending requests');\n            }\n            if (checker === null) {\n                sendJsonRpc(request);\n            }\n            else {\n                checker.sendJsonRpc(request);\n            }\n        },\n        setSendJsonRpc: (cb) => {\n            sendJsonRpc = cb;\n        },\n        start: (healthCallback) => {\n            if (checker !== null) {\n                throw new Error(\"Can't start the health checker multiple times in parallel\");\n            }\n            else if (!sendJsonRpc) {\n                throw new Error('setSendJsonRpc must be called before starting the health checks');\n            }\n            checker = new InnerChecker(healthCallback, sendJsonRpc);\n            checker.update(true);\n        },\n        stop: () => {\n            if (checker === null) {\n                return;\n            } // Already stopped.\n            checker.destroy();\n            checker = null;\n        }\n    };\n}\nclass InnerChecker {\n    constructor(healthCallback, requestToSmoldot) {\n        this.__internal__currentHealthCheckId = null;\n        this.__internal__currentHealthTimeout = null;\n        this.__internal__currentSubunsubRequestId = null;\n        this.__internal__currentSubscriptionId = null;\n        this.__internal__isSyncing = false;\n        this.__internal__nextRequestId = 0;\n        this.sendJsonRpc = (request) => {\n            // Replace the `id` in the request to prefix the request ID with `extern:`.\n            let parsedRequest;\n            try {\n                parsedRequest = JSON.parse(request);\n            }\n            catch {\n                return;\n            }\n            if (parsedRequest.id) {\n                const newId = 'extern:' + stringify(parsedRequest.id);\n                parsedRequest.id = newId;\n            }\n            this.__internal__requestToSmoldot(parsedRequest);\n        };\n        this.responsePassThrough = (jsonRpcResponse) => {\n            let parsedResponse;\n            try {\n                parsedResponse = JSON.parse(jsonRpcResponse);\n            }\n            catch {\n                return jsonRpcResponse;\n            }\n            // Check whether response is a response to `system_health`.\n            if (parsedResponse.id && this.__internal__currentHealthCheckId === parsedResponse.id) {\n                this.__internal__currentHealthCheckId = null;\n                // Check whether query was successful. It is possible for queries to fail for\n                // various reasons, such as the client being overloaded.\n                if (!parsedResponse.result) {\n                    this.update(false);\n                    return null;\n                }\n                this.__internal__healthCallback(parsedResponse.result);\n                this.__internal__isSyncing = parsedResponse.result.isSyncing;\n                this.update(false);\n                return null;\n            }\n            // Check whether response is a response to the subscription or unsubscription.\n            if (parsedResponse.id &&\n                this.__internal__currentSubunsubRequestId === parsedResponse.id) {\n                this.__internal__currentSubunsubRequestId = null;\n                // Check whether query was successful. It is possible for queries to fail for\n                // various reasons, such as the client being overloaded.\n                if (!parsedResponse.result) {\n                    this.update(false);\n                    return null;\n                }\n                if (this.__internal__currentSubscriptionId) {\n                    this.__internal__currentSubscriptionId = null;\n                }\n                else {\n                    this.__internal__currentSubscriptionId = parsedResponse.result;\n                }\n                this.update(false);\n                return null;\n            }\n            // Check whether response is a notification to a subscription.\n            if (parsedResponse.params &&\n                this.__internal__currentSubscriptionId &&\n                parsedResponse.params.subscription === this.__internal__currentSubscriptionId) {\n                // Note that after a successful subscription, a notification containing\n                // the current best block is always returned. Considering that a\n                // subscription is performed in response to a health check, calling\n                // `startHealthCheck()` here will lead to a second health check.\n                // It might seem redundant to perform two health checks in a quick\n                // succession, but doing so doesn't lead to any problem, and it is\n                // actually possible for the health to have changed in between as the\n                // current best block might have been updated during the subscription\n                // request.\n                this.update(true);\n                return null;\n            }\n            // Response doesn't concern us.\n            if (parsedResponse.id) {\n                const id = parsedResponse.id;\n                // Need to remove the `extern:` prefix.\n                if (!id.startsWith('extern:')) {\n                    throw new Error('State inconsistency in health checker');\n                }\n                const newId = JSON.parse(id.slice('extern:'.length));\n                parsedResponse.id = newId;\n            }\n            return stringify(parsedResponse);\n        };\n        this.update = (startNow) => {\n            // If `startNow`, clear `#currentHealthTimeout` so that it is set below.\n            if (startNow && this.__internal__currentHealthTimeout) {\n                clearTimeout(this.__internal__currentHealthTimeout);\n                this.__internal__currentHealthTimeout = null;\n            }\n            if (!this.__internal__currentHealthTimeout) {\n                const startHealthRequest = () => {\n                    this.__internal__currentHealthTimeout = null;\n                    // No matter what, don't start a health request if there is already one in progress.\n                    // This is sane to do because receiving a response to a health request calls `update()`.\n                    if (this.__internal__currentHealthCheckId) {\n                        return;\n                    }\n                    // Actual request starting.\n                    this.__internal__currentHealthCheckId = `health-checker:${this.__internal__nextRequestId}`;\n                    this.__internal__nextRequestId += 1;\n                    this.__internal__requestToSmoldot({\n                        id: this.__internal__currentHealthCheckId,\n                        jsonrpc: '2.0',\n                        method: 'system_health',\n                        params: []\n                    });\n                };\n                if (startNow) {\n                    startHealthRequest();\n                }\n                else {\n                    this.__internal__currentHealthTimeout = setTimeout(startHealthRequest, 1000);\n                }\n            }\n            if (this.__internal__isSyncing &&\n                !this.__internal__currentSubscriptionId &&\n                !this.__internal__currentSubunsubRequestId) {\n                this.startSubscription();\n            }\n            if (!this.__internal__isSyncing &&\n                this.__internal__currentSubscriptionId &&\n                !this.__internal__currentSubunsubRequestId) {\n                this.endSubscription();\n            }\n        };\n        this.startSubscription = () => {\n            if (this.__internal__currentSubunsubRequestId || this.__internal__currentSubscriptionId) {\n                throw new Error('Internal error in health checker');\n            }\n            this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;\n            this.__internal__nextRequestId += 1;\n            this.__internal__requestToSmoldot({\n                id: this.__internal__currentSubunsubRequestId,\n                jsonrpc: '2.0',\n                method: 'chain_subscribeNewHeads',\n                params: []\n            });\n        };\n        this.endSubscription = () => {\n            if (this.__internal__currentSubunsubRequestId || !this.__internal__currentSubscriptionId) {\n                throw new Error('Internal error in health checker');\n            }\n            this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;\n            this.__internal__nextRequestId += 1;\n            this.__internal__requestToSmoldot({\n                id: this.__internal__currentSubunsubRequestId,\n                jsonrpc: '2.0',\n                method: 'chain_unsubscribeNewHeads',\n                params: [this.__internal__currentSubscriptionId]\n            });\n        };\n        this.destroy = () => {\n            if (this.__internal__currentHealthTimeout) {\n                clearTimeout(this.__internal__currentHealthTimeout);\n                this.__internal__currentHealthTimeout = null;\n            }\n        };\n        this.__internal__healthCallback = healthCallback;\n        this.__internal__requestToSmoldot = (request) => requestToSmoldot(stringify(request));\n    }\n}\nexport class HealthCheckError extends Error {\n    getCause() {\n        return this.__internal__cause;\n    }\n    constructor(response, message = 'Got error response asking for system health') {\n        super(message);\n        this.__internal__cause = response;\n    }\n}\n", "import { EventEmitter } from 'eventemitter3';\nimport { isChildClass, isNull, isUndefined, logger, objectSpread } from '@polkadot/util';\nimport { xglobal } from '@polkadot/x-global';\nimport { WebSocket } from '@polkadot/x-ws';\nimport { RpcCoder } from '../coder/index.js';\nimport defaults from '../defaults.js';\nimport { LRUCache } from '../lru.js';\nimport { getWSErrorString } from './errors.js';\nconst ALIASES = {\n    chain_finalisedHead: 'chain_finalizedHead',\n    chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',\n    chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'\n};\nconst RETRY_DELAY = 2500;\nconst DEFAULT_TIMEOUT_MS = 60 * 1000;\nconst TIMEOUT_INTERVAL = 5000;\nconst l = logger('api-ws');\n/** @internal Clears a Record<*> of all keys, optionally with all callback on clear */\nfunction eraseRecord(record, cb) {\n    Object.keys(record).forEach((key) => {\n        if (cb) {\n            cb(record[key]);\n        }\n        delete record[key];\n    });\n}\n/** @internal Creates a default/empty stats object */\nfunction defaultEndpointStats() {\n    return { bytesRecv: 0, bytesSent: 0, cached: 0, errors: 0, requests: 0, subscriptions: 0, timeout: 0 };\n}\n/**\n * # @polkadot/rpc-provider/ws\n *\n * @name WsProvider\n *\n * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import { WsProvider } from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const api = new Api(provider);\n * ```\n *\n * @see [[HttpProvider]]\n */\nexport class WsProvider {\n    /**\n     * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.\n     * @param {number | false} autoConnectMs Whether to connect automatically or not (default). Provided value is used as a delay between retries.\n     * @param {Record<string, string>} headers The headers provided to the underlying WebSocket\n     * @param {number} [timeout] Custom timeout value used per request . Defaults to `DEFAULT_TIMEOUT_MS`\n     */\n    constructor(endpoint = defaults.WS_URL, autoConnectMs = RETRY_DELAY, headers = {}, timeout) {\n        this.__internal__callCache = new LRUCache();\n        this.__internal__handlers = {};\n        this.__internal__waitingForId = {};\n        this.__internal__isConnected = false;\n        this.__internal__subscriptions = {};\n        this.__internal__timeoutId = null;\n        this.__internal__emit = (type, ...args) => {\n            this.__internal__eventemitter.emit(type, ...args);\n        };\n        this.__internal__onSocketClose = (event) => {\n            const error = new Error(`disconnected from ${this.endpoint}: ${event.code}:: ${event.reason || getWSErrorString(event.code)}`);\n            if (this.__internal__autoConnectMs > 0) {\n                l.error(error.message);\n            }\n            this.__internal__isConnected = false;\n            if (this.__internal__websocket) {\n                this.__internal__websocket.onclose = null;\n                this.__internal__websocket.onerror = null;\n                this.__internal__websocket.onmessage = null;\n                this.__internal__websocket.onopen = null;\n                this.__internal__websocket = null;\n            }\n            if (this.__internal__timeoutId) {\n                clearInterval(this.__internal__timeoutId);\n                this.__internal__timeoutId = null;\n            }\n            // reject all hanging requests\n            eraseRecord(this.__internal__handlers, (h) => {\n                try {\n                    h.callback(error, undefined);\n                }\n                catch (err) {\n                    // does not throw\n                    l.error(err);\n                }\n            });\n            eraseRecord(this.__internal__waitingForId);\n            // Reset stats for active endpoint\n            this.__internal__endpointStats = defaultEndpointStats();\n            this.__internal__emit('disconnected');\n            if (this.__internal__autoConnectMs > 0) {\n                setTimeout(() => {\n                    this.connectWithRetry().catch(() => {\n                        // does not throw\n                    });\n                }, this.__internal__autoConnectMs);\n            }\n        };\n        this.__internal__onSocketError = (error) => {\n            l.debug(() => ['socket error', error]);\n            this.__internal__emit('error', error);\n        };\n        this.__internal__onSocketMessage = (message) => {\n            l.debug(() => ['received', message.data]);\n            const bytesRecv = message.data.length;\n            this.__internal__endpointStats.bytesRecv += bytesRecv;\n            this.__internal__stats.total.bytesRecv += bytesRecv;\n            const response = JSON.parse(message.data);\n            return isUndefined(response.method)\n                ? this.__internal__onSocketMessageResult(response)\n                : this.__internal__onSocketMessageSubscribe(response);\n        };\n        this.__internal__onSocketMessageResult = (response) => {\n            const handler = this.__internal__handlers[response.id];\n            if (!handler) {\n                l.debug(() => `Unable to find handler for id=${response.id}`);\n                return;\n            }\n            try {\n                const { method, params, subscription } = handler;\n                const result = this.__internal__coder.decodeResponse(response);\n                // first send the result - in case of subs, we may have an update\n                // immediately if we have some queued results already\n                handler.callback(null, result);\n                if (subscription) {\n                    const subId = `${subscription.type}::${result}`;\n                    this.__internal__subscriptions[subId] = objectSpread({}, subscription, {\n                        method,\n                        params\n                    });\n                    // if we have a result waiting for this subscription already\n                    if (this.__internal__waitingForId[subId]) {\n                        this.__internal__onSocketMessageSubscribe(this.__internal__waitingForId[subId]);\n                    }\n                }\n            }\n            catch (error) {\n                this.__internal__endpointStats.errors++;\n                this.__internal__stats.total.errors++;\n                handler.callback(error, undefined);\n            }\n            delete this.__internal__handlers[response.id];\n        };\n        this.__internal__onSocketMessageSubscribe = (response) => {\n            const method = ALIASES[response.method] || response.method || 'invalid';\n            const subId = `${method}::${response.params.subscription}`;\n            const handler = this.__internal__subscriptions[subId];\n            if (!handler) {\n                // store the JSON, we could have out-of-order subid coming in\n                this.__internal__waitingForId[subId] = response;\n                l.debug(() => `Unable to find handler for subscription=${subId}`);\n                return;\n            }\n            // housekeeping\n            delete this.__internal__waitingForId[subId];\n            try {\n                const result = this.__internal__coder.decodeResponse(response);\n                handler.callback(null, result);\n            }\n            catch (error) {\n                this.__internal__endpointStats.errors++;\n                this.__internal__stats.total.errors++;\n                handler.callback(error, undefined);\n            }\n        };\n        this.__internal__onSocketOpen = () => {\n            if (this.__internal__websocket === null) {\n                throw new Error('WebSocket cannot be null in onOpen');\n            }\n            l.debug(() => ['connected to', this.endpoint]);\n            this.__internal__isConnected = true;\n            this.__internal__resubscribe();\n            this.__internal__emit('connected');\n            return true;\n        };\n        this.__internal__resubscribe = () => {\n            const subscriptions = this.__internal__subscriptions;\n            this.__internal__subscriptions = {};\n            Promise.all(Object.keys(subscriptions).map(async (id) => {\n                const { callback, method, params, type } = subscriptions[id];\n                // only re-create subscriptions which are not in author (only area where\n                // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n                // are not included (and will not be re-broadcast)\n                if (type.startsWith('author_')) {\n                    return;\n                }\n                try {\n                    await this.subscribe(type, method, params, callback);\n                }\n                catch (error) {\n                    l.error(error);\n                }\n            })).catch(l.error);\n        };\n        this.__internal__timeoutHandlers = () => {\n            const now = Date.now();\n            const ids = Object.keys(this.__internal__handlers);\n            for (let i = 0, count = ids.length; i < count; i++) {\n                const handler = this.__internal__handlers[ids[i]];\n                if ((now - handler.start) > this.__internal__timeout) {\n                    try {\n                        handler.callback(new Error(`No response received from RPC endpoint in ${this.__internal__timeout / 1000}s`), undefined);\n                    }\n                    catch {\n                        // ignore\n                    }\n                    this.__internal__endpointStats.timeout++;\n                    this.__internal__stats.total.timeout++;\n                    delete this.__internal__handlers[ids[i]];\n                }\n            }\n        };\n        const endpoints = Array.isArray(endpoint)\n            ? endpoint\n            : [endpoint];\n        if (endpoints.length === 0) {\n            throw new Error('WsProvider requires at least one Endpoint');\n        }\n        endpoints.forEach((endpoint) => {\n            if (!/^(wss|ws):\\/\\//.test(endpoint)) {\n                throw new Error(`Endpoint should start with 'ws://', received '${endpoint}'`);\n            }\n        });\n        this.__internal__eventemitter = new EventEmitter();\n        this.__internal__autoConnectMs = autoConnectMs || 0;\n        this.__internal__coder = new RpcCoder();\n        this.__internal__endpointIndex = -1;\n        this.__internal__endpoints = endpoints;\n        this.__internal__headers = headers;\n        this.__internal__websocket = null;\n        this.__internal__stats = {\n            active: { requests: 0, subscriptions: 0 },\n            total: defaultEndpointStats()\n        };\n        this.__internal__endpointStats = defaultEndpointStats();\n        this.__internal__timeout = timeout || DEFAULT_TIMEOUT_MS;\n        if (autoConnectMs && autoConnectMs > 0) {\n            this.connectWithRetry().catch(() => {\n                // does not throw\n            });\n        }\n        this.__internal__isReadyPromise = new Promise((resolve) => {\n            this.__internal__eventemitter.once('connected', () => {\n                resolve(this);\n            });\n        });\n    }\n    /**\n     * @summary `true` when this provider supports subscriptions\n     */\n    get hasSubscriptions() {\n        return true;\n    }\n    /**\n     * @summary `true` when this provider supports clone()\n     */\n    get isClonable() {\n        return true;\n    }\n    /**\n     * @summary Whether the node is connected or not.\n     * @return {boolean} true if connected\n     */\n    get isConnected() {\n        return this.__internal__isConnected;\n    }\n    /**\n     * @description Promise that resolves the first time we are connected and loaded\n     */\n    get isReady() {\n        return this.__internal__isReadyPromise;\n    }\n    get endpoint() {\n        return this.__internal__endpoints[this.__internal__endpointIndex];\n    }\n    /**\n     * @description Returns a clone of the object\n     */\n    clone() {\n        return new WsProvider(this.__internal__endpoints);\n    }\n    selectEndpointIndex(endpoints) {\n        return (this.__internal__endpointIndex + 1) % endpoints.length;\n    }\n    /**\n     * @summary Manually connect\n     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may\n     * connect manually using this method.\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async connect() {\n        if (this.__internal__websocket) {\n            throw new Error('WebSocket is already connected');\n        }\n        try {\n            this.__internal__endpointIndex = this.selectEndpointIndex(this.__internal__endpoints);\n            // the as here is Deno-specific - not available on the globalThis\n            this.__internal__websocket = typeof xglobal.WebSocket !== 'undefined' && isChildClass(xglobal.WebSocket, WebSocket)\n                ? new WebSocket(this.endpoint)\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore - WS may be an instance of ws, which supports options\n                : new WebSocket(this.endpoint, undefined, {\n                    headers: this.__internal__headers\n                });\n            if (this.__internal__websocket) {\n                this.__internal__websocket.onclose = this.__internal__onSocketClose;\n                this.__internal__websocket.onerror = this.__internal__onSocketError;\n                this.__internal__websocket.onmessage = this.__internal__onSocketMessage;\n                this.__internal__websocket.onopen = this.__internal__onSocketOpen;\n            }\n            // timeout any handlers that have not had a response\n            this.__internal__timeoutId = setInterval(() => this.__internal__timeoutHandlers(), TIMEOUT_INTERVAL);\n        }\n        catch (error) {\n            l.error(error);\n            this.__internal__emit('error', error);\n            throw error;\n        }\n    }\n    /**\n     * @description Connect, never throwing an error, but rather forcing a retry\n     */\n    async connectWithRetry() {\n        if (this.__internal__autoConnectMs > 0) {\n            try {\n                await this.connect();\n            }\n            catch {\n                setTimeout(() => {\n                    this.connectWithRetry().catch(() => {\n                        // does not throw\n                    });\n                }, this.__internal__autoConnectMs);\n            }\n        }\n    }\n    /**\n     * @description Manually disconnect from the connection, clearing auto-connect logic\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async disconnect() {\n        // switch off autoConnect, we are in manual mode now\n        this.__internal__autoConnectMs = 0;\n        try {\n            if (this.__internal__websocket) {\n                // 1000 - Normal closure; the connection successfully completed\n                this.__internal__websocket.close(1000);\n            }\n        }\n        catch (error) {\n            l.error(error);\n            this.__internal__emit('error', error);\n            throw error;\n        }\n    }\n    /**\n     * @description Returns the connection stats\n     */\n    get stats() {\n        return {\n            active: {\n                requests: Object.keys(this.__internal__handlers).length,\n                subscriptions: Object.keys(this.__internal__subscriptions).length\n            },\n            total: this.__internal__stats.total\n        };\n    }\n    get endpointStats() {\n        return this.__internal__endpointStats;\n    }\n    /**\n     * @summary Listens on events after having subscribed using the [[subscribe]] function.\n     * @param  {ProviderInterfaceEmitted} type Event\n     * @param  {ProviderInterfaceEmitCb}  sub  Callback\n     * @return unsubscribe function\n     */\n    on(type, sub) {\n        this.__internal__eventemitter.on(type, sub);\n        return () => {\n            this.__internal__eventemitter.removeListener(type, sub);\n        };\n    }\n    /**\n     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.\n     * @param method The RPC methods to execute\n     * @param params Encoded parameters as applicable for the method\n     * @param subscription Subscription details (internally used)\n     */\n    send(method, params, isCacheable, subscription) {\n        this.__internal__endpointStats.requests++;\n        this.__internal__stats.total.requests++;\n        const [id, body] = this.__internal__coder.encodeJson(method, params);\n        let resultPromise = isCacheable\n            ? this.__internal__callCache.get(body)\n            : null;\n        if (!resultPromise) {\n            resultPromise = this.__internal__send(id, body, method, params, subscription);\n            if (isCacheable) {\n                this.__internal__callCache.set(body, resultPromise);\n            }\n        }\n        else {\n            this.__internal__endpointStats.cached++;\n            this.__internal__stats.total.cached++;\n        }\n        return resultPromise;\n    }\n    async __internal__send(id, body, method, params, subscription) {\n        return new Promise((resolve, reject) => {\n            try {\n                if (!this.isConnected || this.__internal__websocket === null) {\n                    throw new Error('WebSocket is not connected');\n                }\n                const callback = (error, result) => {\n                    error\n                        ? reject(error)\n                        : resolve(result);\n                };\n                l.debug(() => ['calling', method, body]);\n                this.__internal__handlers[id] = {\n                    callback,\n                    method,\n                    params,\n                    start: Date.now(),\n                    subscription\n                };\n                const bytesSent = body.length;\n                this.__internal__endpointStats.bytesSent += bytesSent;\n                this.__internal__stats.total.bytesSent += bytesSent;\n                this.__internal__websocket.send(body);\n            }\n            catch (error) {\n                this.__internal__endpointStats.errors++;\n                this.__internal__stats.total.errors++;\n                reject(error);\n            }\n        });\n    }\n    /**\n     * @name subscribe\n     * @summary Allows subscribing to a specific event.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const provider = new WsProvider('ws://127.0.0.1:9944');\n     * const rpc = new Rpc(provider);\n     *\n     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {\n     *   console.log(values)\n     * }).then((subscriptionId) => {\n     *   console.log('balance changes subscription id: ', subscriptionId)\n     * })\n     * ```\n     */\n    subscribe(type, method, params, callback) {\n        this.__internal__endpointStats.subscriptions++;\n        this.__internal__stats.total.subscriptions++;\n        // subscriptions are not cached, LRU applies to .at(<blockHash>) only\n        return this.send(method, params, false, { callback, type });\n    }\n    /**\n     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].\n     */\n    async unsubscribe(type, method, id) {\n        const subscription = `${type}::${id}`;\n        // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub\n        // the assigned id now does not match what the API user originally received. It has\n        // a slight complication in solving - since we cannot rely on the send id, but rather\n        // need to find the actual subscription id to map it\n        if (isUndefined(this.__internal__subscriptions[subscription])) {\n            l.debug(() => `Unable to find active subscription=${subscription}`);\n            return false;\n        }\n        delete this.__internal__subscriptions[subscription];\n        try {\n            return this.isConnected && !isNull(this.__internal__websocket)\n                ? this.send(method, [id])\n                : true;\n        }\n        catch {\n            return false;\n        }\n    }\n}\n", "import { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from './packageInfo.js';\nexport const WebSocket = xglobal.WebSocket;\n", "export const packageInfo = { name: '@polkadot/x-ws', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.3.2' };\n", "const known = {\n    1000: 'Normal Closure',\n    1001: 'Going Away',\n    1002: 'Protocol Error',\n    1003: 'Unsupported Data',\n    1004: '(For future)',\n    1005: 'No Status Received',\n    1006: 'Abnormal Closure',\n    1007: 'Invalid frame payload data',\n    1008: 'Policy Violation',\n    1009: 'Message too big',\n    1010: 'Missing Extension',\n    1011: 'Internal Error',\n    1012: 'Service Restart',\n    1013: 'Try Again Later',\n    1014: 'Bad Gateway',\n    1015: 'TLS Handshake'\n};\nexport function getWSErrorString(code) {\n    if (code >= 0 && code <= 999) {\n        return '(Unused)';\n    }\n    else if (code >= 1016) {\n        if (code <= 1999) {\n            return '(For WebSocket standard)';\n        }\n        else if (code <= 2999) {\n            return '(For WebSocket extensions)';\n        }\n        else if (code <= 3999) {\n            return '(For libraries and frameworks)';\n        }\n        else if (code <= 4999) {\n            return '(For applications)';\n        }\n    }\n    return known[code] || '(Unknown)';\n}\n", "export { createSubmittable } from './createSubmittable.js';\nexport { SubmittableResult } from './Result.js';\n", "import { createClass } from './createClass.js';\nexport function createSubmittable(apiType, api, decorateMethod, registry, blockHash) {\n    const Submittable = createClass({ api, apiType, blockHash, decorateMethod });\n    return (extrinsic) => new Submittable(registry || api.registry, extrinsic);\n}\n", "import { catchError, first, map, mergeMap, of, switchMap, tap } from 'rxjs';\nimport { identity, isBn, isFunction, isNumber, isString, isU8a, objectSpread } from '@polkadot/util';\nimport { filterEvents, isKeyringPair } from '../util/index.js';\nimport { SubmittableResult } from './Result.js';\nfunction makeEraOptions(api, registry, partialOptions, { header, mortalLength, nonce }) {\n    if (!header) {\n        if (partialOptions.era && !partialOptions.blockHash) {\n            throw new Error('Expected blockHash to be passed alongside non-immortal era options');\n        }\n        if (isNumber(partialOptions.era)) {\n            // since we have no header, it is immortal, remove any option overrides\n            // so we only supply the genesisHash and no era to the construction\n            delete partialOptions.era;\n            delete partialOptions.blockHash;\n        }\n        return makeSignOptions(api, partialOptions, { nonce });\n    }\n    return makeSignOptions(api, partialOptions, {\n        blockHash: header.hash,\n        era: registry.createTypeUnsafe('ExtrinsicEra', [{\n                current: header.number,\n                period: partialOptions.era || mortalLength\n            }]),\n        nonce\n    });\n}\nfunction makeSignAndSendOptions(partialOptions, statusCb) {\n    let options = {};\n    if (isFunction(partialOptions)) {\n        statusCb = partialOptions;\n    }\n    else {\n        options = objectSpread({}, partialOptions);\n    }\n    return [options, statusCb];\n}\nfunction makeSignOptions(api, partialOptions, extras) {\n    return objectSpread({ blockHash: api.genesisHash, genesisHash: api.genesisHash }, partialOptions, extras, { runtimeVersion: api.runtimeVersion, signedExtensions: api.registry.signedExtensions, version: api.extrinsicType });\n}\nfunction optionsOrNonce(partialOptions = {}) {\n    return isBn(partialOptions) || isNumber(partialOptions)\n        ? { nonce: partialOptions }\n        : partialOptions;\n}\nexport function createClass({ api, apiType, blockHash, decorateMethod }) {\n    // an instance of the base extrinsic for us to extend\n    const ExtrinsicBase = api.registry.createClass('Extrinsic');\n    class Submittable extends ExtrinsicBase {\n        constructor(registry, extrinsic) {\n            super(registry, extrinsic, { version: api.extrinsicType });\n            this.__internal__transformResult = (identity);\n            this.__internal__observeSign = (account, partialOptions) => {\n                const address = isKeyringPair(account) ? account.address : account.toString();\n                const options = optionsOrNonce(partialOptions);\n                return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe(first(), mergeMap(async (signingInfo) => {\n                    const eraOptions = makeEraOptions(api, this.registry, options, signingInfo);\n                    let updateId = -1;\n                    if (isKeyringPair(account)) {\n                        this.sign(account, eraOptions);\n                    }\n                    else {\n                        updateId = await this.__internal__signViaSigner(address, eraOptions, signingInfo.header);\n                    }\n                    return { options: eraOptions, updateId };\n                }));\n            };\n            this.__internal__observeStatus = (txHash, status) => {\n                if (!status.isFinalized && !status.isInBlock) {\n                    return of(this.__internal__transformResult(new SubmittableResult({\n                        status,\n                        txHash\n                    })));\n                }\n                const blockHash = status.isInBlock\n                    ? status.asInBlock\n                    : status.asFinalized;\n                return api.derive.tx.events(blockHash).pipe(map(({ block, events }) => this.__internal__transformResult(new SubmittableResult({\n                    ...filterEvents(txHash, block, events, status),\n                    status,\n                    txHash\n                }))), catchError((internalError) => of(this.__internal__transformResult(new SubmittableResult({\n                    internalError,\n                    status,\n                    txHash\n                })))));\n            };\n            this.__internal__observeSend = (info) => {\n                return api.rpc.author.submitExtrinsic(this).pipe(tap((hash) => {\n                    this.__internal__updateSigner(hash, info);\n                }));\n            };\n            this.__internal__observeSubscribe = (info) => {\n                const txHash = this.hash;\n                return api.rpc.author.submitAndWatchExtrinsic(this).pipe(switchMap((status) => this.__internal__observeStatus(txHash, status)), tap((status) => {\n                    this.__internal__updateSigner(status, info);\n                }));\n            };\n            this.__internal__signViaSigner = async (address, options, header) => {\n                const signer = options.signer || api.signer;\n                if (!signer) {\n                    throw new Error('No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n                }\n                const payload = this.registry.createTypeUnsafe('SignerPayload', [objectSpread({}, options, {\n                        address,\n                        blockNumber: header ? header.number : 0,\n                        method: this.method\n                    })]);\n                let result;\n                if (isFunction(signer.signPayload)) {\n                    result = await signer.signPayload(payload.toPayload());\n                }\n                else if (isFunction(signer.signRaw)) {\n                    result = await signer.signRaw(payload.toRaw());\n                }\n                else {\n                    throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');\n                }\n                // Here we explicitly call `toPayload()` again instead of working with an object\n                // (reference) as passed to the signer. This means that we are sure that the\n                // payload data is not modified from our inputs, but the signer\n                super.addSignature(address, result.signature, payload.toPayload());\n                return result.id;\n            };\n            this.__internal__updateSigner = (status, info) => {\n                if (info && (info.updateId !== -1)) {\n                    const { options, updateId } = info;\n                    const signer = options.signer || api.signer;\n                    if (signer && isFunction(signer.update)) {\n                        signer.update(updateId, status);\n                    }\n                }\n            };\n            this.__internal__ignoreStatusCb = apiType === 'rxjs';\n        }\n        get hasDryRun() {\n            return isFunction(api.rpc.system?.dryRun);\n        }\n        get hasPaymentInfo() {\n            return isFunction(api.call.transactionPaymentApi?.queryInfo);\n        }\n        // dry run an extrinsic\n        dryRun(account, optionsOrHash) {\n            if (!this.hasDryRun) {\n                throw new Error('The system.dryRun RPC call is not available in your environment');\n            }\n            if (blockHash || isString(optionsOrHash) || isU8a(optionsOrHash)) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return decorateMethod(() => api.rpc.system.dryRun(this.toHex(), blockHash || optionsOrHash));\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n            return decorateMethod(() => this.__internal__observeSign(account, optionsOrHash).pipe(switchMap(() => api.rpc.system.dryRun(this.toHex()))))();\n        }\n        // calculate the payment info for this transaction (if signed and submitted)\n        paymentInfo(account, optionsOrHash) {\n            if (!this.hasPaymentInfo) {\n                throw new Error('The transactionPaymentApi.queryInfo runtime call is not available in your environment');\n            }\n            if (blockHash || isString(optionsOrHash) || isU8a(optionsOrHash)) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return decorateMethod(() => api.callAt(blockHash || optionsOrHash).pipe(switchMap((callAt) => {\n                    const u8a = this.toU8a();\n                    return callAt.transactionPaymentApi.queryInfo(u8a, u8a.length);\n                })));\n            }\n            const [allOptions] = makeSignAndSendOptions(optionsOrHash);\n            const address = isKeyringPair(account) ? account.address : account.toString();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n            return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe(first(), switchMap((signingInfo) => {\n                // setup our options (same way as in signAndSend)\n                const eraOptions = makeEraOptions(api, this.registry, allOptions, signingInfo);\n                const signOptions = makeSignOptions(api, eraOptions, {});\n                // 1. Don't use the internal objects inside the new tx (hence toU8a)\n                // 2. Don't override the data from existing signed extrinsics\n                // 3. Ensure that this object stays intact, with no new sign after operation\n                const u8a = api.tx(this.toU8a()).signFake(address, signOptions).toU8a();\n                return api.call.transactionPaymentApi.queryInfo(u8a, u8a.length);\n            })))();\n        }\n        // send implementation for both immediate Hash and statusCb variants\n        send(statusCb) {\n            const isSubscription = api.hasSubscriptions && (this.__internal__ignoreStatusCb || !!statusCb);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n            return decorateMethod(isSubscription\n                ? this.__internal__observeSubscribe\n                : this.__internal__observeSend)(statusCb);\n        }\n        /**\n         * @description Signs a transaction, returning `this` to allow chaining. E.g.: `signAsync(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.\n         */\n        signAsync(account, partialOptions) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n            return decorateMethod(() => this.__internal__observeSign(account, partialOptions).pipe(map(() => this)))();\n        }\n        // signAndSend implementation for all 3 cases above\n        signAndSend(account, partialOptions, optionalStatusCb) {\n            const [options, statusCb] = makeSignAndSendOptions(partialOptions, optionalStatusCb);\n            const isSubscription = api.hasSubscriptions && (this.__internal__ignoreStatusCb || !!statusCb);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n            return decorateMethod(() => this.__internal__observeSign(account, options).pipe(switchMap((info) => isSubscription\n                ? this.__internal__observeSubscribe(info)\n                : this.__internal__observeSend(info))) // FIXME This is wrong, SubmittableResult is _not_ a codec\n            )(statusCb);\n        }\n        // adds a transform to the result, applied before result is returned\n        withResultTransform(transform) {\n            this.__internal__transformResult = transform;\n            return this;\n        }\n    }\n    return Submittable;\n}\n", "//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n", "import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n", "import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n", "export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n", "import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n", "export {};\n//# sourceMappingURL=types.js.map", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n", "import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n", "import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n", "import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n", "import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n", "import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n", "import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n", "import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n", "import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n", "import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n", "import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n", "import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n", "import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n", "import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n", "import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n", "import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n", "import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n", "import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n", "import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n", "import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n", "import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n", "export { filterEvents } from './filterEvents.js';\nexport { isKeyringPair } from './isKeyringPair.js';\nexport { l } from './logging.js';\nexport * from './decorate.js';\n", "import { isCompact } from '@polkadot/util';\nimport { l } from './logging.js';\nexport function filterEvents(txHash, { block: { extrinsics, header } }, allEvents, status) {\n    // extrinsics to hashes\n    for (const [txIndex, x] of extrinsics.entries()) {\n        if (x.hash.eq(txHash)) {\n            return {\n                blockNumber: isCompact(header.number) ? header.number.unwrap() : header.number,\n                events: allEvents.filter(({ phase }) => phase.isApplyExtrinsic &&\n                    phase.asApplyExtrinsic.eqn(txIndex)),\n                txIndex\n            };\n        }\n    }\n    // if we do get the block after finalized, it _should_ be there\n    // only warn on filtering with isInBlock (finalization finalizes after)\n    if (status.isInBlock) {\n        const allHashes = extrinsics.map((x) => x.hash.toHex());\n        l.warn(`block ${header.hash.toHex()}: Unable to find extrinsic ${txHash.toHex()} inside ${allHashes.join(', ')}`);\n    }\n    return {};\n}\n", "import { logger } from '@polkadot/util';\nexport const l = /*#__PURE__*/ logger('api/util');\n", "import { isFunction } from '@polkadot/util';\nexport function isKeyringPair(account) {\n    return isFunction(account.sign);\n}\n", "import { lazyDeriveSection } from '@polkadot/api-derive';\n/**\n * This is a section decorator which keeps all type information.\n */\nexport function decorateDeriveSections(decorateMethod, derives) {\n    const getKeys = (s) => Object.keys(derives[s]);\n    const creator = (s, m) => decorateMethod(derives[s][m]);\n    const result = {};\n    const names = Object.keys(derives);\n    for (let i = 0, count = names.length; i < count; i++) {\n        lazyDeriveSection(result, names[i], getKeys, creator);\n    }\n    return result;\n}\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "export default [];\n", "import { lazyDeriveSection } from './util/index.js';\nimport { derive } from './derive.js';\nexport * from './derive.js';\nexport * from './type/index.js';\nexport { lazyDeriveSection };\nconst checks = {\n    allianceMotion: {\n        instances: ['allianceMotion'],\n        methods: []\n    },\n    bagsList: {\n        instances: ['voterBagsList', 'voterList', 'bagsList'],\n        methods: [],\n        withDetect: true\n    },\n    contracts: {\n        instances: ['contracts'],\n        methods: []\n    },\n    council: {\n        instances: ['council'],\n        methods: [],\n        withDetect: true\n    },\n    crowdloan: {\n        instances: ['crowdloan'],\n        methods: []\n    },\n    democracy: {\n        instances: ['democracy'],\n        methods: []\n    },\n    elections: {\n        instances: ['phragmenElection', 'electionsPhragmen', 'elections', 'council'],\n        methods: [],\n        withDetect: true\n    },\n    imOnline: {\n        instances: ['imOnline'],\n        methods: []\n    },\n    membership: {\n        instances: ['membership'],\n        methods: []\n    },\n    parachains: {\n        instances: ['parachains', 'registrar'],\n        methods: []\n    },\n    session: {\n        instances: ['session'],\n        methods: []\n    },\n    society: {\n        instances: ['society'],\n        methods: []\n    },\n    staking: {\n        instances: ['staking'],\n        methods: ['erasRewardPoints']\n    },\n    technicalCommittee: {\n        instances: ['technicalCommittee'],\n        methods: [],\n        withDetect: true\n    },\n    treasury: {\n        instances: ['treasury'],\n        methods: []\n    }\n};\nfunction getModuleInstances(api, specName, moduleName) {\n    return api.registry.getModuleInstances(specName, moduleName) || [];\n}\n/**\n * Returns an object that will inject `api` into all the functions inside\n * `allSections`, and keep the object architecture of `allSections`.\n */\n/** @internal */\nfunction injectFunctions(instanceId, api, derives) {\n    const result = {};\n    const names = Object.keys(derives);\n    const keys = Object.keys(api.query);\n    const specName = api.runtimeVersion.specName;\n    const filterKeys = (q) => keys.includes(q);\n    const filterInstances = (q) => getModuleInstances(api, specName, q).some(filterKeys);\n    const filterMethods = (all) => (m) => all.some((q) => keys.includes(q) && api.query[q][m]);\n    const getKeys = (s) => Object.keys(derives[s]);\n    const creator = (s, m) => derives[s][m](instanceId, api);\n    const isIncluded = (c) => (!checks[c] || ((checks[c].instances.some(filterKeys) && (!checks[c].methods.length ||\n        checks[c].methods.every(filterMethods(checks[c].instances)))) ||\n        (checks[c].withDetect &&\n            checks[c].instances.some(filterInstances))));\n    for (let i = 0, count = names.length; i < count; i++) {\n        const name = names[i];\n        isIncluded(name) &&\n            lazyDeriveSection(result, name, getKeys, creator);\n    }\n    return result;\n}\n/** @internal */\nexport function getAvailableDerives(instanceId, api, custom = {}) {\n    return {\n        ...injectFunctions(instanceId, api, derive),\n        ...injectFunctions(instanceId, api, custom)\n    };\n}\n", "export { drr, memo } from '@polkadot/rpc-core';\nexport * from './approvalFlagsToBools.js';\nexport * from './blockNumber.js';\nexport * from './cache.js';\nexport * from './cacheImpl.js';\nexport * from './first.js';\nexport * from './lazy.js';\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as providerInfo } from '@polkadot/rpc-provider/packageInfo';\nimport { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nexport default [providerInfo, typesInfo];\n", "import { Observable, publishReplay, refCount } from 'rxjs';\nimport { rpcDefinitions } from '@polkadot/types';\nimport { hexToU8a, isFunction, isNull, isUndefined, lazyMethod, logger, memoize, objectSpread, u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { drr, refCountDelay } from './util/index.js';\nexport { packageInfo } from './packageInfo.js';\nexport * from './util/index.js';\nconst l = logger('rpc-core');\nconst EMPTY_META = {\n    fallback: undefined,\n    modifier: { isOptional: true },\n    type: {\n        asMap: { linked: { isTrue: false } },\n        isMap: false\n    }\n};\n/** @internal */\nfunction logErrorMessage(method, { noErrorLog, params, type }, error) {\n    if (noErrorLog) {\n        return;\n    }\n    l.error(`${method}(${params.map(({ isOptional, name, type }) => `${name}${isOptional ? '?' : ''}: ${type}`).join(', ')}): ${type}:: ${error.message}`);\n}\nfunction isTreatAsHex(key) {\n    // :code is problematic - it does not have the length attached, which is\n    // unlike all other storage entries where it is indeed properly encoded\n    return ['0x3a636f6465'].includes(key.toHex());\n}\n/**\n * @name Rpc\n * @summary The API may use a HTTP or WebSockets provider.\n * @description It allows for querying a Polkadot Client Node.\n * WebSockets provider is recommended since HTTP provider only supports basic querying.\n *\n * ```mermaid\n * graph LR;\n *   A[Api] --> |WebSockets| B[WsProvider];\n *   B --> |endpoint| C[ws://127.0.0.1:9944]\n * ```\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Rpc from '@polkadot/rpc-core';\n * import { WsProvider } from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const rpc = new Rpc(provider);\n * ```\n */\nexport class RpcCore {\n    /**\n     * @constructor\n     * Default constructor for the core RPC handler\n     * @param  {ProviderInterface} provider An API provider using any of the supported providers (HTTP, SC or WebSocket)\n     */\n    constructor(instanceId, registry, { isPedantic = true, provider, userRpc = {} }) {\n        this.__internal__storageCache = new Map();\n        this.mapping = new Map();\n        this.sections = [];\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        if (!provider || !isFunction(provider.send)) {\n            throw new Error('Expected Provider to API create');\n        }\n        this.__internal__instanceId = instanceId;\n        this.__internal__isPedantic = isPedantic;\n        this.__internal__registryDefault = registry;\n        this.provider = provider;\n        const sectionNames = Object.keys(rpcDefinitions);\n        // these are the base keys (i.e. part of jsonrpc)\n        this.sections.push(...sectionNames);\n        // decorate all interfaces, defined and user on this instance\n        this.addUserInterfaces(userRpc);\n    }\n    /**\n     * @description Returns the connected status of a provider\n     */\n    get isConnected() {\n        return this.provider.isConnected;\n    }\n    /**\n     * @description Manually connect from the attached provider\n     */\n    connect() {\n        return this.provider.connect();\n    }\n    /**\n     * @description Manually disconnect from the attached provider\n     */\n    disconnect() {\n        return this.provider.disconnect();\n    }\n    /**\n     * @description Sets a registry swap (typically from Api)\n     */\n    setRegistrySwap(registrySwap) {\n        this.__internal__getBlockRegistry = memoize(registrySwap, {\n            getInstanceId: () => this.__internal__instanceId\n        });\n    }\n    /**\n     * @description Sets a function to resolve block hash from block number\n     */\n    setResolveBlockHash(resolveBlockHash) {\n        this.__internal__getBlockHash = memoize(resolveBlockHash, {\n            getInstanceId: () => this.__internal__instanceId\n        });\n    }\n    addUserInterfaces(userRpc) {\n        // add any extra user-defined sections\n        this.sections.push(...Object.keys(userRpc).filter((k) => !this.sections.includes(k)));\n        for (let s = 0, scount = this.sections.length; s < scount; s++) {\n            const section = this.sections[s];\n            const defs = objectSpread({}, rpcDefinitions[section], userRpc[section]);\n            const methods = Object.keys(defs);\n            for (let m = 0, mcount = methods.length; m < mcount; m++) {\n                const method = methods[m];\n                const def = defs[method];\n                const jsonrpc = def.endpoint || `${section}_${method}`;\n                if (!this.mapping.has(jsonrpc)) {\n                    const isSubscription = !!def.pubsub;\n                    if (!this[section]) {\n                        this[section] = {};\n                    }\n                    this.mapping.set(jsonrpc, objectSpread({}, def, { isSubscription, jsonrpc, method, section }));\n                    lazyMethod(this[section], method, () => isSubscription\n                        ? this._createMethodSubscribe(section, method, def)\n                        : this._createMethodSend(section, method, def));\n                }\n            }\n        }\n    }\n    _memomize(creator, def) {\n        const memoOpts = { getInstanceId: () => this.__internal__instanceId };\n        const memoized = memoize(creator(true), memoOpts);\n        memoized.raw = memoize(creator(false), memoOpts);\n        memoized.meta = def;\n        return memoized;\n    }\n    _formatResult(isScale, registry, blockHash, method, def, params, result) {\n        return isScale\n            ? this._formatOutput(registry, blockHash, method, def, params, result)\n            : result;\n    }\n    _createMethodSend(section, method, def) {\n        const rpcName = def.endpoint || `${section}_${method}`;\n        const hashIndex = def.params.findIndex(({ isHistoric }) => isHistoric);\n        let memoized = null;\n        // execute the RPC call, doing a registry swap for historic as applicable\n        const callWithRegistry = async (isScale, values) => {\n            const blockId = hashIndex === -1\n                ? null\n                : values[hashIndex];\n            const blockHash = blockId && def.params[hashIndex].type === 'BlockNumber'\n                ? await this.__internal__getBlockHash?.(blockId)\n                : blockId;\n            const { registry } = isScale && blockHash && this.__internal__getBlockRegistry\n                ? await this.__internal__getBlockRegistry(u8aToU8a(blockHash))\n                : { registry: this.__internal__registryDefault };\n            const params = this._formatParams(registry, null, def, values);\n            // only cache .at(<blockHash>) queries, e.g. where valid blockHash was supplied\n            const result = await this.provider.send(rpcName, params.map((p) => p.toJSON()), !!blockHash);\n            return this._formatResult(isScale, registry, blockHash, method, def, params, result);\n        };\n        const creator = (isScale) => (...values) => {\n            const isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];\n            return new Observable((observer) => {\n                callWithRegistry(isScale, values)\n                    .then((value) => {\n                    observer.next(value);\n                    observer.complete();\n                })\n                    .catch((error) => {\n                    logErrorMessage(method, def, error);\n                    observer.error(error);\n                    observer.complete();\n                });\n                return () => {\n                    // delete old results from cache\n                    if (isScale) {\n                        memoized?.unmemoize(...values);\n                    }\n                    else {\n                        memoized?.raw.unmemoize(...values);\n                    }\n                };\n            }).pipe(\n            // eslint-disable-next-line deprecation/deprecation\n            publishReplay(1), // create a Replay(1)\n            isDelayed\n                ? refCountDelay() // Unsubscribe after delay\n                // eslint-disable-next-line deprecation/deprecation\n                : refCount());\n        };\n        memoized = this._memomize(creator, def);\n        return memoized;\n    }\n    // create a subscriptor, it subscribes once and resolves with the id as subscribe\n    _createSubscriber({ paramsJson, subName, subType, update }, errorHandler) {\n        return new Promise((resolve, reject) => {\n            this.provider\n                .subscribe(subType, subName, paramsJson, update)\n                .then(resolve)\n                .catch((error) => {\n                errorHandler(error);\n                reject(error);\n            });\n        });\n    }\n    _createMethodSubscribe(section, method, def) {\n        const [updateType, subMethod, unsubMethod] = def.pubsub;\n        const subName = `${section}_${subMethod}`;\n        const unsubName = `${section}_${unsubMethod}`;\n        const subType = `${section}_${updateType}`;\n        let memoized = null;\n        const creator = (isScale) => (...values) => {\n            return new Observable((observer) => {\n                // Have at least an empty promise, as used in the unsubscribe\n                let subscriptionPromise = Promise.resolve(null);\n                const registry = this.__internal__registryDefault;\n                const errorHandler = (error) => {\n                    logErrorMessage(method, def, error);\n                    observer.error(error);\n                };\n                try {\n                    const params = this._formatParams(registry, null, def, values);\n                    const update = (error, result) => {\n                        if (error) {\n                            logErrorMessage(method, def, error);\n                            return;\n                        }\n                        try {\n                            observer.next(this._formatResult(isScale, registry, null, method, def, params, result));\n                        }\n                        catch (error) {\n                            observer.error(error);\n                        }\n                    };\n                    subscriptionPromise = this._createSubscriber({ paramsJson: params.map((p) => p.toJSON()), subName, subType, update }, errorHandler);\n                }\n                catch (error) {\n                    errorHandler(error);\n                }\n                // Teardown logic\n                return () => {\n                    // Delete from cache, so old results don't hang around\n                    if (isScale) {\n                        memoized?.unmemoize(...values);\n                    }\n                    else {\n                        memoized?.raw.unmemoize(...values);\n                    }\n                    // Unsubscribe from provider\n                    subscriptionPromise\n                        .then((subscriptionId) => isNull(subscriptionId)\n                        ? Promise.resolve(false)\n                        : this.provider.unsubscribe(subType, unsubName, subscriptionId))\n                        .catch((error) => logErrorMessage(method, def, error));\n                };\n            }).pipe(drr());\n        };\n        memoized = this._memomize(creator, def);\n        return memoized;\n    }\n    _formatParams(registry, blockHash, def, inputs) {\n        const count = inputs.length;\n        const reqCount = def.params.filter(({ isOptional }) => !isOptional).length;\n        if (count < reqCount || count > def.params.length) {\n            throw new Error(`Expected ${def.params.length} parameters${reqCount === def.params.length ? '' : ` (${def.params.length - reqCount} optional)`}, ${count} found instead`);\n        }\n        const params = new Array(count);\n        for (let i = 0; i < count; i++) {\n            params[i] = registry.createTypeUnsafe(def.params[i].type, [inputs[i]], { blockHash });\n        }\n        return params;\n    }\n    _formatOutput(registry, blockHash, method, rpc, params, result) {\n        if (rpc.type === 'StorageData') {\n            const key = params[0];\n            return this._formatStorageData(registry, blockHash, key, result);\n        }\n        else if (rpc.type === 'StorageChangeSet') {\n            const keys = params[0];\n            return keys\n                ? this._formatStorageSet(registry, result.block, keys, result.changes)\n                : registry.createType('StorageChangeSet', result);\n        }\n        else if (rpc.type === 'Vec<StorageChangeSet>') {\n            const jsonSet = result;\n            const count = jsonSet.length;\n            const mapped = new Array(count);\n            for (let i = 0; i < count; i++) {\n                const { block, changes } = jsonSet[i];\n                mapped[i] = [\n                    registry.createType('BlockHash', block),\n                    this._formatStorageSet(registry, block, params[0], changes)\n                ];\n            }\n            // we only query at a specific block, not a range - flatten\n            return method === 'queryStorageAt'\n                ? mapped[0][1]\n                : mapped;\n        }\n        return registry.createTypeUnsafe(rpc.type, [result], { blockHash });\n    }\n    _formatStorageData(registry, blockHash, key, value) {\n        const isEmpty = isNull(value);\n        // we convert to Uint8Array since it maps to the raw encoding, all\n        // data will be correctly encoded (incl. numbers, excl. :code)\n        const input = isEmpty\n            ? null\n            : isTreatAsHex(key)\n                ? value\n                : u8aToU8a(value);\n        return this._newType(registry, blockHash, key, input, isEmpty);\n    }\n    _formatStorageSet(registry, blockHash, keys, changes) {\n        // For StorageChangeSet, the changes has the [key, value] mappings\n        const count = keys.length;\n        const withCache = count !== 1;\n        const values = new Array(count);\n        // multiple return values (via state.storage subscription), decode the\n        // values one at a time, all based on the supplied query types\n        for (let i = 0; i < count; i++) {\n            values[i] = this._formatStorageSetEntry(registry, blockHash, keys[i], changes, withCache, i);\n        }\n        return values;\n    }\n    _formatStorageSetEntry(registry, blockHash, key, changes, withCache, entryIndex) {\n        const hexKey = key.toHex();\n        const found = changes.find(([key]) => key === hexKey);\n        const isNotFound = isUndefined(found);\n        // if we don't find the value, this is our fallback\n        //   - in the case of an array of values, fill the hole from the cache\n        //   - if a single result value, don't fill - it is not an update hole\n        //   - fallback to an empty option in all cases\n        if (isNotFound && withCache) {\n            const cached = this.__internal__storageCache.get(hexKey);\n            if (cached) {\n                return cached;\n            }\n        }\n        const value = isNotFound\n            ? null\n            : found[1];\n        const isEmpty = isNull(value);\n        const input = isEmpty || isTreatAsHex(key)\n            ? value\n            : u8aToU8a(value);\n        const codec = this._newType(registry, blockHash, key, input, isEmpty, entryIndex);\n        // store the retrieved result - the only issue with this cache is that there is no\n        // clearing of it, so very long running processes (not just a couple of hours, longer)\n        // will increase memory beyond what is allowed.\n        this.__internal__storageCache.set(hexKey, codec);\n        return codec;\n    }\n    _newType(registry, blockHash, key, input, isEmpty, entryIndex = -1) {\n        // single return value (via state.getStorage), decode the value based on the\n        // outputType that we have specified. Fallback to Raw on nothing\n        const type = key.outputType || 'Raw';\n        const meta = key.meta || EMPTY_META;\n        const entryNum = entryIndex === -1\n            ? ''\n            : ` entry ${entryIndex}:`;\n        try {\n            return registry.createTypeUnsafe(type, [\n                isEmpty\n                    ? meta.fallback\n                        // For old-style Linkage, we add an empty linkage at the end\n                        ? type.includes('Linkage<')\n                            ? u8aConcat(hexToU8a(meta.fallback.toHex()), new Uint8Array(2))\n                            : hexToU8a(meta.fallback.toHex())\n                        : undefined\n                    : meta.modifier.isOptional\n                        ? registry.createTypeUnsafe(type, [input], { blockHash, isPedantic: this.__internal__isPedantic })\n                        : input\n            ], { blockHash, isFallback: isEmpty && !!meta.fallback, isOptional: meta.modifier.isOptional, isPedantic: this.__internal__isPedantic && !meta.modifier.isOptional });\n        }\n        catch (error) {\n            throw new Error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:${entryNum}: ${error.message}`);\n        }\n    }\n}\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nimport { packageInfo as createInfo } from '@polkadot/types-create/packageInfo';\nexport default [codecInfo, createInfo];\n", "export const packageInfo = { name: '@polkadot/types-create', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '10.9.1' };\n", "import * as typeDefinitions from './interfaces/definitions.js';\nimport rpcDefinitions from './interfaces/jsonrpc.js';\nexport { TypeDefInfo } from '@polkadot/types-create';\nexport { convertSiV0toV1 } from './metadata/PortableRegistry/index.js';\nexport { packageInfo } from './packageInfo.js';\nexport { unwrapStorageType } from './util/index.js';\nexport * from './codec/index.js';\nexport * from './create/index.js';\nexport * from './index.types.js';\nexport * from './metadata/index.js';\nexport { rpcDefinitions, typeDefinitions };\n", "export * from './essentials.js';\nexport { default as assets } from './assets/definitions.js';\nexport { default as aura } from './aura/definitions.js';\nexport { default as authorship } from './authorship/definitions.js';\nexport { default as babe } from './babe/definitions.js';\nexport { default as balances } from './balances/definitions.js';\nexport { default as beefy } from './beefy/definitions.js';\nexport { default as benchmark } from './benchmark/definitions.js';\nexport { default as blockbuilder } from './blockbuilder/definitions.js';\nexport { default as collective } from './collective/definitions.js';\nexport { default as consensus } from './consensus/definitions.js';\nexport { default as contracts } from './contracts/definitions.js';\nexport { default as democracy } from './democracy/definitions.js';\nexport { default as dev } from './dev/definitions.js';\nexport { default as discovery } from './discovery/definitions.js';\nexport { default as elections } from './elections/definitions.js';\nexport { default as engine } from './engine/definitions.js';\nexport { default as evm } from './evm/definitions.js';\nexport { default as extrinsics } from './extrinsics/definitions.js';\nexport { default as fungibles } from './fungibles/definitions.js';\nexport { default as genericAsset } from './genericAsset/definitions.js';\nexport { default as gilt } from './gilt/definitions.js';\nexport { default as grandpa } from './grandpa/definitions.js';\nexport { default as identity } from './identity/definitions.js';\nexport { default as imOnline } from './imOnline/definitions.js';\nexport { default as lottery } from './lottery/definitions.js';\nexport { default as mmr } from './mmr/definitions.js';\nexport { default as nfts } from './nfts/definitions.js';\nexport { default as nompools } from './nompools/definitions.js';\nexport { default as offences } from './offences/definitions.js';\nexport { default as pow } from './pow/definitions.js';\nexport { default as proxy } from './proxy/definitions.js';\nexport { default as recovery } from './recovery/definitions.js';\nexport { default as scheduler } from './scheduler/definitions.js';\nexport { default as session } from './session/definitions.js';\nexport { default as society } from './society/definitions.js';\nexport { default as staking } from './staking/definitions.js';\nexport { default as support } from './support/definitions.js';\nexport { default as syncstate } from './syncstate/definitions.js';\nexport { default as system } from './system/definitions.js';\nexport { default as treasury } from './treasury/definitions.js';\nexport { default as txpayment } from './txpayment/definitions.js';\nexport { default as txqueue } from './txqueue/definitions.js';\nexport { default as uniques } from './uniques/definitions.js';\nexport { default as utility } from './utility/definitions.js';\nexport { default as vesting } from './vesting/definitions.js';\nexport { default as attestations } from './attestations/definitions.js';\nexport { default as bridges } from './bridges/definitions.js';\nexport { default as claims } from './claims/definitions.js';\nexport { default as crowdloan } from './crowdloan/definitions.js';\nexport { default as cumulus } from './cumulus/definitions.js';\nexport { default as finality } from './finality/definitions.js';\nexport { default as parachains } from './parachains/definitions.js';\nexport { default as poll } from './poll/definitions.js';\nexport { default as purchase } from './purchase/definitions.js';\nexport { default as xcm } from './xcm/definitions.js';\nexport { default as contractsAbi } from './contractsAbi/definitions.js';\nexport { default as eth } from './eth/definitions.js';\nexport { default as nimbus } from './nimbus/definitions.js';\nexport { default as ormlOracle } from './ormlOracle/definitions.js';\nexport { default as ormlTokens } from './ormlTokens/definitions.js';\nexport { default as rpc } from './rpc/definitions.js';\nexport { default as author } from './author/definitions.js';\nexport { default as chain } from './chain/definitions.js';\nexport { default as childstate } from './childstate/definitions.js';\nexport { default as offchain } from './offchain/definitions.js';\nexport { default as payment } from './payment/definitions.js';\nexport { default as state } from './state/definitions.js';\n", "export { default as metadata } from './metadata/definitions.js';\nexport { default as runtime } from './runtime/definitions.js';\nexport { default as scaleInfo } from './scaleInfo/definitions.js';\n", "import { AllHashers } from './hashers.js';\nimport { runtime } from './runtime.js';\nimport { v9 } from './v9.js';\nimport { v10 } from './v10.js';\nimport { v11 } from './v11.js';\nimport { v12 } from './v12.js';\nimport { v13 } from './v13.js';\nimport { v14 } from './v14.js';\nimport { v15 } from './v15.js';\nexport { AllHashers };\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        // all known\n        ...v9,\n        ...v10,\n        ...v11,\n        ...v12,\n        ...v13,\n        ...v14,\n        ...v15,\n        // latest mappings\n        // NOTE: For v15, we only added the runtime defintions,\n        // hence latest for most pointing to the previous V14\n        ErrorMetadataLatest: 'ErrorMetadataV14',\n        EventMetadataLatest: 'EventMetadataV14',\n        ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',\n        FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',\n        FunctionMetadataLatest: 'FunctionMetadataV14',\n        MetadataLatest: 'MetadataV15',\n        PalletCallMetadataLatest: 'PalletCallMetadataV14',\n        PalletConstantMetadataLatest: 'PalletConstantMetadataV14',\n        PalletErrorMetadataLatest: 'PalletErrorMetadataV14',\n        PalletEventMetadataLatest: 'PalletEventMetadataV14',\n        PalletMetadataLatest: 'PalletMetadataV15',\n        PalletStorageMetadataLatest: 'PalletStorageMetadataV14',\n        PortableType: 'PortableTypeV14',\n        RuntimeApiMetadataLatest: 'RuntimeApiMetadataV15',\n        SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',\n        StorageEntryMetadataLatest: 'StorageEntryMetadataV14',\n        StorageEntryModifierLatest: 'StorageEntryModifierV14',\n        StorageEntryTypeLatest: 'StorageEntryTypeV14',\n        StorageHasher: 'StorageHasherV14',\n        // additional types\n        OpaqueMetadata: 'Opaque<Bytes>',\n        // the enum containing all the mappings\n        MetadataAll: {\n            _enum: {\n                V0: 'DoNotConstruct<MetadataV0>',\n                V1: 'DoNotConstruct<MetadataV1>',\n                V2: 'DoNotConstruct<MetadataV2>',\n                V3: 'DoNotConstruct<MetadataV3>',\n                V4: 'DoNotConstruct<MetadataV4>',\n                V5: 'DoNotConstruct<MetadataV5>',\n                V6: 'DoNotConstruct<MetadataV6>',\n                V7: 'DoNotConstruct<MetadataV7>',\n                V8: 'DoNotConstruct<MetadataV8>',\n                // First version on Kusama in V9, dropping will be problematic\n                V9: 'MetadataV9',\n                V10: 'MetadataV10',\n                V11: 'MetadataV11',\n                V12: 'MetadataV12',\n                V13: 'MetadataV13',\n                V14: 'MetadataV14',\n                V15: 'MetadataV15'\n            }\n        }\n    }\n};\n", "/* eslint-disable sort-keys */\nexport const AllHashers = {\n    Blake2_128: null,\n    Blake2_256: null,\n    Blake2_128Concat: null,\n    Twox128: null,\n    Twox256: null,\n    Twox64Concat: null,\n    // new in v11\n    Identity: null\n};\n", "const META_V1_TO_V2 = {\n    metadata: {\n        description: 'Returns the metadata of a runtime',\n        params: [],\n        type: 'OpaqueMetadata'\n    }\n};\nexport const runtime = {\n    Metadata: [\n        {\n            methods: {\n                metadata_at_version: {\n                    description: 'Returns the metadata at a given version.',\n                    params: [\n                        {\n                            name: 'version',\n                            type: 'u32'\n                        }\n                    ],\n                    type: 'Option<OpaqueMetadata>'\n                },\n                metadata_versions: {\n                    description: 'Returns the supported metadata versions.',\n                    params: [],\n                    type: 'Vec<u32>'\n                },\n                ...META_V1_TO_V2\n            },\n            version: 2\n        },\n        {\n            methods: {\n                ...META_V1_TO_V2\n            },\n            version: 1\n        }\n    ]\n};\n", "export const v9 = {\n    // v9\n    ErrorMetadataV9: {\n        name: 'Text',\n        docs: 'Vec<Text>'\n    },\n    EventMetadataV9: {\n        name: 'Text',\n        args: 'Vec<Type>',\n        docs: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV9: {\n        name: 'Text',\n        type: 'Type'\n    },\n    FunctionMetadataV9: {\n        name: 'Text',\n        args: 'Vec<FunctionArgumentMetadataV9>',\n        docs: 'Vec<Text>'\n    },\n    MetadataV9: {\n        modules: 'Vec<ModuleMetadataV9>'\n    },\n    ModuleConstantMetadataV9: {\n        name: 'Text',\n        type: 'Type',\n        value: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    ModuleMetadataV9: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV9>',\n        calls: 'Option<Vec<FunctionMetadataV9>>',\n        events: 'Option<Vec<EventMetadataV9>>',\n        constants: 'Vec<ModuleConstantMetadataV9>',\n        errors: 'Vec<ErrorMetadataV9>'\n    },\n    StorageEntryMetadataV9: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV9',\n        type: 'StorageEntryTypeV9',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryModifierV9: {\n        _enum: ['Optional', 'Default', 'Required']\n    },\n    StorageEntryTypeV9: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV9',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV9',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV9'\n            }\n        }\n    },\n    StorageHasherV9: {\n        _enum: {\n            Blake2_128: null,\n            Blake2_256: null,\n            Twox128: null,\n            Twox256: null,\n            Twox64Concat: null\n        }\n    },\n    StorageMetadataV9: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV9>'\n    }\n};\n", "export const v10 = {\n    // v10\n    ErrorMetadataV10: 'ErrorMetadataV9',\n    EventMetadataV10: 'EventMetadataV9',\n    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n    FunctionMetadataV10: 'FunctionMetadataV9',\n    MetadataV10: {\n        modules: 'Vec<ModuleMetadataV10>'\n    },\n    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n    ModuleMetadataV10: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV10>',\n        calls: 'Option<Vec<FunctionMetadataV10>>',\n        events: 'Option<Vec<EventMetadataV10>>',\n        constants: 'Vec<ModuleConstantMetadataV10>',\n        errors: 'Vec<ErrorMetadataV10>'\n    },\n    StorageEntryModifierV10: 'StorageEntryModifierV9',\n    StorageEntryMetadataV10: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV10',\n        type: 'StorageEntryTypeV10',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV10: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV10',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV10',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV10'\n            }\n        }\n    },\n    StorageMetadataV10: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV10>'\n    },\n    StorageHasherV10: {\n        _enum: {\n            Blake2_128: null,\n            Blake2_256: null,\n            Blake2_128Concat: null,\n            Twox128: null,\n            Twox256: null,\n            Twox64Concat: null\n        }\n    }\n};\n", "import { AllHashers } from './hashers.js';\nexport const v11 = {\n    // v11\n    ErrorMetadataV11: 'ErrorMetadataV10',\n    EventMetadataV11: 'EventMetadataV10',\n    ExtrinsicMetadataV11: {\n        version: 'u8',\n        signedExtensions: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n    FunctionMetadataV11: 'FunctionMetadataV10',\n    MetadataV11: {\n        modules: 'Vec<ModuleMetadataV11>',\n        extrinsic: 'ExtrinsicMetadataV11'\n    },\n    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n    ModuleMetadataV11: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV11>',\n        calls: 'Option<Vec<FunctionMetadataV11>>',\n        events: 'Option<Vec<EventMetadataV11>>',\n        constants: 'Vec<ModuleConstantMetadataV11>',\n        errors: 'Vec<ErrorMetadataV11>'\n    },\n    StorageEntryModifierV11: 'StorageEntryModifierV10',\n    StorageEntryMetadataV11: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV11',\n        type: 'StorageEntryTypeV11',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV11: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV11',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV11',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV11'\n            }\n        }\n    },\n    StorageMetadataV11: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV11>'\n    },\n    StorageHasherV11: {\n        _enum: AllHashers\n    }\n};\n", "export const v12 = {\n    // v12\n    ErrorMetadataV12: 'ErrorMetadataV11',\n    EventMetadataV12: 'EventMetadataV11',\n    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n    FunctionMetadataV12: 'FunctionMetadataV11',\n    MetadataV12: {\n        modules: 'Vec<ModuleMetadataV12>',\n        extrinsic: 'ExtrinsicMetadataV12'\n    },\n    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n    ModuleMetadataV12: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV12>',\n        calls: 'Option<Vec<FunctionMetadataV12>>',\n        events: 'Option<Vec<EventMetadataV12>>',\n        constants: 'Vec<ModuleConstantMetadataV12>',\n        errors: 'Vec<ErrorMetadataV12>',\n        index: 'u8'\n    },\n    StorageEntryModifierV12: 'StorageEntryModifierV11',\n    StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n    StorageEntryTypeV12: 'StorageEntryTypeV11',\n    StorageMetadataV12: 'StorageMetadataV11',\n    StorageHasherV12: 'StorageHasherV11'\n};\n", "export const v13 = {\n    // v13\n    ErrorMetadataV13: 'ErrorMetadataV12',\n    EventMetadataV13: 'EventMetadataV12',\n    ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',\n    FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',\n    FunctionMetadataV13: 'FunctionMetadataV12',\n    MetadataV13: {\n        modules: 'Vec<ModuleMetadataV13>',\n        extrinsic: 'ExtrinsicMetadataV13'\n    },\n    ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',\n    ModuleMetadataV13: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV13>',\n        calls: 'Option<Vec<FunctionMetadataV13>>',\n        events: 'Option<Vec<EventMetadataV13>>',\n        constants: 'Vec<ModuleConstantMetadataV13>',\n        errors: 'Vec<ErrorMetadataV13>',\n        index: 'u8'\n    },\n    StorageEntryModifierV13: 'StorageEntryModifierV12',\n    StorageEntryMetadataV13: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV13',\n        type: 'StorageEntryTypeV13',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV13: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV13',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV13',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV13'\n            },\n            NMap: {\n                keyVec: 'Vec<Type>',\n                hashers: 'Vec<StorageHasherV13>',\n                value: 'Type'\n            }\n        }\n    },\n    StorageMetadataV13: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV13>'\n    },\n    StorageHasherV13: 'StorageHasherV12'\n};\n", "import { Si1Variant } from '../scaleInfo/v1.js';\nexport const v14 = {\n    // registry\n    PortableTypeV14: {\n        id: 'Si1LookupTypeId',\n        type: 'Si1Type'\n    },\n    // compatibility with earlier layouts, i.e. don't break previous users\n    ErrorMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<Type>'\n    },\n    EventMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<Type>'\n    },\n    FunctionArgumentMetadataV14: {\n        name: 'Text',\n        type: 'Type',\n        typeName: 'Option<Type>'\n    },\n    FunctionMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<FunctionArgumentMetadataV14>'\n    },\n    // V14\n    ExtrinsicMetadataV14: {\n        type: 'SiLookupTypeId',\n        version: 'u8',\n        signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n    },\n    MetadataV14: {\n        lookup: 'PortableRegistry',\n        pallets: 'Vec<PalletMetadataV14>',\n        extrinsic: 'ExtrinsicMetadataV14',\n        type: 'SiLookupTypeId'\n    },\n    PalletCallMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletConstantMetadataV14: {\n        name: 'Text',\n        type: 'SiLookupTypeId',\n        value: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    PalletErrorMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletEventMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletMetadataV14: {\n        name: 'Text',\n        storage: 'Option<PalletStorageMetadataV14>',\n        calls: 'Option<PalletCallMetadataV14>',\n        events: 'Option<PalletEventMetadataV14>',\n        constants: 'Vec<PalletConstantMetadataV14>',\n        errors: 'Option<PalletErrorMetadataV14>',\n        index: 'u8'\n    },\n    PalletStorageMetadataV14: {\n        prefix: 'Text',\n        // NOTE: Renamed from entries\n        items: 'Vec<StorageEntryMetadataV14>'\n    },\n    SignedExtensionMetadataV14: {\n        identifier: 'Text',\n        type: 'SiLookupTypeId',\n        additionalSigned: 'SiLookupTypeId'\n    },\n    StorageEntryMetadataV14: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV14',\n        type: 'StorageEntryTypeV14',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryModifierV14: 'StorageEntryModifierV13',\n    StorageEntryTypeV14: {\n        _enum: {\n            Plain: 'SiLookupTypeId',\n            Map: {\n                hashers: 'Vec<StorageHasherV14>',\n                key: 'SiLookupTypeId',\n                value: 'SiLookupTypeId'\n            }\n        }\n    },\n    StorageHasherV14: 'StorageHasherV13'\n};\n", "/* eslint-disable sort-keys */\nexport const Si1Variant = {\n    name: 'Text',\n    fields: 'Vec<Si1Field>',\n    index: 'u8',\n    docs: 'Vec<Text>'\n};\nexport const v1 = {\n    Si1Field: {\n        name: 'Option<Text>',\n        type: 'Si1LookupTypeId',\n        typeName: 'Option<Text>',\n        docs: 'Vec<Text>'\n    },\n    Si1LookupTypeId: 'Compact<u32>',\n    Si1Path: 'Si0Path',\n    Si1Type: {\n        path: 'Si1Path',\n        params: 'Vec<Si1TypeParameter>',\n        def: 'Si1TypeDef',\n        docs: 'Vec<Text>'\n    },\n    Si1TypeDef: {\n        _enum: {\n            Composite: 'Si1TypeDefComposite',\n            Variant: 'Si1TypeDefVariant',\n            Sequence: 'Si1TypeDefSequence',\n            Array: 'Si1TypeDefArray',\n            Tuple: 'Si1TypeDefTuple',\n            Primitive: 'Si1TypeDefPrimitive',\n            Compact: 'Si1TypeDefCompact',\n            BitSequence: 'Si1TypeDefBitSequence',\n            // NOTE: This is specific to the implementation for pre-v14 metadata\n            // compatibility (always keep this as the last entry in the enum)\n            HistoricMetaCompat: 'Type'\n        }\n    },\n    Si1TypeDefArray: {\n        len: 'u32',\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefBitSequence: {\n        bitStoreType: 'Si1LookupTypeId',\n        bitOrderType: 'Si1LookupTypeId'\n    },\n    Si1TypeDefCompact: {\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefComposite: {\n        fields: 'Vec<Si1Field>'\n    },\n    Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',\n    Si1TypeDefSequence: {\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',\n    Si1TypeParameter: {\n        name: 'Text',\n        type: 'Option<Si1LookupTypeId>'\n    },\n    Si1TypeDefVariant: {\n        variants: 'Vec<Si1Variant>'\n    },\n    Si1Variant\n};\n", "export const v15 = {\n    // new/adjusted in v15\n    PalletMetadataV15: {\n        name: 'Text',\n        storage: 'Option<PalletStorageMetadataV14>',\n        calls: 'Option<PalletCallMetadataV14>',\n        events: 'Option<PalletEventMetadataV14>',\n        constants: 'Vec<PalletConstantMetadataV14>',\n        errors: 'Option<PalletErrorMetadataV14>',\n        index: 'u8',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMetadataV15: {\n        name: 'Text',\n        methods: 'Vec<RuntimeApiMethodMetadataV15>',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMethodMetadataV15: {\n        name: 'Text',\n        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',\n        output: 'SiLookupTypeId',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMethodParamMetadataV15: {\n        name: 'Text',\n        type: 'SiLookupTypeId'\n    },\n    // actual v15 definition\n    MetadataV15: {\n        lookup: 'PortableRegistry',\n        pallets: 'Vec<PalletMetadataV15>',\n        extrinsic: 'ExtrinsicMetadataV14',\n        type: 'SiLookupTypeId',\n        apis: 'Vec<RuntimeApiMetadataV15>'\n    }\n};\n", "import { runtime } from './runtime.js';\nconst numberTypes = {\n    Fixed64: 'Int<64, Fixed64>',\n    FixedI64: 'Int<64, FixedI64>',\n    FixedU64: 'UInt<64, FixedU64>',\n    Fixed128: 'Int<128, Fixed128>',\n    FixedI128: 'Int<128, FixedI128>',\n    FixedU128: 'UInt<128, FixedU128>',\n    I32F32: 'Int<64, I32F32>',\n    U32F32: 'UInt<64, U32F32>',\n    PerU16: 'UInt<16, PerU16>',\n    Perbill: 'UInt<32, Perbill>',\n    Percent: 'UInt<8, Percent>',\n    Permill: 'UInt<32, Permill>',\n    Perquintill: 'UInt<64, Perquintill>'\n};\nexport const knownOrigins = {\n    //\n    // (1) Defaults from Substrate\n    //\n    Council: 'CollectiveOrigin',\n    System: 'SystemOrigin',\n    TechnicalCommittee: 'CollectiveOrigin',\n    //\n    // (2) Defaults from Polkadot\n    //\n    Xcm: 'XcmOrigin',\n    XcmPallet: 'XcmOrigin',\n    //\n    // (3) Defaults from Acala\n    //\n    Authority: 'AuthorityOrigin',\n    GeneralCouncil: 'CollectiveOrigin'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...numberTypes,\n        AccountId: 'AccountId32',\n        AccountId20: 'GenericEthereumAccountId',\n        AccountId32: 'GenericAccountId32',\n        AccountId33: 'GenericAccountId33',\n        AccountIdOf: 'AccountId',\n        AccountIndex: 'GenericAccountIndex',\n        Address: 'MultiAddress',\n        AssetId: 'u32',\n        Balance: 'UInt<128, Balance>',\n        BalanceOf: 'Balance',\n        Block: 'GenericBlock',\n        BlockNumber: 'u32',\n        BlockNumberFor: 'BlockNumber',\n        BlockNumberOf: 'BlockNumber',\n        Call: 'GenericCall',\n        CallHash: 'Hash',\n        CallHashOf: 'CallHash',\n        ChangesTrieConfiguration: {\n            digestInterval: 'u32',\n            digestLevels: 'u32'\n        },\n        ChangesTrieSignal: {\n            _enum: {\n                NewConfiguration: 'Option<ChangesTrieConfiguration>'\n            }\n        },\n        ConsensusEngineId: 'GenericConsensusEngineId',\n        CodecHash: 'Hash',\n        CrateVersion: {\n            major: 'u16',\n            minor: 'u8',\n            patch: 'u8'\n        },\n        Digest: {\n            logs: 'Vec<DigestItem>'\n        },\n        DigestItem: {\n            _enum: {\n                Other: 'Bytes',\n                AuthoritiesChange: 'Vec<AuthorityId>',\n                ChangesTrieRoot: 'Hash',\n                SealV0: 'SealV0',\n                Consensus: 'Consensus',\n                Seal: 'Seal',\n                PreRuntime: 'PreRuntime',\n                ChangesTrieSignal: 'ChangesTrieSignal',\n                RuntimeEnvironmentUpdated: 'Null' // 8\n            }\n        },\n        ExtrinsicsWeight: {\n            normal: 'Weight',\n            operational: 'Weight'\n        },\n        H32: '[u8; 4; H32]',\n        H64: '[u8; 8; H64]',\n        H128: '[u8; 16; H128]',\n        H160: '[u8; 20; H160]',\n        H256: '[u8; 32; H256]',\n        H512: '[u8; 64; H512]',\n        H1024: '[u8; 128; H1024]',\n        H2048: '[u8; 256; H2048]',\n        Hash: 'H256',\n        Header: {\n            parentHash: 'Hash',\n            number: 'Compact<BlockNumber>',\n            stateRoot: 'Hash',\n            extrinsicsRoot: 'Hash',\n            digest: 'Digest'\n        },\n        HeaderPartial: {\n            parentHash: 'Hash',\n            // since we only parse JSON with this, having non-compact works\n            number: 'BlockNumber'\n        },\n        IndicesLookupSource: 'GenericLookupSource',\n        Index: 'u32',\n        Justification: '(ConsensusEngineId, EncodedJustification)',\n        EncodedJustification: 'Bytes',\n        Justifications: 'Vec<Justification>',\n        KeyValue: '(StorageKey, StorageData)',\n        KeyTypeId: 'u32',\n        LockIdentifier: '[u8; 8]',\n        LookupSource: 'MultiAddress',\n        LookupTarget: 'AccountId',\n        ModuleId: 'LockIdentifier',\n        MultiAddress: 'GenericMultiAddress',\n        MultiSigner: {\n            _enum: {\n                Ed25519: '[u8; 32]',\n                Sr25519: '[u8; 32]',\n                Ecdsa: '[u8; 33]'\n            }\n        },\n        Moment: 'UInt<64, Moment>',\n        OpaqueCall: 'Bytes',\n        Origin: 'DoNotConstruct<Origin>',\n        OriginCaller: {\n            _enum: {\n                // this should be dynamically built from the actual modules, based on index\n                System: 'SystemOrigin'\n            }\n        },\n        PalletId: 'LockIdentifier',\n        PalletsOrigin: 'OriginCaller',\n        PalletVersion: {\n            major: 'u16',\n            minor: 'u8',\n            patch: 'u8'\n        },\n        Pays: {\n            _enum: ['Yes', 'No']\n        },\n        Phantom: 'Null',\n        PhantomData: 'Null',\n        Releases: {\n            _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']\n        },\n        RuntimeCall: 'Call',\n        RuntimeEvent: 'Event',\n        RuntimeDbWeight: {\n            read: 'Weight',\n            write: 'Weight'\n        },\n        SignedBlock: 'SignedBlockWithJustifications',\n        SignedBlockWithJustification: {\n            block: 'Block',\n            justification: 'Option<EncodedJustification>'\n        },\n        SignedBlockWithJustifications: {\n            block: 'Block',\n            justifications: 'Option<Justifications>'\n        },\n        Slot: 'u64',\n        SlotDuration: 'u64',\n        StorageData: 'Bytes',\n        StorageInfo: {\n            palletName: 'Bytes',\n            storage_name: 'Bytes',\n            prefix: 'Bytes',\n            maxValues: 'Option<u32>',\n            maxSize: 'Option<u32>'\n        },\n        StorageProof: {\n            trieNodes: 'Vec<Bytes>'\n        },\n        TransactionPriority: 'u64',\n        TransactionLongevity: 'u64',\n        TransactionTag: 'Bytes',\n        TransactionInfo: {\n            _alias: {\n                dataSize: 'size'\n            },\n            chunkRoot: 'H256',\n            contentHash: 'H256',\n            dataSize: 'u32',\n            blockChunks: 'u32'\n        },\n        TransactionStorageProof: {\n            chunk: 'Vec<u8>',\n            proof: 'Vec<Vec<u8>>'\n        },\n        ValidatorId: 'AccountId',\n        ValidatorIdOf: 'ValidatorId',\n        WeightV0: 'u32',\n        WeightV1: 'u64',\n        WeightV2: {\n            refTime: 'Compact<u64>',\n            proofSize: 'Compact<u64>'\n        },\n        Weight: 'WeightV2',\n        WeightMultiplier: 'Fixed64',\n        // digest\n        PreRuntime: '(ConsensusEngineId, Bytes)',\n        SealV0: '(u64, Signature)',\n        Seal: '(ConsensusEngineId, Bytes)',\n        Consensus: '(ConsensusEngineId, Bytes)'\n    }\n};\n", "const CORE_V1_TO_V4 = {\n    execute_block: {\n        description: 'Execute the given block.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            }\n        ],\n        type: 'Null'\n    }\n};\nconst CORE_V1_TO_V2 = {\n    version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersionPre3'\n    }\n};\nconst CORE_V2_TO_V4 = {\n    initialize_block: {\n        description: 'Initialize a block with the given header.',\n        params: [\n            {\n                name: 'header',\n                type: 'Header'\n            }\n        ],\n        type: 'Null'\n    }\n};\nexport const runtime = {\n    Core: [\n        {\n            methods: {\n                version: {\n                    description: 'Returns the version of the runtime.',\n                    params: [],\n                    type: 'RuntimeVersion'\n                },\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 4\n        },\n        {\n            methods: {\n                version: {\n                    description: 'Returns the version of the runtime.',\n                    params: [],\n                    type: 'RuntimeVersionPre4'\n                },\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...CORE_V1_TO_V2,\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 2\n        },\n        {\n            methods: {\n                initialise_block: {\n                    description: 'Initialize a block with the given header.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'Null'\n                },\n                ...CORE_V1_TO_V2,\n                ...CORE_V1_TO_V4\n            },\n            version: 1\n        }\n    ]\n};\n", "import { v0 } from './v0.js';\nimport { v1 } from './v1.js';\n/* eslint-disable sort-keys */\nexport default {\n    rpc: {},\n    types: {\n        ...v0,\n        ...v1,\n        // latest mappings\n        SiField: 'Si1Field',\n        SiLookupTypeId: 'Si1LookupTypeId',\n        SiPath: 'Si1Path',\n        SiType: 'Si1Type',\n        SiTypeDef: 'Si1TypeDef',\n        SiTypeDefArray: 'Si1TypeDefArray',\n        SiTypeDefBitSequence: 'Si1TypeDefBitSequence',\n        SiTypeDefCompact: 'Si1TypeDefCompact',\n        SiTypeDefComposite: 'Si1TypeDefComposite',\n        SiTypeDefPrimitive: 'Si1TypeDefPrimitive',\n        SiTypeDefSequence: 'Si1TypeDefSequence',\n        SiTypeDefTuple: 'Si1TypeDefTuple',\n        SiTypeParameter: 'Si1TypeParameter',\n        SiTypeDefVariant: 'Si1TypeDefVariant',\n        SiVariant: 'Si1Variant'\n    }\n};\n", "/* eslint-disable sort-keys */\nexport const v0 = {\n    Si0Field: {\n        name: 'Option<Text>',\n        type: 'Si0LookupTypeId',\n        typeName: 'Option<Text>',\n        docs: 'Vec<Text>'\n    },\n    Si0LookupTypeId: 'u32',\n    Si0Path: 'Vec<Text>',\n    Si0Type: {\n        path: 'Si0Path',\n        params: 'Vec<Si0LookupTypeId>',\n        def: 'Si0TypeDef'\n    },\n    Si0TypeDef: {\n        _enum: {\n            Composite: 'Si0TypeDefComposite',\n            Variant: 'Si0TypeDefVariant',\n            Sequence: 'Si0TypeDefSequence',\n            Array: 'Si0TypeDefArray',\n            Tuple: 'Si0TypeDefTuple',\n            Primitive: 'Si0TypeDefPrimitive',\n            Compact: 'Si0TypeDefCompact',\n            Phantom: 'Si0TypeDefPhantom',\n            BitSequence: 'Si0TypeDefBitSequence'\n        }\n    },\n    Si0TypeDefArray: {\n        len: 'u32',\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefBitSequence: {\n        bitStoreType: 'Si0LookupTypeId',\n        bitOrderType: 'Si0LookupTypeId'\n    },\n    Si0TypeDefCompact: {\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefComposite: {\n        fields: 'Vec<Si0Field>'\n    },\n    Si0TypeDefPhantom: 'Null',\n    Si0TypeDefVariant: {\n        variants: 'Vec<Si0Variant>'\n    },\n    Si0TypeDefPrimitive: {\n        _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']\n    },\n    Si0TypeDefSequence: {\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',\n    Si0TypeParameter: {\n        name: 'Text',\n        type: 'Option<Si0LookupTypeId>'\n    },\n    Si0Variant: {\n        name: 'Text',\n        fields: 'Vec<Si0Field>',\n        index: 'Option<u8>',\n        discriminant: 'Option<u64>',\n        docs: 'Vec<Text>'\n    }\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        AssetApprovalKey: {\n            owner: 'AccountId',\n            delegate: 'AccountId'\n        },\n        AssetApproval: {\n            amount: 'TAssetBalance',\n            deposit: 'TAssetDepositBalance'\n        },\n        AssetBalance: {\n            balance: 'TAssetBalance',\n            isFrozen: 'bool',\n            isSufficient: 'bool'\n        },\n        AssetDestroyWitness: {\n            accounts: 'Compact<u32>',\n            sufficients: 'Compact<u32>',\n            approvals: 'Compact<u32>'\n        },\n        AssetDetails: {\n            owner: 'AccountId',\n            issuer: 'AccountId',\n            admin: 'AccountId',\n            freezer: 'AccountId',\n            supply: 'TAssetBalance',\n            deposit: 'TAssetDepositBalance',\n            minBalance: 'TAssetBalance',\n            isSufficient: 'bool',\n            accounts: 'u32',\n            sufficients: 'u32',\n            approvals: 'u32',\n            isFrozen: 'bool'\n        },\n        AssetMetadata: {\n            deposit: 'TAssetDepositBalance',\n            name: 'Vec<u8>',\n            symbol: 'Vec<u8>',\n            decimals: 'u8',\n            isFrozen: 'bool'\n        },\n        TAssetBalance: 'u64',\n        TAssetDepositBalance: 'BalanceOf'\n    }\n};\n", "export const runtime = {\n    AssetsApi: [\n        {\n            methods: {\n                account_balances: {\n                    description: 'Return the current set of authorities.',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Vec<(u32, TAssetBalance)>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        RawAuraPreDigest: {\n            slotNumber: 'u64'\n        }\n    }\n};\n", "export const runtime = {\n    AuraApi: [\n        {\n            methods: {\n                authorities: {\n                    description: 'Return the current set of authorities.',\n                    params: [],\n                    type: 'Vec<AuthorityId>'\n                },\n                slot_duration: {\n                    description: 'Returns the slot duration for Aura.',\n                    params: [],\n                    type: 'SlotDuration'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        UncleEntryItem: {\n            _enum: {\n                InclusionHeight: 'BlockNumber',\n                Uncle: '(Hash, Option<AccountId>)'\n            }\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AllowedSlots: {\n            _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n        },\n        BabeAuthorityWeight: 'u64',\n        BabeEpochConfiguration: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeBlockWeight: 'u32',\n        BabeEquivocationProof: {\n            offender: 'AuthorityId',\n            slotNumber: 'SlotNumber',\n            firstHeader: 'Header',\n            secondHeader: 'Header'\n        },\n        BabeGenesisConfiguration: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeGenesisConfigurationV1: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            secondarySlots: 'bool'\n        },\n        BabeWeight: 'u64',\n        MaybeRandomness: 'Option<Randomness>',\n        MaybeVrf: 'Option<VrfData>',\n        Epoch: {\n            epochIndex: 'u64',\n            startSlot: 'Slot',\n            duration: 'u64',\n            authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Hash',\n            config: 'BabeEpochConfiguration'\n        },\n        EpochAuthorship: {\n            primary: 'Vec<u64>',\n            secondary: 'Vec<u64>',\n            secondary_vrf: 'Vec<u64>'\n        },\n        NextConfigDescriptor: {\n            _enum: {\n                V0: 'Null',\n                V1: 'NextConfigDescriptorV1'\n            }\n        },\n        NextConfigDescriptorV1: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        OpaqueKeyOwnershipProof: 'Bytes',\n        Randomness: 'Hash',\n        RawBabePreDigest: {\n            _enum: {\n                Phantom: 'Null',\n                Primary: 'RawBabePreDigestPrimary',\n                SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n                SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n            }\n        },\n        RawBabePreDigestPrimary: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryPlain: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber'\n        },\n        RawBabePreDigestSecondaryVRF: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestTo159: {\n            _enum: {\n                Primary: 'RawBabePreDigestPrimaryTo159',\n                Secondary: 'RawBabePreDigestSecondaryTo159'\n            }\n        },\n        RawBabePreDigestPrimaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight'\n        },\n        // a cross old/new compatible version of the digest, that is _only_ useful\n        // for partial parsing and extraction of the author. This assumes that all\n        // entries has the authorityIndex in the first position - and that it is all\n        // we are interested in\n        RawBabePreDigestCompat: {\n            _enum: {\n                Zero: 'u32',\n                One: 'u32',\n                Two: 'u32',\n                Three: 'u32'\n            }\n        },\n        SlotNumber: 'u64',\n        VrfData: '[u8; 32]',\n        VrfOutput: '[u8; 32]',\n        VrfProof: '[u8; 64]'\n    }\n};\n", "export const rpc = {\n    epochAuthorship: {\n        description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',\n        isUnsafe: true,\n        params: [],\n        type: 'HashMap<AuthorityId, EpochAuthorship>'\n    }\n};\n", "const V1_V2_SHARED = {\n    current_epoch: {\n        description: 'Returns information regarding the current epoch.',\n        params: [],\n        type: 'Epoch'\n    },\n    current_epoch_start: {\n        description: 'Returns the slot that started the current epoch.',\n        params: [],\n        type: 'Slot'\n    },\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the current epoch.',\n        params: [\n            {\n                name: 'slot',\n                type: 'Slot'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    next_epoch: {\n        description: 'Returns information regarding the next epoch (which was already previously announced).',\n        params: [],\n        type: 'Epoch'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'BabeEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    }\n};\nexport const runtime = {\n    BabeApi: [\n        {\n            methods: {\n                configuration: {\n                    description: 'Return the genesis configuration for BABE. The configuration is only read on genesis.',\n                    params: [],\n                    type: 'BabeGenesisConfiguration'\n                },\n                ...V1_V2_SHARED\n            },\n            version: 2\n        },\n        {\n            methods: {\n                configuration: {\n                    description: 'Return the configuration for BABE. Version 1.',\n                    params: [],\n                    type: 'BabeGenesisConfigurationV1'\n                },\n                ...V1_V2_SHARED\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        AccountData: {\n            free: 'Balance',\n            reserved: 'Balance',\n            miscFrozen: 'Balance',\n            feeFrozen: 'Balance'\n        },\n        BalanceLockTo212: {\n            id: 'LockIdentifier',\n            amount: 'Balance',\n            until: 'BlockNumber',\n            reasons: 'WithdrawReasons'\n        },\n        BalanceLock: {\n            id: 'LockIdentifier',\n            amount: 'Balance',\n            reasons: 'Reasons'\n        },\n        BalanceStatus: {\n            _enum: ['Free', 'Reserved']\n        },\n        Reasons: {\n            _enum: ['Fee', 'Misc', 'All']\n        },\n        ReserveData: {\n            id: 'ReserveIdentifier',\n            amount: 'Balance'\n        },\n        ReserveIdentifier: '[u8; 8]',\n        VestingSchedule: {\n            offset: 'Balance',\n            perBlock: 'Balance',\n            startingBlock: 'BlockNumber'\n        },\n        WithdrawReasons: {\n            _set: {\n                TransactionPayment: 1,\n                Transfer: 2,\n                Reserve: 4,\n                Fee: 8,\n                Tip: 16\n            }\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        BeefyAuthoritySet: {\n            id: 'u64',\n            len: 'u32',\n            root: 'H256'\n        },\n        BeefyCommitment: {\n            payload: 'BeefyPayload',\n            blockNumber: 'BlockNumber',\n            validatorSetId: 'ValidatorSetId'\n        },\n        BeefyId: '[u8; 33]',\n        BeefyEquivocationProof: {\n            first: 'BeefyVoteMessage',\n            second: 'BeefyVoteMessage'\n        },\n        BeefySignedCommitment: {\n            commitment: 'BeefyCommitment',\n            signatures: 'Vec<Option<EcdsaSignature>>'\n        },\n        BeefyNextAuthoritySet: {\n            id: 'u64',\n            len: 'u32',\n            root: 'H256'\n        },\n        BeefyPayload: 'Vec<(BeefyPayloadId, Bytes)>',\n        BeefyPayloadId: '[u8;2]',\n        BeefyVoteMessage: {\n            commitment: 'BeefyCommitment',\n            id: 'AuthorityId',\n            signature: 'Signature'\n        },\n        MmrRootHash: 'H256',\n        ValidatorSetId: 'u64',\n        ValidatorSet: {\n            validators: 'Vec<AuthorityId>',\n            id: 'ValidatorSetId'\n        }\n    }\n};\n", "export const rpc = {\n    getFinalizedHead: {\n        description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',\n        params: [],\n        type: 'H256'\n    },\n    subscribeJustifications: {\n        description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',\n        params: [],\n        pubsub: [\n            'justifications',\n            'subscribeJustifications',\n            'unsubscribeJustifications'\n        ],\n        type: 'BeefySignedCommitment'\n    }\n};\n", "const BEEFY_V1_V2 = {\n    beefy_genesis: {\n        description: 'Return the block number where BEEFY consensus is enabled/started',\n        params: [],\n        type: 'Option<BlockNumber>'\n    },\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'ValidatorSetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'BeefyEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    },\n    validator_set: {\n        description: 'Return the current active BEEFY validator set',\n        params: [],\n        type: 'Option<ValidatorSet>'\n    }\n};\nconst BEEFY_MMR_V1 = {\n    authority_set_proof: {\n        description: 'Return the currently active BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyAuthoritySet'\n    },\n    next_authority_set_proof: {\n        description: 'Return the next/queued BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyNextAuthoritySet'\n    }\n};\nexport const runtime = {\n    BeefyApi: [\n        {\n            methods: BEEFY_V1_V2,\n            version: 2\n        },\n        {\n            methods: BEEFY_V1_V2,\n            version: 1\n        }\n    ],\n    BeefyMmrApi: [\n        {\n            methods: BEEFY_MMR_V1,\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        BenchmarkBatch: {\n            pallet: 'Text',\n            instance: 'Text',\n            benchmark: 'Text',\n            results: 'Vec<BenchmarkResult>'\n        },\n        BenchmarkConfig: {\n            pallet: 'Bytes',\n            benchmark: 'Bytes',\n            selectedComponents: 'Vec<(BenchmarkParameter, u32)>',\n            verify: 'bool',\n            internalRepeats: 'u32'\n        },\n        BenchmarkList: {\n            pallet: 'Bytes',\n            instance: 'Bytes',\n            benchmarks: 'Vec<BenchmarkMetadata>'\n        },\n        BenchmarkMetadata: {\n            name: 'Bytes',\n            components: 'Vec<(BenchmarkParameter, u32, u32)>'\n        },\n        BenchmarkParameter: {\n            _enum: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n        },\n        BenchmarkResult: {\n            components: 'Vec<(BenchmarkParameter, u32)>',\n            extrinsicTime: 'u128',\n            storageRootTime: 'u128',\n            reads: 'u32',\n            repeatReads: 'u32',\n            writes: 'u32',\n            repeatWrites: 'u32',\n            proofSize: 'u32',\n            benchKeys: 'Vec<(Vec<u8>, u32, u32, bool)>'\n        }\n    }\n};\n", "export const runtime = {\n    Benchmark: [\n        {\n            methods: {\n                benchmark_metadata: {\n                    description: 'Get the benchmark metadata available for this runtime.',\n                    params: [\n                        {\n                            name: 'extra',\n                            type: 'bool'\n                        }\n                    ],\n                    type: '(Vec<BenchmarkList>, Vec<StorageInfo>)'\n                },\n                dispatch_benchmark: {\n                    description: 'Dispatch the given benchmark.',\n                    params: [\n                        {\n                            name: 'config',\n                            type: 'BenchmarkConfig'\n                        }\n                    ],\n                    type: 'Result<Vec<BenchmarkBatch>, Text>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        CheckInherentsResult: {\n            okay: 'bool',\n            fatalError: 'bool',\n            errors: 'InherentData'\n        },\n        InherentData: {\n            data: 'BTreeMap<InherentIdentifier, Bytes>'\n        },\n        InherentIdentifier: '[u8; 8]'\n    }\n};\n", "const BB_V2_TO_V4 = {\n    // this was removed after V4\n    random_seed: {\n        description: 'Generate a random seed.',\n        params: [],\n        type: 'Hash'\n    }\n};\nconst BB_V2_TO_V5 = {\n    apply_extrinsic: {\n        description: 'Apply the given extrinsic.',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        type: 'ApplyExtrinsicResultPre6'\n    }\n};\nconst BB_V2_TO_V6 = {\n    check_inherents: {\n        description: 'Check that the inherents are valid.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            },\n            {\n                name: 'data',\n                type: 'InherentData'\n            }\n        ],\n        type: 'CheckInherentsResult'\n    },\n    inherent_extrinsics: {\n        description: 'Generate inherent extrinsics.',\n        params: [\n            {\n                name: 'inherent',\n                type: 'InherentData'\n            }\n        ],\n        type: 'Vec<Extrinsic>'\n    }\n};\nconst BB_V3_TO_V6 = {\n    // renamed in v3 from finalize_block\n    finalize_block: {\n        description: 'Finish the current block.',\n        params: [],\n        type: 'Header'\n    }\n};\nexport const runtime = {\n    BlockBuilder: [\n        {\n            methods: {\n                apply_extrinsic: {\n                    description: 'Apply the given extrinsic.',\n                    params: [\n                        {\n                            name: 'extrinsic',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'ApplyExtrinsicResult'\n                },\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 6\n        },\n        {\n            methods: {\n                // apply_extrinsic result changed in 6\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 5\n        },\n        {\n            methods: {\n                // random_seed removed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 4\n        },\n        {\n            methods: {\n                // finalize_block renamed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 3\n        },\n        {\n            methods: {\n                finalise_block: {\n                    description: 'Finish the current block.',\n                    params: [],\n                    type: 'Header'\n                },\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6\n            },\n            version: 2\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        CollectiveOrigin: {\n            _enum: {\n                Members: '(MemberCount, MemberCount)',\n                Member: 'AccountId'\n            }\n        },\n        MemberCount: 'u32',\n        ProposalIndex: 'u32',\n        VotesTo230: {\n            index: 'ProposalIndex',\n            threshold: 'MemberCount',\n            ayes: 'Vec<AccountId>',\n            nays: 'Vec<AccountId>'\n        },\n        Votes: {\n            index: 'ProposalIndex',\n            threshold: 'MemberCount',\n            ayes: 'Vec<AccountId>',\n            nays: 'Vec<AccountId>',\n            end: 'BlockNumber'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        AuthorityId: 'AccountId',\n        RawVRFOutput: '[u8; 32]'\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AliveContractInfo: {\n            trieId: 'TrieId',\n            storageSize: 'u32',\n            pairCount: 'u32',\n            codeHash: 'CodeHash',\n            rentAllowance: 'Balance',\n            rentPaid: 'Balance',\n            deductBlock: 'BlockNumber',\n            lastWrite: 'Option<BlockNumber>',\n            _reserved: 'Option<Null>'\n        },\n        CodeHash: 'Hash',\n        CodeSource: {\n            _enum: {\n                Upload: 'Bytes',\n                Existing: 'Hash'\n            }\n        },\n        CodeUploadRequest: {\n            origin: 'AccountId',\n            code: 'Bytes',\n            storageDepositLimit: 'Option<Balance>'\n        },\n        CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',\n        CodeUploadResultValue: {\n            codeHash: 'CodeHash',\n            deposit: 'Balance'\n        },\n        ContractCallRequest: {\n            origin: 'AccountId',\n            dest: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'u64',\n            storageDepositLimit: 'Option<Balance>',\n            inputData: 'Bytes'\n        },\n        ContractExecResultSuccessTo255: {\n            status: 'u8',\n            data: 'Raw'\n        },\n        ContractExecResultTo255: {\n            _enum: {\n                Success: 'ContractExecResultSuccessTo255',\n                Error: 'Null'\n            }\n        },\n        ContractExecResultSuccessTo260: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes',\n            gasConsumed: 'u64'\n        },\n        ContractExecResultTo260: {\n            _enum: {\n                Success: 'ContractExecResultSuccessTo260',\n                Error: 'Null'\n            }\n        },\n        ContractExecResultOk: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes'\n        },\n        ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',\n        ContractExecResultTo267: {\n            gasConsumed: 'u64',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractExecResult: {\n            gasConsumed: 'Weight',\n            gasRequired: 'Weight',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractExecResultU64: {\n            gasConsumed: 'u64',\n            gasRequired: 'u64',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractInfo: {\n            _enum: {\n                Alive: 'AliveContractInfo',\n                Tombstone: 'TombstoneContractInfo'\n            }\n        },\n        ContractCallFlags: {\n            _set: {\n                _bitLength: 32,\n                ForwardInput: 1,\n                CloneInput: 2,\n                TailCall: 4,\n                AllowReentry: 8\n            }\n        },\n        ContractReturnFlags: {\n            _set: {\n                _bitLength: 32,\n                Revert: 1\n            }\n        },\n        ContractStorageKey: '[u8; 32]',\n        DeletedContract: {\n            pairCount: 'u32',\n            trieId: 'TrieId'\n        },\n        ExecReturnValue: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes'\n        },\n        Gas: 'u64',\n        HostFnWeightsTo264: {\n            caller: 'Weight',\n            address: 'Weight',\n            gasLeft: 'Weight',\n            balance: 'Weight',\n            valueTransferred: 'Weight',\n            minimumBalance: 'Weight',\n            tombstoneDeposit: 'Weight',\n            rentAllowance: 'Weight',\n            blockNumber: 'Weight',\n            now: 'Weight',\n            weightToFee: 'Weight',\n            gas: 'Weight',\n            input: 'Weight',\n            inputPerByte: 'Weight',\n            return: 'Weight',\n            returnPerByte: 'Weight',\n            terminate: 'Weight',\n            restoreTo: 'Weight',\n            restoreToPerDelta: 'Weight',\n            random: 'Weight',\n            depositEvent: 'Weight',\n            depositEventPerTopic: 'Weight',\n            depositEventPerByte: 'Weight',\n            setRentAllowance: 'Weight',\n            setStorage: 'Weight',\n            setStoragePerByte: 'Weight',\n            clearStorage: 'Weight',\n            getStorage: 'Weight',\n            getStoragePerByte: 'Weight',\n            transfer: 'Weight',\n            call: 'Weight',\n            callTransferSurcharge: 'Weight',\n            callPerInputByte: 'Weight',\n            callPerOutputByte: 'Weight',\n            instantiate: 'Weight',\n            instantiatePerInputByte: 'Weight',\n            instantiatePerOutputByte: 'Weight',\n            hashSha2256: 'Weight',\n            hashSha2256PerByte: 'Weight',\n            hashKeccak256: 'Weight',\n            hashKeccak256PerByte: 'Weight',\n            hashBlake2256: 'Weight',\n            hashBlake2256PerByte: 'Weight',\n            hashBlake2128: 'Weight',\n            hashBlake2128PerByte: 'Weight'\n        },\n        HostFnWeights: {\n            caller: 'Weight',\n            address: 'Weight',\n            gasLeft: 'Weight',\n            balance: 'Weight',\n            valueTransferred: 'Weight',\n            minimumBalance: 'Weight',\n            tombstoneDeposit: 'Weight',\n            rentAllowance: 'Weight',\n            blockNumber: 'Weight',\n            now: 'Weight',\n            weightToFee: 'Weight',\n            gas: 'Weight',\n            input: 'Weight',\n            inputPerByte: 'Weight',\n            return: 'Weight',\n            returnPerByte: 'Weight',\n            terminate: 'Weight',\n            terminatePerCodeByte: 'Weight',\n            restoreTo: 'Weight',\n            restoreToPerCallerCodeByte: 'Weight',\n            restoreToPerTombstoneCodeByte: 'Weight',\n            restoreToPerDelta: 'Weight',\n            random: 'Weight',\n            depositEvent: 'Weight',\n            depositEventPerTopic: 'Weight',\n            depositEventPerByte: 'Weight',\n            setRentAllowance: 'Weight',\n            setStorage: 'Weight',\n            setStoragePerByte: 'Weight',\n            clearStorage: 'Weight',\n            getStorage: 'Weight',\n            getStoragePerByte: 'Weight',\n            transfer: 'Weight',\n            call: 'Weight',\n            callPerCodeByte: 'Weight',\n            callTransferSurcharge: 'Weight',\n            callPerInputByte: 'Weight',\n            callPerOutputByte: 'Weight',\n            instantiate: 'Weight',\n            instantiatePerCodeByte: 'Weight',\n            instantiatePerInputByte: 'Weight',\n            instantiatePerOutputByte: 'Weight',\n            instantiatePerSaltByte: 'Weight',\n            hashSha2256: 'Weight',\n            hashSha2256PerByte: 'Weight',\n            hashKeccak256: 'Weight',\n            hashKeccak256PerByte: 'Weight',\n            hashBlake2256: 'Weight',\n            hashBlake2256PerByte: 'Weight',\n            hashBlake2128: 'Weight',\n            hashBlake2128PerByte: 'Weight',\n            rentParams: 'Weight'\n        },\n        InstantiateRequestV1: {\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            code: 'Bytes',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        InstantiateRequestV2: {\n            _fallback: 'InstantiateRequestV1',\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            storageDepositLimit: 'Option<Balance>',\n            code: 'Bytes',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        InstantiateRequest: {\n            _fallback: 'InstantiateRequestV2',\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            storageDepositLimit: 'Option<Balance>',\n            code: 'CodeSource',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',\n        ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',\n        ContractInstantiateResult: {\n            gasConsumed: 'WeightV2',\n            gasRequired: 'WeightV2',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'InstantiateReturnValue'\n        },\n        ContractInstantiateResultU64: {\n            // only this one can fail, the current version (above) _should_ be correctly\n            // versioned now, aka no more deprecated RPCs involved, only runtime calls\n            _fallback: 'ContractInstantiateResultTo299',\n            gasConsumed: 'u64',\n            gasRequired: 'u64',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'InstantiateReturnValue'\n        },\n        InstantiateReturnValueTo267: {\n            result: 'ExecReturnValue',\n            accountId: 'AccountId',\n            rentProjection: 'Option<RentProjection>'\n        },\n        InstantiateReturnValueOk: {\n            result: 'ExecReturnValue',\n            accountId: 'AccountId'\n        },\n        InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',\n        InstructionWeights: {\n            i64const: 'u32',\n            i64load: 'u32',\n            i64store: 'u32',\n            select: 'u32',\n            rIf: 'u32',\n            br: 'u32',\n            brIf: 'u32',\n            brIable: 'u32',\n            brIablePerEntry: 'u32',\n            call: 'u32',\n            callIndirect: 'u32',\n            callIndirectPerParam: 'u32',\n            localGet: 'u32',\n            localSet: 'u32',\n            local_tee: 'u32',\n            globalGet: 'u32',\n            globalSet: 'u32',\n            memoryCurrent: 'u32',\n            memoryGrow: 'u32',\n            i64clz: 'u32',\n            i64ctz: 'u32',\n            i64popcnt: 'u32',\n            i64eqz: 'u32',\n            i64extendsi32: 'u32',\n            i64extendui32: 'u32',\n            i32wrapi64: 'u32',\n            i64eq: 'u32',\n            i64ne: 'u32',\n            i64lts: 'u32',\n            i64ltu: 'u32',\n            i64gts: 'u32',\n            i64gtu: 'u32',\n            i64les: 'u32',\n            i64leu: 'u32',\n            i64ges: 'u32',\n            i64geu: 'u32',\n            i64add: 'u32',\n            i64sub: 'u32',\n            i64mul: 'u32',\n            i64divs: 'u32',\n            i64divu: 'u32',\n            i64rems: 'u32',\n            i64remu: 'u32',\n            i64and: 'u32',\n            i64or: 'u32',\n            i64xor: 'u32',\n            i64shl: 'u32',\n            i64shrs: 'u32',\n            i64shru: 'u32',\n            i64rotl: 'u32',\n            i64rotr: 'u32'\n        },\n        LimitsTo264: {\n            eventTopics: 'u32',\n            stackHeight: 'u32',\n            globals: 'u32',\n            parameters: 'u32',\n            memoryPages: 'u32',\n            tableSize: 'u32',\n            brTableSize: 'u32',\n            subjectLen: 'u32',\n            codeSize: 'u32'\n        },\n        Limits: {\n            eventTopics: 'u32',\n            stackHeight: 'u32',\n            globals: 'u32',\n            parameters: 'u32',\n            memoryPages: 'u32',\n            tableSize: 'u32',\n            brTableSize: 'u32',\n            subjectLen: 'u32'\n        },\n        PrefabWasmModule: {\n            scheduleVersion: 'Compact<u32>',\n            initial: 'Compact<u32>',\n            maximum: 'Compact<u32>',\n            refcount: 'Compact<u64>',\n            _reserved: 'Option<Null>',\n            code: 'Bytes',\n            originalCodeLen: 'u32'\n        },\n        RentProjection: {\n            _enum: {\n                EvictionAt: 'BlockNumber',\n                NoEviction: 'Null'\n            }\n        },\n        ScheduleTo212: {\n            version: 'u32',\n            putCodePerByteCost: 'Gas',\n            growMemCost: 'Gas',\n            regularOpCost: 'Gas',\n            returnDataPerByteCost: 'Gas',\n            eventDataPerByteCost: 'Gas',\n            eventPerTopicCost: 'Gas',\n            eventBaseCost: 'Gas',\n            sandboxDataReadCost: 'Gas',\n            sandboxDataWriteCost: 'Gas',\n            maxEventTopics: 'u32',\n            maxStackHeight: 'u32',\n            maxMemoryPages: 'u32',\n            enablePrintln: 'bool',\n            maxSubjectLen: 'u32'\n        },\n        ScheduleTo258: {\n            version: 'u32',\n            putCodePerByteCost: 'Gas',\n            growMemCost: 'Gas',\n            regularOpCost: 'Gas',\n            returnDataPerByteCost: 'Gas',\n            eventDataPerByteCost: 'Gas',\n            eventPerTopicCost: 'Gas',\n            eventBaseCost: 'Gas',\n            sandboxDataReadCost: 'Gas',\n            sandboxDataWriteCost: 'Gas',\n            transferCost: 'Gas',\n            maxEventTopics: 'u32',\n            maxStackHeight: 'u32',\n            maxMemoryPages: 'u32',\n            enablePrintln: 'bool',\n            maxSubjectLen: 'u32'\n        },\n        ScheduleTo264: {\n            version: 'u32',\n            enablePrintln: 'bool',\n            limits: 'LimitsTo264',\n            instructionWeights: 'InstructionWeights',\n            hostFnWeights: 'HostFnWeightsTo264'\n        },\n        Schedule: {\n            version: 'u32',\n            enablePrintln: 'bool',\n            limits: 'Limits',\n            instructionWeights: 'InstructionWeights',\n            hostFnWeights: 'HostFnWeights'\n        },\n        SeedOf: 'Hash',\n        StorageDeposit: {\n            _enum: {\n                Refund: 'Balance',\n                Charge: 'Balance'\n            }\n        },\n        TombstoneContractInfo: 'Hash',\n        TrieId: 'Bytes'\n    }\n};\n", "export const rpc = {\n    call: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',\n        description: 'Executes a call to a contract',\n        params: [\n            {\n                name: 'callRequest',\n                type: 'ContractCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractExecResult'\n    },\n    getStorage: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',\n        description: 'Returns the value under a specified storage key in a contract',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'H256'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    instantiate: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',\n        description: 'Instantiate a new contract',\n        params: [\n            {\n                name: 'request',\n                type: 'InstantiateRequestV1'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractInstantiateResult'\n    },\n    rentProjection: {\n        deprecated: 'Not available in newer versions of the contracts interfaces',\n        description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<BlockNumber>'\n    },\n    uploadCode: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',\n        description: 'Upload new code without instantiating a contract from it',\n        // The RPC here is terribly misnamed - somebody forgot how the RPCs\n        // are actually done, ie. <module>_<camelCasedMethod>\n        endpoint: 'contracts_upload_code',\n        params: [\n            {\n                name: 'uploadRequest',\n                type: 'CodeUploadRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\n", "const SHARED_V1_V2 = {\n    get_storage: {\n        description: 'Query a given storage key in a given contract.',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    upload_code: {\n        description: 'Upload new code without instantiating a contract from it.',\n        params: [\n            {\n                name: 'origin',\n                type: 'AccountId'\n            },\n            {\n                name: 'code',\n                type: 'Bytes'\n            },\n            {\n                name: 'storageDepositLimit',\n                type: 'Option<Balance>'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\nexport const runtime = {\n    ContractsApi: [\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResult'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResult'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 2\n        },\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResultU64'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResultU64'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 1\n        }\n    ]\n};\n", "export const AllConvictions = [\n    // 0.1x votes, unlocked.\n    'None',\n    // 1x votes, locked for an enactment period following a successful vote.\n    'Locked1x',\n    // 2x votes, locked for 2x enactment periods following a successful vote.\n    'Locked2x',\n    // 3x votes, locked for 4x...\n    'Locked3x',\n    // 4x votes, locked for 8x...\n    'Locked4x',\n    // 5x votes, locked for 16x...\n    'Locked5x',\n    // 6x votes, locked for 32x...\n    'Locked6x'\n];\nexport default {\n    rpc: {},\n    types: {\n        AccountVote: {\n            _enum: {\n                Standard: 'AccountVoteStandard',\n                Split: 'AccountVoteSplit'\n            }\n        },\n        AccountVoteSplit: {\n            aye: 'Balance',\n            nay: 'Balance'\n        },\n        AccountVoteStandard: {\n            vote: 'Vote',\n            balance: 'Balance'\n        },\n        Conviction: {\n            _enum: AllConvictions\n        },\n        Delegations: {\n            votes: 'Balance',\n            capital: 'Balance'\n        },\n        PreimageStatus: {\n            _enum: {\n                Missing: 'BlockNumber',\n                Available: 'PreimageStatusAvailable'\n            }\n        },\n        PreimageStatusAvailable: {\n            data: 'Bytes',\n            provider: 'AccountId',\n            deposit: 'Balance',\n            since: 'BlockNumber',\n            expiry: 'Option<BlockNumber>'\n        },\n        PriorLock: '(BlockNumber, Balance)',\n        PropIndex: 'u32',\n        Proposal: 'Call',\n        ProxyState: {\n            _enum: {\n                Open: 'AccountId',\n                Active: 'AccountId'\n            }\n        },\n        ReferendumIndex: 'u32',\n        ReferendumInfoTo239: {\n            end: 'BlockNumber',\n            proposalHash: 'Hash',\n            threshold: 'VoteThreshold',\n            delay: 'BlockNumber'\n        },\n        ReferendumInfo: {\n            _enum: {\n                Ongoing: 'ReferendumStatus',\n                Finished: 'ReferendumInfoFinished'\n            }\n        },\n        ReferendumInfoFinished: {\n            approved: 'bool',\n            end: 'BlockNumber'\n        },\n        ReferendumStatus: {\n            end: 'BlockNumber',\n            proposalHash: 'Hash',\n            threshold: 'VoteThreshold',\n            delay: 'BlockNumber',\n            tally: 'Tally'\n        },\n        Tally: {\n            ayes: 'Balance',\n            nays: 'Balance',\n            turnout: 'Balance'\n        },\n        Voting: {\n            _enum: {\n                Direct: 'VotingDirect',\n                Delegating: 'VotingDelegating'\n            }\n        },\n        VotingDirect: {\n            votes: 'Vec<VotingDirectVote>',\n            delegations: 'Delegations',\n            prior: 'PriorLock'\n        },\n        VotingDirectVote: '(ReferendumIndex, AccountVote)',\n        VotingDelegating: {\n            balance: 'Balance',\n            target: 'AccountId',\n            conviction: 'Conviction',\n            delegations: 'Delegations',\n            prior: 'PriorLock'\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        BlockStats: {\n            witnessLen: 'u64',\n            witnessCompactLen: 'u64',\n            blockLen: 'u64',\n            blockNumExtrinsics: 'u64'\n        }\n    }\n};\n", "export const rpc = {\n    getBlockStats: {\n        description: 'Reexecute the specified `block_hash` and gather statistics while doing so',\n        isUnsafe: true,\n        params: [\n            {\n                isHistoric: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<BlockStats>'\n    }\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "export const runtime = {\n    AuthorityDiscoveryApi: [\n        {\n            methods: {\n                authorities: {\n                    description: 'Retrieve authority identifiers of the current and next authority set.',\n                    params: [],\n                    type: 'Vec<AuthorityId>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        ApprovalFlag: 'u32',\n        DefunctVoter: {\n            who: 'AccountId',\n            voteCount: 'Compact<u32>',\n            candidateCount: 'Compact<u32>'\n        },\n        Renouncing: {\n            _enum: {\n                Member: 'Null',\n                RunnerUp: 'Null',\n                Candidate: 'Compact<u32>'\n            }\n        },\n        SetIndex: 'u32',\n        Vote: 'GenericVote',\n        VoteIndex: 'u32',\n        VoterInfo: {\n            lastActive: 'VoteIndex',\n            lastWin: 'VoteIndex',\n            pot: 'Balance',\n            stake: 'Balance'\n        },\n        VoteThreshold: {\n            _enum: [\n                'Super Majority Approve',\n                'Super Majority Against',\n                'Simple Majority'\n            ]\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        CreatedBlock: {\n            _alias: {\n                blockHash: 'hash'\n            },\n            blockHash: 'BlockHash',\n            aux: 'ImportedAux'\n        },\n        ImportedAux: {\n            headerOnly: 'bool',\n            clearJustificationRequests: 'bool',\n            needsJustification: 'bool',\n            badJustification: 'bool',\n            needsFinalityProof: 'bool',\n            isNewBest: 'bool'\n        }\n    }\n};\n", "export const rpc = {\n    createBlock: {\n        description: 'Instructs the manual-seal authorship task to create a new block',\n        params: [\n            {\n                name: 'createEmpty',\n                type: 'bool'\n            },\n            {\n                name: 'finalize',\n                type: 'bool'\n            },\n            {\n                isOptional: true,\n                name: 'parentHash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'CreatedBlock'\n    },\n    finalizeBlock: {\n        description: 'Instructs the manual-seal authorship task to finalize a block',\n        params: [\n            {\n                name: 'hash',\n                type: 'BlockHash'\n            },\n            {\n                isOptional: true,\n                name: 'justification',\n                type: 'Justification'\n            }\n        ],\n        type: 'bool'\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        EvmAccount: {\n            nonce: 'u256',\n            balance: 'u256'\n        },\n        EvmCallInfo: {\n            exitReason: 'ExitReason',\n            value: 'Bytes',\n            usedGas: 'U256',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmCreateInfo: {\n            exitReason: 'ExitReason',\n            value: 'H160',\n            usedGas: 'U256',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmLog: {\n            address: 'H160',\n            topics: 'Vec<H256>',\n            data: 'Bytes'\n        },\n        EvmVicinity: {\n            gasPrice: 'u256',\n            origin: 'H160'\n        },\n        ExitError: {\n            _enum: {\n                StackUnderflow: 'Null',\n                StackOverflow: 'Null',\n                InvalidJump: 'Null',\n                InvalidRange: 'Null',\n                DesignatedInvalid: 'Null',\n                CallTooDeep: 'Null',\n                CreateCollision: 'Null',\n                CreateContractLimit: 'Null',\n                OutOfOffset: 'Null',\n                OutOfGas: 'Null',\n                OutOfFund: 'Null',\n                PCUnderflow: 'Null',\n                CreateEmpty: 'Null',\n                Other: 'Text'\n            }\n        },\n        ExitFatal: {\n            _enum: {\n                NotSupported: 'Null',\n                UnhandledInterrupt: 'Null',\n                CallErrorAsFatal: 'ExitError',\n                Other: 'Text'\n            }\n        },\n        ExitReason: {\n            _enum: {\n                Succeed: 'ExitSucceed',\n                Error: 'ExitError',\n                Revert: 'ExitRevert',\n                Fatal: 'ExitFatal'\n            }\n        },\n        ExitRevert: {\n            _enum: ['Reverted']\n        },\n        ExitSucceed: {\n            _enum: ['Stopped', 'Returned', 'Suicided']\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        Extrinsic: 'GenericExtrinsic',\n        ExtrinsicEra: 'GenericExtrinsicEra',\n        ExtrinsicPayload: 'GenericExtrinsicPayload',\n        ExtrinsicSignature: 'MultiSignature',\n        ExtrinsicV4: 'GenericExtrinsicV4',\n        ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',\n        ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',\n        ExtrinsicUnknown: 'GenericExtrinsicUnknown',\n        ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',\n        // eras\n        Era: 'ExtrinsicEra',\n        ImmortalEra: 'GenericImmortalEra',\n        MortalEra: 'GenericMortalEra',\n        // signatures & signer\n        AnySignature: 'H512',\n        MultiSignature: {\n            _enum: {\n                Ed25519: 'Ed25519Signature',\n                Sr25519: 'Sr25519Signature',\n                Ecdsa: 'EcdsaSignature'\n            }\n        },\n        Signature: 'H512',\n        SignerPayload: 'GenericSignerPayload',\n        EcdsaSignature: '[u8; 65]',\n        Ed25519Signature: 'H512',\n        Sr25519Signature: 'H512'\n    }\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        FungiblesAccessError: {\n            _enum: ['AssetIdConversionFailed', 'AmountToBalanceConversionFailed']\n        }\n    }\n};\n", "export const runtime = {\n    FungiblesApi: [\n        {\n            methods: {\n                query_account_balances: {\n                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        AssetOptions: {\n            initalIssuance: 'Compact<Balance>',\n            permissions: 'PermissionLatest'\n        },\n        Owner: {\n            _enum: {\n                None: 'Null',\n                Address: 'AccountId'\n            }\n        },\n        PermissionsV1: {\n            update: 'Owner',\n            mint: 'Owner',\n            burn: 'Owner'\n        },\n        PermissionVersions: {\n            _enum: {\n                V1: 'PermissionsV1'\n            }\n        },\n        PermissionLatest: 'PermissionsV1'\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        ActiveGilt: {\n            proportion: 'Perquintill',\n            amount: 'Balance',\n            who: 'AccountId',\n            expiry: 'BlockNumber'\n        },\n        ActiveGiltsTotal: {\n            frozen: 'Balance',\n            proportion: 'Perquintill',\n            index: 'ActiveIndex',\n            target: 'Perquintill'\n        },\n        ActiveIndex: 'u32',\n        GiltBid: {\n            amount: 'Balance',\n            who: 'AccountId'\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AuthorityIndex: 'u64',\n        AuthorityList: 'Vec<NextAuthority>',\n        AuthoritySet: {\n            currentAuthorities: 'AuthorityList',\n            setId: 'u64',\n            pendingStandardChanges: 'ForkTreePendingChange',\n            pendingForcedChanges: 'Vec<PendingChange>',\n            authoritySetChanges: 'AuthoritySetChanges'\n        },\n        ForkTreePendingChange: {\n            roots: 'Vec<ForkTreePendingChangeNode>',\n            bestFinalizedNumber: 'Option<BlockNumber>'\n        },\n        ForkTreePendingChangeNode: {\n            hash: 'BlockHash',\n            number: 'BlockNumber',\n            data: 'PendingChange',\n            children: 'Vec<ForkTreePendingChangeNode>'\n        },\n        AuthoritySetChange: '(U64, BlockNumber)',\n        AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n        AuthorityWeight: 'u64',\n        DelayKind: {\n            _enum: {\n                Finalized: 'Null',\n                Best: 'DelayKindBest'\n            }\n        },\n        DelayKindBest: {\n            medianLastFinalized: 'BlockNumber'\n        },\n        EncodedFinalityProofs: 'Bytes',\n        GrandpaEquivocation: {\n            _enum: {\n                Prevote: 'GrandpaEquivocationValue',\n                Precommit: 'GrandpaEquivocationValue'\n            }\n        },\n        GrandpaEquivocationProof: {\n            setId: 'SetId',\n            equivocation: 'GrandpaEquivocation'\n        },\n        GrandpaEquivocationValue: {\n            roundNumber: 'u64',\n            identity: 'AuthorityId',\n            first: '(GrandpaPrevote, AuthoritySignature)',\n            second: '(GrandpaPrevote, AuthoritySignature)'\n        },\n        GrandpaPrevote: {\n            targetHash: 'Hash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaCommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber',\n            precommits: 'Vec<GrandpaSignedPrecommit>'\n        },\n        GrandpaPrecommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaSignedPrecommit: {\n            precommit: 'GrandpaPrecommit',\n            signature: 'AuthoritySignature',\n            id: 'AuthorityId'\n        },\n        GrandpaJustification: {\n            round: 'u64',\n            commit: 'GrandpaCommit',\n            votesAncestries: 'Vec<Header>'\n        },\n        JustificationNotification: 'Bytes',\n        KeyOwnerProof: 'MembershipProof',\n        NextAuthority: '(AuthorityId, AuthorityWeight)',\n        PendingChange: {\n            nextAuthorities: 'AuthorityList',\n            delay: 'BlockNumber',\n            canonHeight: 'BlockNumber',\n            canonHash: 'BlockHash',\n            delayKind: 'DelayKind'\n        },\n        PendingPause: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        PendingResume: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        Precommits: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        Prevotes: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        ReportedRoundStates: {\n            setId: 'u32',\n            best: 'RoundState',\n            background: 'Vec<RoundState>'\n        },\n        RoundState: {\n            round: 'u32',\n            totalWeight: 'u32',\n            thresholdWeight: 'u32',\n            prevotes: 'Prevotes',\n            precommits: 'Precommits'\n        },\n        SetId: 'u64',\n        StoredPendingChange: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber',\n            nextAuthorities: 'AuthorityList'\n        },\n        StoredState: {\n            _enum: {\n                Live: 'Null',\n                PendingPause: 'PendingPause',\n                Paused: 'Null',\n                PendingResume: 'PendingResume'\n            }\n        }\n    }\n};\n", "export const rpc = {\n    proveFinality: {\n        description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',\n        params: [\n            {\n                name: 'blockNumber',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n        description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n        params: [],\n        type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n        description: 'Subscribes to grandpa justifications',\n        params: [],\n        pubsub: [\n            'justifications',\n            'subscribeJustifications',\n            'unsubscribeJustifications'\n        ],\n        type: 'JustificationNotification'\n    }\n};\n", "const GRANDPA_V2_V3 = {\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'SetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    grandpa_authorities: {\n        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',\n        params: [],\n        type: 'AuthorityList'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'GrandpaEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    }\n};\nexport const runtime = {\n    GrandpaApi: [\n        {\n            methods: {\n                current_set_id: {\n                    description: 'Get current GRANDPA authority set id.',\n                    params: [],\n                    type: 'SetId'\n                },\n                ...GRANDPA_V2_V3\n            },\n            version: 3\n        },\n        {\n            methods: GRANDPA_V2_V3,\n            version: 2\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        IdentityFields: {\n            _set: {\n                _bitLength: 64,\n                // Mapped here to 32 bits, in Rust these are 64-bit values\n                Display: 1,\n                Legal: 2,\n                Web: 4,\n                Riot: 8,\n                Email: 16,\n                PgpFingerprint: 32,\n                Image: 64,\n                Twitter: 128\n            }\n        },\n        IdentityInfoAdditional: '(Data, Data)',\n        IdentityInfoTo198: {\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data'\n        },\n        IdentityInfo: {\n            _fallback: 'IdentityInfoTo198',\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data',\n            twitter: 'Data'\n        },\n        IdentityJudgement: {\n            _enum: {\n                Unknown: 'Null',\n                FeePaid: 'Balance',\n                Reasonable: 'Null',\n                KnownGood: 'Null',\n                OutOfDate: 'Null',\n                LowQuality: 'Null',\n                Erroneous: 'Null'\n            }\n        },\n        RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n        RegistrationTo198: {\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfoTo198'\n        },\n        Registration: {\n            _fallback: 'RegistrationTo198',\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfo'\n        },\n        RegistrarIndex: 'u32',\n        RegistrarInfo: {\n            account: 'AccountId',\n            fee: 'Balance',\n            fields: 'IdentityFields'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        AuthIndex: 'u32',\n        AuthoritySignature: 'Signature',\n        Heartbeat: {\n            blockNumber: 'BlockNumber',\n            networkState: 'OpaqueNetworkState',\n            sessionIndex: 'SessionIndex',\n            authorityIndex: 'AuthIndex',\n            validatorsLen: 'u32'\n        },\n        HeartbeatTo244: {\n            blockNumber: 'BlockNumber',\n            networkState: 'OpaqueNetworkState',\n            sessionIndex: 'SessionIndex',\n            authorityIndex: 'AuthIndex'\n        },\n        OpaqueMultiaddr: 'Opaque<Bytes>',\n        OpaquePeerId: 'Opaque<Bytes>',\n        OpaqueNetworkState: {\n            peerId: 'OpaquePeerId',\n            externalAddresses: 'Vec<OpaqueMultiaddr>'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        CallIndex: '(u8, u8)',\n        LotteryConfig: {\n            price: 'Balance',\n            start: 'BlockNumber',\n            length: 'BlockNumber',\n            delay: 'BlockNumber',\n            repeat: 'bool'\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        MmrBatchProof: {\n            leafIndices: 'Vec<MmrLeafIndex>',\n            leafCount: 'MmrNodeIndex',\n            items: 'Vec<Hash>'\n        },\n        MmrEncodableOpaqueLeaf: 'Bytes',\n        MmrError: {\n            _enum: ['Push', 'GetRoot', 'Commit', 'GenerateProof', 'Verify', 'LeafNotFound', ' PalletNotIncluded', 'InvalidLeafIndex']\n        },\n        MmrHash: 'Hash',\n        MmrLeafBatchProof: {\n            blockHash: 'BlockHash',\n            leaves: 'Bytes',\n            proof: 'Bytes'\n        },\n        MmrLeafIndex: 'u64',\n        MmrLeafProof: {\n            blockHash: 'BlockHash',\n            leaf: 'Bytes',\n            proof: 'Bytes'\n        },\n        MmrNodeIndex: 'u64',\n        MmrProof: {\n            leafIndex: 'MmrLeafIndex',\n            leafCount: 'MmrNodeIndex',\n            items: 'Vec<Hash>'\n        }\n    }\n};\n", "export const rpc = {\n    generateProof: {\n        description: 'Generate MMR proof for the given block numbers.',\n        params: [\n            {\n                name: 'blockNumbers',\n                type: 'Vec<u64>'\n            },\n            {\n                isOptional: true,\n                name: 'bestKnownBlockNumber',\n                type: 'u64'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrLeafBatchProof'\n    },\n    root: {\n        description: 'Get the MMR root hash for the current best block.',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrHash'\n    },\n    verifyProof: {\n        description: 'Verify an MMR proof',\n        params: [\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    },\n    verifyProofStateless: {\n        description: 'Verify an MMR proof statelessly given an mmr_root',\n        params: [\n            {\n                name: 'root',\n                type: 'MmrHash'\n            },\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    }\n};\n", "const MMR_V2 = {\n    generate_proof: {\n        description: 'Generate MMR proof for the given block numbers.',\n        params: [\n            {\n                name: 'blockNumbers',\n                type: 'Vec<BlockNumber>'\n            },\n            {\n                name: 'bestKnownBlockNumber',\n                type: 'Option<BlockNumber>'\n            }\n        ],\n        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'\n    },\n    root: {\n        description: 'Return the on-chain MMR root hash.',\n        params: [],\n        type: 'Result<Hash, MmrError>'\n    },\n    verify_proof: {\n        description: 'Verify MMR proof against on-chain MMR.',\n        params: [\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof_stateless: {\n        description: 'Verify MMR proof against given root hash.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    }\n};\nconst MMR_V1 = {\n    generate_batch_proof: {\n        description: 'Generate MMR proof for a series of leaves under given indices.',\n        params: [\n            {\n                name: 'leafIndices',\n                type: 'Vec<MmrLeafIndex>'\n            }\n        ],\n        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'\n    },\n    generate_proof: {\n        description: 'Generate MMR proof for a leaf under given index.',\n        params: [\n            {\n                name: 'leafIndex',\n                type: 'MmrLeafIndex'\n            }\n        ],\n        type: 'Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>'\n    },\n    mmr_root: {\n        description: 'Return the on-chain MMR root hash.',\n        params: [],\n        type: 'Result<Hash, MmrError>'\n    },\n    verify_batch_proof: {\n        description: 'Verify MMR proof against on-chain MMR for a batch of leaves.',\n        params: [\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_batch_proof_stateless: {\n        description: 'Verify MMR proof against given root hash or a batch of leaves.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof: {\n        description: 'Verify MMR proof against on-chain MMR.',\n        params: [\n            {\n                name: 'leaf',\n                type: 'MmrEncodableOpaqueLeaf'\n            },\n            {\n                name: 'proof',\n                type: 'MmrProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof_stateless: {\n        description: 'Verify MMR proof against given root hash.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaf',\n                type: 'MmrEncodableOpaqueLeaf'\n            },\n            {\n                name: 'proof',\n                type: 'MmrProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    }\n};\nexport const runtime = {\n    MmrApi: [\n        {\n            methods: MMR_V2,\n            version: 2\n        },\n        {\n            methods: MMR_V1,\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        NftCollectionId: 'u32',\n        NftItemId: 'u32'\n    }\n};\n", "export const runtime = {\n    NftsApi: [\n        {\n            methods: {\n                attribute: {\n                    description: 'An attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                collection_attribute: {\n                    description: 'A collection attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                collection_owner: {\n                    description: 'A collection owner',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        }\n                    ],\n                    type: 'Option<AccountId>'\n                },\n                custom_attribute: {\n                    description: 'A custom attribute',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                owner: {\n                    description: 'Collection owner',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        }\n                    ],\n                    type: 'Option<AccountId>'\n                },\n                system_attribute: {\n                    description: 'System attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        NpApiError: {\n            _enum: ['MemberNotFound', 'OverflowInPendingRewards']\n        },\n        NpPoolId: 'u32'\n    }\n};\n", "export const runtime = {\n    NominationPoolsApi: [\n        {\n            methods: {\n                balance_to_points: {\n                    description: 'Returns the equivalent points of `new_funds` for a given pool.',\n                    params: [\n                        {\n                            name: 'poolId',\n                            type: 'NpPoolId'\n                        },\n                        {\n                            name: 'newFunds',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'Balance'\n                },\n                pending_rewards: {\n                    description: 'Returns the pending rewards for the given member.',\n                    params: [\n                        {\n                            name: 'member',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Balance'\n                },\n                points_to_balance: {\n                    description: 'Returns the equivalent balance of `points` for a given pool.',\n                    params: [\n                        {\n                            name: 'poolId',\n                            type: 'NpPoolId'\n                        },\n                        {\n                            name: 'points',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'Balance'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',\n        Kind: '[u8; 16]',\n        OffenceDetails: {\n            offender: 'Offender',\n            reporters: 'Vec<Reporter>'\n        },\n        Offender: 'IdentificationTuple',\n        OpaqueTimeSlot: 'Bytes',\n        ReportIdOf: 'Hash',\n        Reporter: 'AccountId'\n    }\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "export const runtime = {\n    DifficultyApi: [\n        {\n            methods: {\n                difficulty: {\n                    description: 'Return the target difficulty of the next block.',\n                    params: [],\n                    // This is Difficulty in the original, however this is chain-specific\n                    type: 'Raw'\n                }\n            },\n            version: 1\n        }\n    ],\n    TimestampApi: [\n        {\n            methods: {\n                timestamp: {\n                    description: 'API necessary for timestamp-based difficulty adjustment algorithms.',\n                    params: [],\n                    type: 'Moment'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        ProxyDefinition: {\n            delegate: 'AccountId',\n            proxyType: 'ProxyType',\n            delay: 'BlockNumber'\n        },\n        ProxyType: {\n            _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']\n        },\n        ProxyAnnouncement: {\n            real: 'AccountId',\n            callHash: 'Hash',\n            height: 'BlockNumber'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        ActiveRecovery: {\n            created: 'BlockNumber',\n            deposit: 'Balance',\n            friends: 'Vec<AccountId>'\n        },\n        RecoveryConfig: {\n            delayPeriod: 'BlockNumber',\n            deposit: 'Balance',\n            friends: 'Vec<AccountId>',\n            threshold: 'u16'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        Period: '(BlockNumber, u32)',\n        Priority: 'u8',\n        SchedulePeriod: 'Period',\n        SchedulePriority: 'Priority',\n        Scheduled: {\n            maybeId: 'Option<Bytes>',\n            priority: 'SchedulePriority',\n            call: 'Call',\n            maybePeriodic: 'Option<SchedulePeriod>',\n            origin: 'PalletsOrigin'\n        },\n        ScheduledTo254: {\n            maybeId: 'Option<Bytes>',\n            priority: 'SchedulePriority',\n            call: 'Call',\n            maybePeriodic: 'Option<SchedulePeriod>'\n        },\n        TaskAddress: '(BlockNumber, u32)'\n    }\n};\n", "import { runtime } from './runtime.js';\nconst keyTypes = {\n    // key for beefy\n    BeefyKey: '[u8; 33]',\n    // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n    Keys: 'SessionKeys4',\n    SessionKeys1: '(AccountId)',\n    SessionKeys2: '(AccountId, AccountId)',\n    SessionKeys3: '(AccountId, AccountId, AccountId)',\n    SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...keyTypes,\n        FullIdentification: 'Exposure',\n        IdentificationTuple: '(ValidatorId, FullIdentification)',\n        MembershipProof: {\n            session: 'SessionIndex',\n            trieNodes: 'Vec<Bytes>',\n            validatorCount: 'ValidatorCount'\n        },\n        SessionIndex: 'u32',\n        ValidatorCount: 'u32'\n    }\n};\n", "export const runtime = {\n    SessionKeys: [\n        {\n            methods: {\n                decode_session_keys: {\n                    description: 'Decode the given public session keys.',\n                    params: [\n                        {\n                            name: 'encoded',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Vec<(Bytes, KeyTypeId)>>'\n                },\n                generate_session_keys: {\n                    description: 'Generate a set of session keys with optionally using the given seed.',\n                    params: [\n                        {\n                            name: 'seed',\n                            type: 'Option<Bytes>'\n                        }\n                    ],\n                    type: 'Bytes'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        Bid: {\n            who: 'AccountId',\n            kind: 'BidKind',\n            value: 'Balance'\n        },\n        BidKind: {\n            _enum: {\n                Deposit: 'Balance',\n                Vouch: '(AccountId, Balance)'\n            }\n        },\n        // a society-specific Judgement (not the same as identity Judgement)\n        SocietyJudgement: {\n            _enum: ['Rebid', 'Reject', 'Approve']\n        },\n        // a society-specific Vote\n        SocietyVote: {\n            _enum: ['Skeptic', 'Reject', 'Approve']\n        },\n        StrikeCount: 'u32',\n        VouchingStatus: {\n            _enum: ['Vouching', 'Banned']\n        }\n    }\n};\n", "import { runtime } from './runtime.js';\nconst deprecated = {\n    Points: 'u32',\n    EraPoints: {\n        total: 'Points',\n        individual: 'Vec<Points>'\n    }\n};\nconst phragmen = {\n    CompactAssignments: 'CompactAssignmentsWith16',\n    CompactAssignmentsWith16: {\n        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n    },\n    CompactAssignmentsWith24: {\n        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n        votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n        votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n        votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n        votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n        votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n        votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n        votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n        votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n    },\n    CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n    CompactAssignmentsTo257: {\n        votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n        votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n        votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n        votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n        votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n        votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n        votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n        votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n        votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n        votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n        votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n        votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n        votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n        votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n        votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n        votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n    },\n    CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n    CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n    ElectionCompute: {\n        // in previous versions the last entry was \"AuthorityId\"\n        // (since no data attached, and it is via SCALE can rename)\n        _enum: ['OnChain', 'Signed', 'Unsigned']\n    },\n    ElectionPhase: {\n        _enum: {\n            Off: null,\n            Signed: null,\n            Unsigned: '(bool, BlockNumber)',\n            Emergency: null\n        }\n    },\n    ElectionResult: {\n        compute: 'ElectionCompute',\n        slotStake: 'Balance',\n        electedStashes: 'Vec<AccountId>',\n        exposures: 'Vec<(AccountId, Exposure)>'\n    },\n    ElectionScore: '[u128; 3]',\n    ElectionSize: {\n        validators: 'Compact<ValidatorIndex>',\n        nominators: 'Compact<NominatorIndex>'\n    },\n    ElectionStatus: {\n        _enum: {\n            Close: 'Null',\n            Open: 'BlockNumber'\n        }\n    },\n    ExtendedBalance: 'u128',\n    RawSolution: 'RawSolutionWith16',\n    RawSolutionWith16: {\n        compact: 'CompactAssignmentsWith16',\n        score: 'ElectionScore',\n        round: 'u32'\n    },\n    RawSolutionWith24: {\n        compact: 'CompactAssignmentsWith24',\n        score: 'ElectionScore',\n        round: 'u32'\n    },\n    RawSolutionTo265: 'RawSolutionWith16',\n    ReadySolution: {\n        supports: 'SolutionSupports',\n        score: 'ElectionScore',\n        compute: 'ElectionCompute'\n    },\n    RoundSnapshot: {\n        voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n        targets: 'Vec<AccountId>'\n    },\n    SeatHolder: {\n        who: 'AccountId',\n        stake: 'Balance',\n        deposit: 'Balance'\n    },\n    SignedSubmission: {\n        _fallback: 'SignedSubmissionTo276',\n        who: 'AccountId',\n        deposit: 'Balance',\n        solution: 'RawSolution',\n        reward: 'Balance'\n    },\n    SignedSubmissionTo276: {\n        who: 'AccountId',\n        deposit: 'Balance',\n        solution: 'RawSolution'\n    },\n    SignedSubmissionOf: 'SignedSubmission',\n    SolutionOrSnapshotSize: {\n        voters: 'Compact<u32>',\n        targets: 'Compact<u32>'\n    },\n    SolutionSupport: {\n        total: 'ExtendedBalance',\n        voters: 'Vec<(AccountId, ExtendedBalance)>'\n    },\n    SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n    Supports: 'SolutionSupports',\n    SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n    Voter: {\n        votes: 'Vec<AccountId>',\n        stake: 'Balance',\n        deposit: 'Balance'\n    },\n    VoteWeight: 'u64'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...deprecated,\n        ...phragmen,\n        ActiveEraInfo: {\n            index: 'EraIndex',\n            start: 'Option<Moment>'\n        },\n        EraIndex: 'u32',\n        EraRewardPoints: {\n            total: 'RewardPoint',\n            individual: 'BTreeMap<AccountId, RewardPoint>'\n        },\n        EraRewards: {\n            total: 'u32',\n            rewards: 'Vec<u32>'\n        },\n        Exposure: {\n            total: 'Compact<Balance>',\n            own: 'Compact<Balance>',\n            others: 'Vec<IndividualExposure>'\n        },\n        Forcing: {\n            _enum: [\n                'NotForcing',\n                'ForceNew',\n                'ForceNone',\n                'ForceAlways'\n            ]\n        },\n        IndividualExposure: {\n            who: 'AccountId',\n            value: 'Compact<Balance>'\n        },\n        KeyType: 'AccountId',\n        MomentOf: 'Moment',\n        Nominations: {\n            targets: 'Vec<AccountId>',\n            submittedIn: 'EraIndex',\n            suppressed: 'bool'\n        },\n        NominatorIndex: 'u32',\n        NominatorIndexCompact: 'Compact<NominatorIndex>',\n        OffchainAccuracy: 'PerU16',\n        OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n        PhragmenScore: '[u128; 3]',\n        Points: 'u32',\n        RewardDestination: {\n            _enum: {\n                Staked: 'Null',\n                Stash: 'Null',\n                Controller: 'Null',\n                Account: 'AccountId',\n                None: 'Null'\n            }\n        },\n        RewardPoint: 'u32',\n        SlashJournalEntry: {\n            who: 'AccountId',\n            amount: 'Balance',\n            ownSlash: 'Balance'\n        },\n        SlashingSpansTo204: {\n            spanIndex: 'SpanIndex',\n            lastStart: 'EraIndex',\n            prior: 'Vec<EraIndex>'\n        },\n        SlashingSpans: {\n            spanIndex: 'SpanIndex',\n            lastStart: 'EraIndex',\n            lastNonzeroSlash: 'EraIndex',\n            prior: 'Vec<EraIndex>'\n        },\n        SpanIndex: 'u32',\n        SpanRecord: {\n            slashed: 'Balance',\n            paidOut: 'Balance'\n        },\n        StakingLedgerTo223: {\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>'\n        },\n        StakingLedgerTo240: {\n            _fallback: 'StakingLedgerTo223',\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>',\n            lastReward: 'Option<EraIndex>'\n        },\n        StakingLedger: {\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>',\n            claimedRewards: 'Vec<EraIndex>'\n        },\n        UnappliedSlashOther: '(AccountId, Balance)',\n        UnappliedSlash: {\n            validator: 'AccountId',\n            own: 'Balance',\n            others: 'Vec<UnappliedSlashOther>',\n            reporters: 'Vec<AccountId>',\n            payout: 'Balance'\n        },\n        UnlockChunk: {\n            value: 'Compact<Balance>',\n            era: 'Compact<BlockNumber>'\n        },\n        ValidatorIndex: 'u16',\n        ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n        ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n        ValidatorPrefsWithCommission: {\n            commission: 'Compact<Perbill>'\n        },\n        ValidatorPrefsWithBlocked: {\n            commission: 'Compact<Perbill>',\n            blocked: 'bool'\n        },\n        ValidatorPrefsTo196: {\n            validatorPayment: 'Compact<Balance>'\n        },\n        ValidatorPrefsTo145: {\n            unstakeThreshold: 'Compact<u32>',\n            validatorPayment: 'Compact<Balance>'\n        }\n    }\n};\n", "export const runtime = {\n    StakingApi: [\n        {\n            methods: {\n                nominations_quota: {\n                    description: 'Returns the nominations quota for a nominator with a given balance.',\n                    params: [\n                        {\n                            name: 'balance',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'u32'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        WeightToFeeCoefficient: {\n            coeffInteger: 'Balance',\n            coeffFrac: 'Perbill',\n            negative: 'bool',\n            degree: 'u8'\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {}\n};\n", "export const rpc = {\n    genSyncSpec: {\n        description: 'Returns the json-serialized chainspec running the node, with a sync state.',\n        endpoint: 'sync_state_genSyncSpec',\n        params: [\n            {\n                name: 'raw',\n                type: 'bool'\n            }\n        ],\n        type: 'Json'\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AccountInfo: 'AccountInfoWithTripleRefCount',\n        AccountInfoWithRefCountU8: {\n            nonce: 'Index',\n            refcount: 'u8',\n            data: 'AccountData'\n        },\n        AccountInfoWithRefCount: {\n            _fallback: 'AccountInfoWithRefCountU8',\n            nonce: 'Index',\n            refcount: 'RefCount',\n            data: 'AccountData'\n        },\n        AccountInfoWithDualRefCount: {\n            _fallback: 'AccountInfoWithRefCount',\n            nonce: 'Index',\n            consumers: 'RefCount',\n            providers: 'RefCount',\n            data: 'AccountData'\n        },\n        // original naming\n        AccountInfoWithProviders: 'AccountInfoWithDualRefCount',\n        AccountInfoWithTripleRefCount: {\n            _fallback: 'AccountInfoWithDualRefCount',\n            nonce: 'Index',\n            consumers: 'RefCount',\n            providers: 'RefCount',\n            sufficients: 'RefCount',\n            data: 'AccountData'\n        },\n        ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',\n        ApplyExtrinsicResultPre6: 'Result<DispatchOutcomePre6, TransactionValidityError>',\n        ArithmeticError: {\n            _enum: [\n                'Underflow',\n                'Overflow',\n                'DivisionByZero'\n            ]\n        },\n        BlockLength: {\n            max: 'PerDispatchClassU32'\n        },\n        BlockWeights: {\n            baseBlock: 'Weight',\n            maxBlock: 'Weight',\n            perClass: 'PerDispatchClassWeightsPerClass'\n        },\n        ChainProperties: 'GenericChainProperties',\n        ChainType: {\n            _enum: {\n                Development: 'Null',\n                Local: 'Null',\n                Live: 'Null',\n                Custom: 'Text'\n            }\n        },\n        ConsumedWeight: 'PerDispatchClassWeight',\n        DigestOf: 'Digest',\n        DispatchClass: {\n            _enum: ['Normal', 'Operational', 'Mandatory']\n        },\n        DispatchError: {\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModule',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                TooManyConsumers: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError',\n                Exhausted: 'Null',\n                Corruption: 'Null',\n                Unavailable: 'Null'\n            }\n        },\n        DispatchErrorPre6: {\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModulePre6',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                TooManyConsumers: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError'\n            }\n        },\n        DispatchErrorPre6First: {\n            // The enum was modified mid-flight, affecting asset chains -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModulePre6',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError'\n            }\n        },\n        DispatchErrorModuleU8: {\n            index: 'u8',\n            error: 'u8'\n        },\n        DispatchErrorModuleU8a: {\n            index: 'u8',\n            error: '[u8; 4]'\n        },\n        DispatchErrorModule: 'DispatchErrorModuleU8a',\n        DispatchErrorModulePre6: 'DispatchErrorModuleU8',\n        DispatchErrorTo198: {\n            module: 'Option<u8>',\n            error: 'u8'\n        },\n        DispatchInfo: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            paysFee: 'Pays'\n        },\n        DispatchInfoTo190: {\n            weight: 'Weight',\n            class: 'DispatchClass'\n        },\n        DispatchInfoTo244: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            paysFee: 'bool'\n        },\n        DispatchOutcome: 'Result<(), DispatchError>',\n        DispatchOutcomePre6: 'Result<(), DispatchErrorPre6>',\n        DispatchResult: 'Result<(), DispatchError>',\n        DispatchResultOf: 'DispatchResult',\n        DispatchResultTo198: 'Result<(), Text>',\n        Event: 'GenericEvent',\n        EventId: '[u8; 2]',\n        EventIndex: 'u32',\n        EventRecord: {\n            phase: 'Phase',\n            event: 'Event',\n            topics: 'Vec<Hash>'\n        },\n        Health: {\n            peers: 'u64',\n            isSyncing: 'bool',\n            shouldHavePeers: 'bool'\n        },\n        InvalidTransaction: {\n            _enum: {\n                Call: 'Null',\n                Payment: 'Null',\n                Future: 'Null',\n                Stale: 'Null',\n                BadProof: 'Null',\n                AncientBirthBlock: 'Null',\n                ExhaustsResources: 'Null',\n                Custom: 'u8',\n                BadMandatory: 'Null',\n                MandatoryDispatch: 'Null',\n                BadSigner: 'Null'\n            }\n        },\n        Key: 'Bytes',\n        LastRuntimeUpgradeInfo: {\n            specVersion: 'Compact<u32>',\n            specName: 'Text'\n        },\n        NetworkState: {\n            peerId: 'Text',\n            listenedAddresses: 'Vec<Text>',\n            externalAddresses: 'Vec<Text>',\n            connectedPeers: 'HashMap<Text, Peer>',\n            notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',\n            averageDownloadPerSec: 'u64',\n            averageUploadPerSec: 'u64',\n            peerset: 'NetworkStatePeerset'\n        },\n        NetworkStatePeerset: {\n            messageQueue: 'u64',\n            nodes: 'HashMap<Text, NetworkStatePeersetInfo>'\n        },\n        NetworkStatePeersetInfo: {\n            connected: 'bool',\n            reputation: 'i32'\n        },\n        NodeRole: {\n            _enum: {\n                Full: 'Null',\n                LightClient: 'Null',\n                Authority: 'Null',\n                UnknownRole: 'u8'\n            }\n        },\n        NotConnectedPeer: {\n            knownAddresses: 'Vec<Text>',\n            latestPingTime: 'Option<PeerPing>',\n            versionString: 'Option<Text>'\n        },\n        Peer: {\n            enabled: 'bool',\n            endpoint: 'PeerEndpoint',\n            knownAddresses: 'Vec<Text>',\n            latestPingTime: 'PeerPing',\n            open: 'bool',\n            versionString: 'Text'\n        },\n        PeerEndpoint: {\n            listening: 'PeerEndpointAddr'\n        },\n        PeerEndpointAddr: {\n            _alias: {\n                localAddr: 'local_addr',\n                sendBackAddr: 'send_back_addr'\n            },\n            localAddr: 'Text',\n            sendBackAddr: 'Text'\n        },\n        PeerPing: {\n            nanos: 'u64',\n            secs: 'u64'\n        },\n        PeerInfo: {\n            peerId: 'Text',\n            roles: 'Text',\n            protocolVersion: 'u32',\n            bestHash: 'Hash',\n            bestNumber: 'BlockNumber'\n        },\n        PerDispatchClassU32: {\n            normal: 'u32',\n            operational: 'u32',\n            mandatory: 'u32'\n        },\n        PerDispatchClassWeight: {\n            normal: 'Weight',\n            operational: 'Weight',\n            mandatory: 'Weight'\n        },\n        PerDispatchClassWeightsPerClass: {\n            normal: 'WeightPerClass',\n            operational: 'WeightPerClass',\n            mandatory: 'WeightPerClass'\n        },\n        Phase: {\n            _enum: {\n                ApplyExtrinsic: 'u32',\n                Finalization: 'Null',\n                Initialization: 'Null'\n            }\n        },\n        RawOrigin: {\n            _enum: {\n                Root: 'Null',\n                Signed: 'AccountId',\n                None: 'Null'\n            }\n        },\n        RefCount: 'u32',\n        RefCountTo259: 'u8',\n        SyncState: {\n            startingBlock: 'BlockNumber',\n            currentBlock: 'BlockNumber',\n            highestBlock: 'Option<BlockNumber>'\n        },\n        SystemOrigin: 'RawOrigin',\n        TokenError: {\n            _enum: [\n                'NoFunds',\n                'WouldDie',\n                'BelowMinimum',\n                'CannotCreate',\n                'UnknownAsset',\n                'Frozen',\n                'Unsupported',\n                // these are dropped, but still in older versions\n                // (if this adjusts, will need to take a re-look)\n                'Underflow',\n                'Overflow'\n            ]\n        },\n        TransactionValidityError: {\n            _enum: {\n                Invalid: 'InvalidTransaction',\n                Unknown: 'UnknownTransaction'\n            }\n        },\n        TransactionalError: {\n            _enum: [\n                'LimitReached',\n                'NoLayer'\n            ]\n        },\n        UnknownTransaction: {\n            _enum: {\n                CannotLookup: 'Null',\n                NoUnsignedValidator: 'Null',\n                Custom: 'u8'\n            }\n        },\n        WeightPerClass: {\n            baseExtrinsic: 'Weight',\n            maxExtrinsic: 'Option<Weight>',\n            maxTotal: 'Option<Weight>',\n            reserved: 'Option<Weight>'\n        }\n    }\n};\n", "export const rpc = {\n    accountNextIndex: {\n        alias: ['account_nextIndex'],\n        description: 'Retrieves the next accountIndex as available on the node',\n        params: [\n            {\n                name: 'accountId',\n                type: 'AccountId'\n            }\n        ],\n        type: 'Index'\n    },\n    addLogFilter: {\n        description: 'Adds the supplied directives to the current log filter',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'directives',\n                type: 'Text'\n            }\n        ],\n        type: 'Null'\n    },\n    addReservedPeer: {\n        description: 'Adds a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peer',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    chain: {\n        description: 'Retrieves the chain',\n        params: [],\n        type: 'Text'\n    },\n    chainType: {\n        description: 'Retrieves the chain type',\n        params: [],\n        type: 'ChainType'\n    },\n    dryRun: {\n        alias: ['system_dryRunAt'],\n        description: 'Dry run an extrinsic at a given block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ApplyExtrinsicResult'\n    },\n    health: {\n        description: 'Return health status of the node',\n        noErrorLog: true,\n        params: [],\n        type: 'Health'\n    },\n    localListenAddresses: {\n        description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    localPeerId: {\n        description: 'Returns the base58-encoded PeerId of the node',\n        params: [],\n        type: 'Text'\n    },\n    name: {\n        description: 'Retrieves the node name',\n        params: [],\n        type: 'Text'\n    },\n    networkState: {\n        alias: ['system_unstable_networkState'],\n        description: 'Returns current state of the network',\n        isUnsafe: true,\n        params: [],\n        type: 'NetworkState'\n    },\n    nodeRoles: {\n        description: 'Returns the roles the node is running as',\n        params: [],\n        type: 'Vec<NodeRole>'\n    },\n    peers: {\n        description: 'Returns the currently connected peers',\n        isUnsafe: true,\n        params: [],\n        type: 'Vec<PeerInfo>'\n    },\n    properties: {\n        description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n        params: [],\n        type: 'ChainProperties'\n    },\n    removeReservedPeer: {\n        description: 'Remove a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peerId',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    reservedPeers: {\n        description: 'Returns the list of reserved peers',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    resetLogFilter: {\n        description: 'Resets the log filter to Substrate defaults',\n        isUnsafe: true,\n        params: [],\n        type: 'Null'\n    },\n    syncState: {\n        description: 'Returns the state of the syncing of the node',\n        params: [],\n        type: 'SyncState'\n    },\n    version: {\n        description: 'Retrieves the version of the node',\n        params: [],\n        type: 'Text'\n    }\n};\n", "export const runtime = {\n    AccountNonceApi: [\n        {\n            methods: {\n                account_nonce: {\n                    description: 'The API to query account nonce (aka transaction index)',\n                    params: [\n                        {\n                            name: 'accountId',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Index'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        Bounty: {\n            proposer: 'AccountId',\n            value: 'Balance',\n            fee: 'Balance',\n            curatorDeposit: 'Balance',\n            bond: 'Balance',\n            status: 'BountyStatus'\n        },\n        BountyIndex: 'u32',\n        BountyStatus: {\n            _enum: {\n                Proposed: 'Null',\n                Approved: 'Null',\n                Funded: 'Null',\n                CuratorProposed: 'BountyStatusCuratorProposed',\n                Active: 'BountyStatusActive',\n                PendingPayout: 'BountyStatusPendingPayout'\n            }\n        },\n        BountyStatusActive: {\n            curator: 'AccountId',\n            updateDue: 'BlockNumber'\n        },\n        BountyStatusCuratorProposed: {\n            curator: 'AccountId'\n        },\n        BountyStatusPendingPayout: {\n            curator: 'AccountId',\n            beneficiary: 'AccountId',\n            unlockAt: 'BlockNumber'\n        },\n        OpenTip: {\n            reason: 'Hash',\n            who: 'AccountId',\n            finder: 'AccountId',\n            deposit: 'Balance',\n            closes: 'Option<BlockNumber>',\n            tips: 'Vec<OpenTipTip>',\n            findersFee: 'bool'\n        },\n        OpenTipTo225: {\n            reason: 'Hash',\n            who: 'AccountId',\n            finder: 'Option<OpenTipFinderTo225>',\n            closes: 'Option<BlockNumber>',\n            tips: 'Vec<OpenTipTip>'\n        },\n        OpenTipFinderTo225: '(AccountId, Balance)',\n        OpenTipTip: '(AccountId, Balance)',\n        TreasuryProposal: {\n            proposer: 'AccountId',\n            value: 'Balance',\n            beneficiary: 'AccountId',\n            bond: 'Balance'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        Multiplier: 'Fixed128'\n    }\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        TransactionSource: {\n            _enum: ['InBlock', 'Local', 'External']\n        },\n        TransactionValidity: 'Result<ValidTransaction, TransactionValidityError>',\n        ValidTransaction: {\n            priority: 'TransactionPriority',\n            requires: 'Vec<TransactionTag>',\n            provides: 'Vec<TransactionTag>',\n            longevity: 'TransactionLongevity',\n            propagate: 'bool'\n        }\n    }\n};\n", "export const runtime = {\n    TaggedTransactionQueue: [\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'source',\n                            type: 'TransactionSource'\n                        },\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        },\n                        {\n                            name: 'blockHash',\n                            type: 'BlockHash'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 3\n        },\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'source',\n                            type: 'TransactionSource'\n                        },\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "export default {\n    rpc: {},\n    types: {\n        ClassId: 'u32',\n        InstanceId: 'u32',\n        DepositBalance: 'Balance',\n        DepositBalanceOf: 'Balance',\n        ClassDetails: {\n            owner: 'AccountId',\n            issuer: 'AccountId',\n            admin: 'AccountId',\n            freezer: 'AccountId',\n            totalDeposit: 'DepositBalance',\n            freeHolding: 'bool',\n            instances: 'u32',\n            instanceMetadatas: 'u32',\n            attributes: 'u32',\n            isFrozen: 'bool'\n        },\n        DestroyWitness: {\n            instances: 'Compact<u32>',\n            instanceMetadatas: 'Compact<u32>',\n            attributes: 'Compact<u32>'\n        },\n        InstanceDetails: {\n            owner: 'AccountId',\n            approved: 'Option<AccountId>',\n            isFrozen: 'bool',\n            deposit: 'DepositBalance'\n        },\n        ClassMetadata: {\n            deposit: 'DepositBalance',\n            data: 'Vec<u8>',\n            isFrozen: 'bool'\n        },\n        InstanceMetadata: {\n            deposit: 'DepositBalance',\n            data: 'Vec<u8>',\n            isFrozen: 'bool'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        Multisig: {\n            when: 'Timepoint',\n            deposit: 'Balance',\n            depositor: 'AccountId',\n            approvals: 'Vec<AccountId>'\n        },\n        Timepoint: {\n            height: 'BlockNumber',\n            index: 'u32'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        VestingInfo: {\n            locked: 'Balance',\n            perBlock: 'Balance',\n            startingBlock: 'BlockNumber'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        BlockAttestations: {\n            receipt: 'CandidateReceipt',\n            valid: 'Vec<AccountId>',\n            invalid: 'Vec<AccountId>'\n        },\n        IncludedBlocks: {\n            actualNumber: 'BlockNumber',\n            session: 'SessionIndex',\n            randomSeed: 'H256',\n            activeParachains: 'Vec<ParaId>',\n            paraBlocks: 'Vec<Hash>'\n        },\n        MoreAttestations: {}\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        BridgedBlockHash: 'H256',\n        BridgedBlockNumber: 'BlockNumber',\n        BridgedHeader: 'Header',\n        BridgeMessageId: '(LaneId, MessageNonce)',\n        CallOrigin: {\n            _enum: {\n                SourceRoot: 'Null',\n                TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n                SourceAccount: 'AccountId'\n            }\n        },\n        ChainId: '[u8; 4]',\n        DeliveredMessages: {\n            begin: 'MessageNonce',\n            end: 'MessageNonce',\n            // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n            dispatchResults: 'BitVec'\n        },\n        DispatchFeePayment: {\n            _enum: ['AtSourceChain', 'AtTargetChain']\n        },\n        InboundLaneData: {\n            relayers: 'Vec<UnrewardedRelayer>',\n            lastConfirmedNonce: 'MessageNonce'\n        },\n        InboundRelayer: 'AccountId',\n        InitializationData: {\n            header: 'Header',\n            authorityList: 'AuthorityList',\n            setId: 'SetId',\n            isHalted: 'bool'\n        },\n        LaneId: '[u8; 4]',\n        MessageData: {\n            payload: 'Bytes',\n            fee: 'Balance'\n        },\n        MessagesDeliveryProofOf: {\n            bridgedHeaderHash: 'BlockHash',\n            storageProof: 'Vec<Bytes>',\n            lane: 'LaneId'\n        },\n        MessageKey: {\n            laneId: 'LaneId',\n            nonce: 'MessageNonce'\n        },\n        MessageNonce: 'u64',\n        MessagesProofOf: {\n            bridgedHeaderHash: 'BridgedBlockHash',\n            storageProof: 'Vec<Bytes>',\n            lane: 'LaneId',\n            noncesStart: 'MessageNonce',\n            noncesEnd: 'MessageNonce'\n        },\n        OperatingMode: {\n            _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n        },\n        OutboundLaneData: {\n            oldestUnprunedNonce: 'MessageNonce',\n            latestReceivedNonce: 'MessageNonce',\n            latestGeneratedNonce: 'MessageNonce'\n        },\n        OutboundMessageFee: 'Balance',\n        OutboundPayload: {\n            specVersion: 'u32',\n            weight: 'Weight',\n            origin: 'CallOrigin',\n            dispatchFeePayment: 'DispatchFeePayment',\n            call: 'Bytes'\n        },\n        Parameter: 'Null',\n        RelayerId: 'AccountId',\n        UnrewardedRelayer: {\n            relayer: 'RelayerId',\n            messages: 'DeliveredMessages'\n        },\n        UnrewardedRelayersState: {\n            unrewardedRelayer_Entries: 'MessageNonce',\n            messagesInOldestEntry: 'MessageNonce',\n            totalMessages: 'MessageNonce'\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        StatementKind: {\n            _enum: ['Regular', 'Saft']\n        }\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        FundIndex: 'u32',\n        LastContribution: {\n            _enum: {\n                Never: 'Null',\n                PreEnding: 'u32',\n                Ending: 'BlockNumber'\n            }\n        },\n        FundInfo: {\n            depositor: 'AccountId',\n            verifier: 'Option<MultiSigner>',\n            deposit: 'Balance',\n            raised: 'Balance',\n            end: 'BlockNumber',\n            cap: 'Balance',\n            lastContribution: 'LastContribution',\n            firstPeriod: 'LeasePeriod',\n            lastPeriod: 'LeasePeriod',\n            trieIndex: 'TrieIndex'\n        },\n        TrieIndex: 'u32'\n    }\n};\n", "import { runtime } from './runtime.js';\nconst dmpQueue = {\n    CollationInfo: {\n        upwardMessages: 'Vec<UpwardMessage>',\n        horizontalMessages: 'Vec<OutboundHrmpMessage>',\n        newValidationCode: 'Option<ValidationCode>',\n        processedDownwardMessages: 'u32',\n        hrmpWatermark: 'RelayBlockNumber',\n        headData: 'HeadData'\n    },\n    CollationInfoV1: {\n        upwardMessages: 'Vec<UpwardMessage>',\n        horizontalMessages: 'Vec<OutboundHrmpMessage>',\n        newValidationCode: 'Option<ValidationCode>',\n        processedDownwardMessages: 'u32',\n        hrmpWatermark: 'RelayBlockNumber'\n    },\n    ConfigData: {\n        maxIndividual: 'Weight'\n    },\n    MessageId: '[u8; 32]',\n    OverweightIndex: 'u64',\n    PageCounter: 'u32',\n    PageIndexData: {\n        beginUsed: 'PageCounter',\n        endUsed: 'PageCounter',\n        overweightCount: 'OverweightIndex'\n    }\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: dmpQueue\n};\n", "export const runtime = {\n    CollectCollationInfo: [\n        {\n            methods: {\n                collect_collation_info: {\n                    description: 'Collect information about a collation.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'CollationInfo'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                collect_collation_info: {\n                    description: 'Collect information about a collation.',\n                    params: [],\n                    type: 'CollationInfoV1'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "const finalityV1 = {\n    methods: {\n        best_finalized: {\n            description: 'Returns number and hash of the best finalized header known to the bridge module.',\n            params: [],\n            type: '(BlockNumber, Hash)'\n        }\n    },\n    version: 1\n};\nexport const runtime = {\n    KusamaFinalityApi: [finalityV1],\n    PolkadotFinalityApi: [finalityV1],\n    RococoFinalityApi: [finalityV1],\n    WestendFinalityApi: [finalityV1]\n};\n", "import hrmpTypes from './hrmp.js';\nimport { runtime } from './runtime.js';\nimport slotTypes from './slots.js';\nconst proposeTypes = {\n    ParachainProposal: {\n        proposer: 'AccountId',\n        genesisHead: 'HeadData',\n        validators: 'Vec<ValidatorId>',\n        name: 'Bytes',\n        balance: 'Balance'\n    },\n    RegisteredParachainInfo: {\n        validators: 'Vec<ValidatorId>',\n        proposer: 'AccountId'\n    }\n};\nconst cumulusTypes = {\n    ServiceQuality: {\n        _enum: ['Ordered', 'Fast']\n    }\n};\nconst disputeTypes = {\n    DisputeLocation: {\n        _enum: ['Local', 'Remote']\n    },\n    DisputeResult: {\n        _enum: ['Valid', 'Invalid']\n    },\n    DisputeState: {\n        validatorsFor: 'BitVec',\n        validatorsAgainst: 'BitVec',\n        start: 'BlockNumber',\n        concludedAt: 'Option<BlockNumber>'\n    },\n    DisputeStatement: {\n        _enum: {\n            Valid: 'ValidDisputeStatementKind',\n            Invalid: 'InvalidDisputeStatementKind'\n        }\n    },\n    DisputeStatementSet: {\n        candidateHash: 'CandidateHash',\n        session: 'SessionIndex',\n        statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'\n    },\n    ExecutorParam: {\n        _enum: {\n            Phantom: 'Null',\n            MaxMemoryPages: 'u32',\n            StackLogicalMax: 'u32',\n            StackNativeMax: 'u32',\n            PrecheckingMaxMemory: 'u64',\n            PvfPrepTimeout: '(PvfPrepTimeoutKind, u64)',\n            PvfExecTimeout: '(PvfExecTimeoutKind, u64)'\n        }\n    },\n    ExecutorParamsHash: 'Hash',\n    ExecutorParams: 'Vec<ExecutorParam>',\n    ExplicitDisputeStatement: {\n        valid: 'bool',\n        candidateHash: 'CandidateHash',\n        session: 'SessionIndex'\n    },\n    InvalidDisputeStatementKind: {\n        _enum: ['Explicit']\n    },\n    MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',\n    PvfExecTimeoutKind: {\n        _enum: ['Backing', 'Approval']\n    },\n    PvfPrepTimeoutKind: {\n        _enum: ['Precheck', 'Lenient']\n    },\n    ValidDisputeStatementKind: {\n        _enum: {\n            Explicit: 'Null',\n            BackingSeconded: 'Hash',\n            BackingValid: 'Hash',\n            ApprovalChecking: 'Null'\n        }\n    }\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...cumulusTypes,\n        ...disputeTypes,\n        ...hrmpTypes,\n        ...proposeTypes,\n        ...slotTypes,\n        AbridgedCandidateReceipt: {\n            parachainIndex: 'ParaId',\n            relayParent: 'Hash',\n            headData: 'HeadData',\n            collator: 'CollatorId',\n            signature: 'CollatorSignature',\n            povBlockHash: 'Hash',\n            commitments: 'CandidateCommitments'\n        },\n        AbridgedHostConfiguration: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            maxUpwardQueueCount: 'u32',\n            maxUpwardQueueSize: 'u32',\n            maxUpwardMessageSize: 'u32',\n            maxUpwardMessageNumPerCandidate: 'u32',\n            hrmpMaxMessageNumPerCandidate: 'u32',\n            validationUpgradeFrequency: 'BlockNumber',\n            validationUpgradeDelay: 'BlockNumber'\n        },\n        AbridgedHrmpChannel: {\n            maxCapacity: 'u32',\n            maxTotalSize: 'u32',\n            maxMessageSize: 'u32',\n            msgCount: 'u32',\n            totalSize: 'u32',\n            mqcHead: 'Option<Hash>'\n        },\n        AssignmentId: 'AccountId',\n        AssignmentKind: {\n            _enum: {\n                Parachain: 'Null',\n                Parathread: '(CollatorId, u32)'\n            }\n        },\n        AttestedCandidate: {\n            candidate: 'AbridgedCandidateReceipt',\n            validityVotes: 'Vec<ValidityAttestation>',\n            validatorIndices: 'BitVec'\n        },\n        AuthorityDiscoveryId: 'AccountId',\n        AvailabilityBitfield: 'BitVec',\n        AvailabilityBitfieldRecord: {\n            bitfield: 'AvailabilityBitfield',\n            submittedTt: 'BlockNumber'\n        },\n        BackedCandidate: {\n            candidate: 'CommittedCandidateReceipt',\n            validityVotes: 'Vec<ValidityAttestation>',\n            validatorIndices: 'BitVec'\n        },\n        BufferedSessionChange: {\n            applyAt: 'BlockNumber',\n            validators: 'Vec<ValidatorId>',\n            queued: 'Vec<ValidatorId>',\n            sessionIndex: 'SessionIndex'\n        },\n        CandidateCommitments: {\n            upwardMessages: 'Vec<UpwardMessage>',\n            horizontalMessages: 'Vec<OutboundHrmpMessage>',\n            newValidationCode: 'Option<ValidationCode>',\n            headData: 'HeadData',\n            processedDownwardMessages: 'u32',\n            hrmpWatermark: 'BlockNumber'\n        },\n        CandidateDescriptor: {\n            paraId: 'ParaId',\n            relayParent: 'RelayChainHash',\n            collatorId: 'CollatorId',\n            persistedValidationDataHash: 'Hash',\n            povHash: 'Hash',\n            erasureRoot: 'Hash',\n            signature: 'CollatorSignature',\n            paraHead: 'Hash',\n            validationCodeHash: 'ValidationCodeHash'\n        },\n        CandidateEvent: {\n            _enum: {\n                CandidateBacked: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',\n                CandidateIncluded: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',\n                CandidateTimedOut: '(CandidateReceipt, HeadData, CoreIndex)'\n            }\n        },\n        CandidateHash: 'Hash',\n        CandidateInfo: {\n            who: 'AccountId',\n            deposit: 'Balance'\n        },\n        CandidatePendingAvailability: {\n            core: 'CoreIndex',\n            hash: 'CandidateHash',\n            descriptor: 'CandidateDescriptor',\n            availabilityVotes: 'BitVec',\n            backers: 'BitVec',\n            relayParentNumber: 'BlockNumber',\n            backedInNumber: 'BlockNumber',\n            backingGroup: 'GroupIndex'\n        },\n        CandidateReceipt: {\n            descriptor: 'CandidateDescriptor',\n            commitmentsHash: 'Hash'\n        },\n        GlobalValidationData: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            blockNumber: 'BlockNumber'\n        },\n        CollatorId: 'H256',\n        CollatorSignature: 'Signature',\n        CommittedCandidateReceipt: {\n            descriptor: 'CandidateDescriptor',\n            commitments: 'CandidateCommitments'\n        },\n        CoreAssignment: {\n            core: 'CoreIndex',\n            paraId: 'ParaId',\n            kind: 'AssignmentKind',\n            groupIdx: 'GroupIndex'\n        },\n        CoreIndex: 'u32',\n        CoreOccupied: {\n            _enum: {\n                Parathread: 'ParathreadEntry',\n                Parachain: 'Null'\n            }\n        },\n        CoreState: {\n            _enum: {\n                Occupied: 'OccupiedCore',\n                Scheduled: 'ScheduledCore',\n                Free: 'Null'\n            }\n        },\n        DoubleVoteReport: {\n            identity: 'ValidatorId',\n            first: '(Statement, ValidatorSignature)',\n            second: '(Statement, ValidatorSignature)',\n            proof: 'MembershipProof',\n            signingContext: 'SigningContext'\n        },\n        DownwardMessage: 'Bytes',\n        GroupIndex: 'u32',\n        GroupRotationInfo: {\n            sessionStartBlock: 'BlockNumber',\n            groupRotationFrequency: 'BlockNumber',\n            now: 'BlockNumber'\n        },\n        GlobalValidationSchedule: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            blockNumber: 'BlockNumber'\n        },\n        HeadData: 'Bytes',\n        HostConfiguration: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            maxUpwardQueueCount: 'u32',\n            maxUpwardQueueSize: 'u32',\n            maxUpwardMessageSize: 'u32',\n            maxUpwardMessageNumPerCandidate: 'u32',\n            hrmpMaxMessageNumPerCandidate: 'u32',\n            validationUpgradeFrequency: 'BlockNumber',\n            validationUpgradeDelay: 'BlockNumber',\n            maxPovSize: 'u32',\n            maxDownwardMessageSize: 'u32',\n            preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n            hrmpMaxParachainOutboundChannels: 'u32',\n            hrmpMaxParathreadOutboundChannels: 'u32',\n            hrmpOpenRequestTtl: 'u32',\n            hrmpSenderDeposit: 'Balance',\n            hrmpRecipientDeposit: 'Balance',\n            hrmpChannelMaxCapacity: 'u32',\n            hrmpChannelMaxTotalSize: 'u32',\n            hrmpMaxParachainInboundChannels: 'u32',\n            hrmpMaxParathreadInboundChannels: 'u32',\n            hrmpChannelMaxMessageSize: 'u32',\n            codeRetentionPeriod: 'BlockNumber',\n            parathreadCores: 'u32',\n            parathreadRetries: 'u32',\n            groupRotationFrequency: 'BlockNumber',\n            chainAvailabilityPeriod: 'BlockNumber',\n            threadAvailabilityPeriod: 'BlockNumber',\n            schedulingLookahead: 'u32',\n            maxValidatorsPerCore: 'Option<u32>',\n            maxValidators: 'Option<u32>',\n            disputePeriod: 'SessionIndex',\n            disputePostConclusionAcceptancePeriod: 'BlockNumber',\n            disputeMaxSpamSlots: 'u32',\n            disputeConclusionByTimeOutPeriod: 'BlockNumber',\n            noShowSlots: 'u32',\n            nDelayTranches: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            neededApprovals: 'u32',\n            relayVrfModuloSamples: 'u32'\n        },\n        InboundDownwardMessage: {\n            pubSentAt: 'BlockNumber',\n            pubMsg: 'DownwardMessage'\n        },\n        InboundHrmpMessage: {\n            sentAt: 'BlockNumber',\n            data: 'Bytes'\n        },\n        InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n        LocalValidationData: {\n            parentHead: 'HeadData',\n            balance: 'Balance',\n            codeUpgradeAllowed: 'Option<BlockNumber>'\n        },\n        MessageIngestionType: {\n            downwardMessages: 'Vec<InboundDownwardMessage>',\n            horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n        },\n        MessageQueueChain: 'RelayChainHash',\n        OccupiedCore: {\n            nextUpOnAvailable: 'Option<ScheduledCore>',\n            occupiedSince: 'BlockNumber',\n            timeOutAt: 'BlockNumber',\n            nextUpOnTimeOut: 'Option<ScheduledCore>',\n            availability: 'BitVec',\n            groupResponsible: 'GroupIndex',\n            candidateHash: 'CandidateHash',\n            candidateDescriptor: 'CandidateDescriptor'\n        },\n        OccupiedCoreAssumption: {\n            _enum: ['Included,', 'TimedOut', 'Free']\n        },\n        OutboundHrmpMessage: {\n            recipient: 'u32',\n            data: 'Bytes'\n        },\n        ParachainDispatchOrigin: {\n            _enum: ['Signed', 'Parachain', 'Root']\n        },\n        ParachainInherentData: {\n            validationData: 'PersistedValidationData',\n            relayChainState: 'StorageProof',\n            downwardMessages: 'Vec<InboundDownwardMessage>',\n            horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n        },\n        ParachainsInherentData: {\n            bitfields: 'SignedAvailabilityBitfields',\n            backedCandidates: 'Vec<BackedCandidate>',\n            disputes: 'MultiDisputeStatementSet',\n            parentHeader: 'Header'\n        },\n        ParaGenesisArgs: {\n            genesisHead: 'Bytes',\n            validationCode: 'Bytes',\n            parachain: 'bool'\n        },\n        ParaId: 'u32',\n        ParaInfo: {\n            manager: 'AccountId',\n            deposit: 'Balance',\n            locked: 'bool'\n        },\n        ParaLifecycle: {\n            _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']\n        },\n        ParaPastCodeMeta: {\n            upgradeTimes: 'Vec<ReplacementTimes>',\n            lastPruned: 'Option<BlockNumber>'\n        },\n        ParaScheduling: {\n            _enum: ['Always', 'Dynamic']\n        },\n        ParathreadClaim: '(ParaId, CollatorId)',\n        ParathreadClaimQueue: {\n            queue: 'Vec<QueuedParathread>',\n            nextCoreOffset: 'u32'\n        },\n        ParathreadEntry: {\n            claim: 'ParathreadClaim',\n            retries: 'u32'\n        },\n        ParaValidatorIndex: 'u32',\n        PersistedValidationData: {\n            parentHead: 'HeadData',\n            relayParentNumber: 'RelayChainBlockNumber',\n            relayParentStorageRoot: 'Hash',\n            maxPovSize: 'u32'\n        },\n        PvfCheckStatement: {\n            accept: 'bool',\n            subject: 'ValidationCodeHash',\n            sessionIndex: 'SessionIndex',\n            validatorIndex: 'ParaValidatorIndex'\n        },\n        QueuedParathread: {\n            claim: 'ParathreadEntry',\n            coreOffset: 'u32'\n        },\n        RelayBlockNumber: 'u32',\n        RelayChainBlockNumber: 'RelayBlockNumber',\n        RelayHash: 'Hash',\n        RelayChainHash: 'RelayHash',\n        Remark: '[u8; 32]',\n        ReplacementTimes: {\n            expectedAt: 'BlockNumber',\n            activatedAt: 'BlockNumber'\n        },\n        Retriable: {\n            _enum: {\n                Never: 'Null',\n                WithRetries: 'u32'\n            }\n        },\n        ScheduledCore: {\n            paraId: 'ParaId',\n            collator: 'Option<CollatorId>'\n        },\n        Scheduling: {\n            _enum: ['Always', 'Dynamic']\n        },\n        ScrapedOnChainVotes: {\n            session: 'SessionIndex',\n            backingValidatorsPerCandidate: 'Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>',\n            disputes: 'MultiDisputeStatementSet'\n        },\n        SessionInfo: {\n            activeValidatorIndices: 'Vec<ParaValidatorIndex>',\n            randomSeed: '[u8; 32]',\n            disputePeriod: 'SessionIndex',\n            validators: 'Vec<ValidatorId>',\n            discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n            assignmentKeys: 'Vec<AssignmentId>',\n            validatorGroups: 'Vec<Vec<ValidatorIndex>>',\n            nCores: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            relayVrfModuloSamples: 'u32',\n            nDelayTranches: 'u32',\n            noShowSlots: 'u32',\n            neededApprovals: 'u32'\n        },\n        OldV1SessionInfo: {\n            validators: 'Vec<ValidatorId>',\n            discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n            assignmentKeys: 'Vec<AssignmentId>',\n            validatorGroups: 'Vec<Vec<ParaValidatorIndex>>',\n            nCores: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            relayVrfModuloSamples: 'u32',\n            nDelayTranches: 'u32',\n            noShowSlots: 'u32',\n            neededApprovals: 'u32'\n        },\n        SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n        SignedAvailabilityBitfield: {\n            payload: 'BitVec',\n            validatorIndex: 'ParaValidatorIndex',\n            signature: 'ValidatorSignature'\n        },\n        SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n        SigningContext: {\n            sessionIndex: 'SessionIndex',\n            parentHash: 'Hash'\n        },\n        Statement: {\n            _enum: {\n                Never: 'Null',\n                Candidate: 'Hash',\n                Valid: 'Hash',\n                Invalid: 'Hash'\n            }\n        },\n        TransientValidationData: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            balance: 'Balance',\n            codeUpgradeAllowed: 'Option<BlockNumber>',\n            dmqLength: 'u32'\n        },\n        UpgradeGoAhead: {\n            _enum: ['Abort', 'GoAhead']\n        },\n        UpgradeRestriction: {\n            _enum: ['Present']\n        },\n        UpwardMessage: 'Bytes',\n        ValidationFunctionParams: {\n            maxCodeSize: 'u32',\n            relayChainHeight: 'RelayChainBlockNumber',\n            codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n        },\n        ValidationCode: 'Bytes',\n        ValidationCodeHash: 'Hash',\n        ValidationData: {\n            persisted: 'PersistedValidationData',\n            transient: 'TransientValidationData'\n        },\n        ValidationDataType: {\n            validationData: 'ValidationData',\n            relayChainState: 'Vec<Bytes>'\n        },\n        ValidatorSignature: 'Signature',\n        ValidityAttestation: {\n            _enum: {\n                Never: 'Null',\n                Implicit: 'ValidatorSignature',\n                Explicit: 'ValidatorSignature'\n            }\n        },\n        MessagingStateSnapshot: {\n            relayDispatchQueueSize: '(u32, u32)',\n            egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n        },\n        MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n        SystemInherentData: 'ParachainInherentData',\n        VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n    }\n};\n", "/* eslint-disable sort-keys */\nexport default {\n    HrmpChannel: {\n        maxCapacity: 'u32',\n        maxTotalSize: 'u32',\n        maxMessageSize: 'u32',\n        msgCount: 'u32',\n        totalSize: 'u32',\n        mqcHead: 'Option<Hash>',\n        senderDeposit: 'Balance',\n        recipientDeposit: 'Balance'\n    },\n    HrmpChannelId: {\n        sender: 'u32',\n        receiver: 'u32'\n    },\n    HrmpOpenChannelRequest: {\n        confirmed: 'bool',\n        age: 'SessionIndex',\n        senderDeposit: 'Balance',\n        maxMessageSize: 'u32',\n        maxCapacity: 'u32',\n        maxTotalSize: 'u32'\n    }\n};\n", "const PH_V1_TO_V2 = {\n    assumed_validation_data: {\n        description: 'Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'hash',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<(PersistedValidationData, ValidationCodeHash)>'\n    },\n    availability_cores: {\n        description: 'Yields information on all availability cores as relevant to the child block.',\n        params: [],\n        type: 'Vec<CoreState>'\n    },\n    candidate_events: {\n        description: 'Get a vector of events concerning candidates that occurred within a block.',\n        params: [],\n        type: 'Vec<CandidateEvent>'\n    },\n    candidate_pending_availability: {\n        description: 'Get the receipt of a candidate pending availability.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Option<CommittedCandidateReceipt>'\n    },\n    check_validation_outputs: {\n        description: 'Checks if the given validation outputs pass the acceptance criteria.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'outputs',\n                type: 'CandidateCommitments'\n            }\n        ],\n        type: 'bool'\n    },\n    dmq_contents: {\n        description: 'Get all the pending inbound messages in the downward message queue for a para.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Vec<InboundDownwardMessage>'\n    },\n    inbound_hrmp_channels_contents: {\n        description: 'Get the contents of all channels addressed to the given recipient.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Vec<InboundHrmpMessage>'\n    },\n    on_chain_votes: {\n        description: 'Scrape dispute relevant from on-chain, backing votes and resolved disputes.',\n        params: [],\n        type: 'Option<ScrapedOnChainVotes>'\n    },\n    persisted_validation_data: {\n        description: 'Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'Option<PersistedValidationData>'\n    },\n    session_index_for_child: {\n        description: 'Returns the session index expected at a child of the block.',\n        params: [],\n        type: 'SessionIndex'\n    },\n    validation_code: {\n        description: 'Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'ValidationCode'\n    },\n    validation_code_by_hash: {\n        description: 'Get the validation code from its hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'ValidationCodeHash'\n            }\n        ],\n        type: 'Option<ValidationCode>'\n    },\n    validator_groups: {\n        description: 'Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on',\n        params: [],\n        type: '(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)'\n    },\n    validators: {\n        description: 'Get the current validators.',\n        params: [],\n        type: 'Vec<ValidatorId>'\n    }\n};\nconst PH_V2_TO_V3 = {\n    pvfs_require_precheck: {\n        description: 'Returns code hashes of PVFs that require pre-checking by validators in the active set.',\n        params: [],\n        type: 'Vec<ValidationCodeHash>'\n    },\n    session_info: {\n        description: 'Get the session info for the given session, if stored.',\n        params: [\n            {\n                name: 'index',\n                type: 'SessionIndex'\n            }\n        ],\n        type: 'Option<SessionInfo>'\n    },\n    submit_pvf_check_statement: {\n        description: 'Submits a PVF pre-checking statement into the transaction pool.',\n        params: [\n            {\n                name: 'stmt',\n                type: 'PvfCheckStatement'\n            },\n            {\n                name: 'signature',\n                type: 'ValidatorSignature'\n            }\n        ],\n        type: 'Null'\n    },\n    validation_code_hash: {\n        description: 'Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'Option<ValidationCodeHash>'\n    }\n};\nconst PH_V3 = {\n    disputes: {\n        description: 'Returns all onchain disputes.',\n        params: [],\n        type: 'Vec<(SessionIndex, CandidateHash, DisputeState)>'\n    }\n};\nconst PH_V4 = {\n    session_executor_params: {\n        description: 'Returns execution parameters for the session.',\n        params: [\n            {\n                name: 'sessionIndex',\n                type: 'SessionIndex'\n            }\n        ],\n        type: 'Option<ExecutorParams>'\n    }\n};\nexport const runtime = {\n    ParachainHost: [\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4\n            },\n            version: 4\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3\n            },\n            version: 2\n        },\n        {\n            methods: {\n                session_info: {\n                    description: 'Get the session info for the given session, if stored.',\n                    params: [\n                        {\n                            name: 'index',\n                            type: 'SessionIndex'\n                        }\n                    ],\n                    type: 'Option<OldV1SessionInfo>'\n                },\n                ...PH_V1_TO_V2\n            },\n            version: 1\n        }\n    ]\n};\n", "/* eslint-disable sort-keys */\nconst SlotRange10 = {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n};\nconst SlotRange = {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']\n};\nconst oldTypes = {\n    Bidder: {\n        _enum: {\n            New: 'NewBidder',\n            Existing: 'ParaId'\n        }\n    },\n    IncomingParachain: {\n        _enum: {\n            Unset: 'NewBidder',\n            Fixed: 'IncomingParachainFixed',\n            Deploy: 'IncomingParachainDeploy'\n        }\n    },\n    IncomingParachainDeploy: {\n        code: 'ValidationCode',\n        initialHeadData: 'HeadData'\n    },\n    IncomingParachainFixed: {\n        codeHash: 'Hash',\n        codeSize: 'u32',\n        initialHeadData: 'HeadData'\n    },\n    NewBidder: {\n        who: 'AccountId',\n        sub: 'SubId'\n    },\n    SubId: 'u32'\n};\nexport default {\n    ...oldTypes,\n    AuctionIndex: 'u32',\n    LeasePeriod: 'BlockNumber',\n    LeasePeriodOf: 'BlockNumber',\n    SlotRange10,\n    SlotRange,\n    WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,\n    WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,\n    WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',\n    WinnersData10: 'Vec<WinnersDataTuple10>',\n    WinnersData: 'Vec<WinnersDataTuple>',\n    WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',\n    WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'\n};\n", "export default {\n    rpc: {},\n    types: {\n        Approvals: '[bool; 4]'\n    }\n};\n", "export default {\n    rpc: {},\n    types: {\n        AccountStatus: {\n            validity: 'AccountValidity',\n            freeBalance: 'Balance',\n            lockedBalance: 'Balance',\n            signature: 'Vec<u8>',\n            vat: 'Permill'\n        },\n        AccountValidity: {\n            _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']\n        }\n    }\n};\n", "import { mapXcmTypes } from '@polkadot/types-create';\nimport { v0 } from './v0.js';\nimport { v1 } from './v1.js';\nimport { v2 } from './v2.js';\nconst XCM_LATEST = 'V2';\nconst xcm = {\n    XcmOrigin: {\n        _enum: {\n            Xcm: 'MultiLocation'\n        }\n    },\n    XcmpMessageFormat: {\n        _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n    },\n    XcmAssetId: {\n        _enum: {\n            Concrete: 'MultiLocation',\n            Abstract: 'Bytes'\n        }\n    },\n    InboundStatus: {\n        _enum: ['Ok', 'Suspended']\n    },\n    OutboundStatus: {\n        _enum: ['Ok', 'Suspended']\n    },\n    MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n    BodyId: {\n        _enum: {\n            Unit: 'Null',\n            Named: 'Vec<u8>',\n            Index: 'Compact<u32>',\n            Executive: 'Null',\n            Technical: 'Null',\n            Legislative: 'Null',\n            Judicial: 'Null'\n        }\n    },\n    BodyPart: {\n        _enum: {\n            Voice: 'Null',\n            Members: 'Compact<u32>',\n            Fraction: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            },\n            AtLeastProportion: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            },\n            MoreThanProportion: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            }\n        }\n    },\n    InteriorMultiLocation: 'Junctions',\n    NetworkId: {\n        _enum: {\n            Any: 'Null',\n            Named: 'Vec<u8>',\n            Polkadot: 'Null',\n            Kusama: 'Null'\n        }\n    }\n};\nexport default {\n    rpc: {},\n    types: {\n        ...location,\n        ...xcm,\n        ...v0,\n        ...v1,\n        ...v2,\n        ...mapXcmTypes(XCM_LATEST),\n        DoubleEncodedCall: {\n            encoded: 'Vec<u8>'\n        },\n        XcmOriginKind: {\n            _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n        },\n        Outcome: {\n            _enum: {\n                Complete: 'Weight',\n                Incomplete: '(Weight, XcmErrorV0)',\n                Error: 'XcmErrorV0'\n            }\n        },\n        QueryId: 'u64',\n        QueryStatus: {\n            _enum: {\n                Pending: {\n                    responder: 'VersionedMultiLocation',\n                    maybeNotify: 'Option<(u8, u8)>',\n                    timeout: 'BlockNumber'\n                },\n                Ready: {\n                    response: 'VersionedResponse',\n                    at: 'BlockNumber'\n                }\n            }\n        },\n        QueueConfigData: {\n            suspendThreshold: 'u32',\n            dropThreshold: 'u32',\n            resumeThreshold: 'u32',\n            thresholdWeight: 'Weight',\n            weightRestrictDecay: 'Weight'\n        },\n        VersionMigrationStage: {\n            _enum: {\n                MigrateSupportedVersion: 'Null',\n                MigrateVersionNotifiers: 'Null',\n                NotifyCurrentTargets: 'Option<Bytes>',\n                MigrateAndNotifyOldTargets: 'Null'\n            }\n        },\n        VersionedMultiAsset: {\n            _enum: {\n                V0: 'MultiAssetV0',\n                V1: 'MultiAssetV1',\n                V2: 'MultiAssetV2'\n            }\n        },\n        VersionedMultiAssets: {\n            _enum: {\n                V0: 'Vec<MultiAssetV0>',\n                V1: 'MultiAssetsV1',\n                V2: 'MultiAssetsV2'\n            }\n        },\n        VersionedMultiLocation: {\n            _enum: {\n                V0: 'MultiLocationV0',\n                V1: 'MultiLocationV1',\n                V2: 'MultiLocationV2'\n            }\n        },\n        VersionedResponse: {\n            V0: 'ResponseV0',\n            V1: 'ResponseV1',\n            V2: 'ResponseV2'\n        },\n        VersionedXcm: {\n            _enum: {\n                V0: 'XcmV0',\n                V1: 'XcmV1',\n                V2: 'XcmV2'\n            }\n        },\n        XcmVersion: 'u32'\n    }\n};\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nexport default [codecInfo];\n", "export { packageInfo } from './packageInfo.js';\nexport { TypeDefInfo } from './types/index.js';\nexport * from './exports.js';\n", "import './augmentRegistry.js';\nexport * from './lookup.js';\nexport * from './types.js';\n", "import '@polkadot/types-codec/types/registry';\n", "export {};\n", "export {};\n", "export var TypeDefInfo;\n(function (TypeDefInfo) {\n    TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n    TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n    TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n    TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 3] = \"DoNotConstruct\";\n    TypeDefInfo[TypeDefInfo[\"Enum\"] = 4] = \"Enum\";\n    TypeDefInfo[TypeDefInfo[\"HashMap\"] = 5] = \"HashMap\";\n    TypeDefInfo[TypeDefInfo[\"Int\"] = 6] = \"Int\";\n    TypeDefInfo[TypeDefInfo[\"Linkage\"] = 7] = \"Linkage\";\n    TypeDefInfo[TypeDefInfo[\"Null\"] = 8] = \"Null\";\n    TypeDefInfo[TypeDefInfo[\"Option\"] = 9] = \"Option\";\n    TypeDefInfo[TypeDefInfo[\"Plain\"] = 10] = \"Plain\";\n    TypeDefInfo[TypeDefInfo[\"Range\"] = 11] = \"Range\";\n    TypeDefInfo[TypeDefInfo[\"RangeInclusive\"] = 12] = \"RangeInclusive\";\n    TypeDefInfo[TypeDefInfo[\"Result\"] = 13] = \"Result\";\n    TypeDefInfo[TypeDefInfo[\"Set\"] = 14] = \"Set\";\n    TypeDefInfo[TypeDefInfo[\"Si\"] = 15] = \"Si\";\n    TypeDefInfo[TypeDefInfo[\"Struct\"] = 16] = \"Struct\";\n    TypeDefInfo[TypeDefInfo[\"Tuple\"] = 17] = \"Tuple\";\n    TypeDefInfo[TypeDefInfo[\"UInt\"] = 18] = \"UInt\";\n    TypeDefInfo[TypeDefInfo[\"Vec\"] = 19] = \"Vec\";\n    TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 20] = \"VecFixed\";\n    TypeDefInfo[TypeDefInfo[\"WrapperKeepOpaque\"] = 21] = \"WrapperKeepOpaque\";\n    TypeDefInfo[TypeDefInfo[\"WrapperOpaque\"] = 22] = \"WrapperOpaque\";\n})(TypeDefInfo || (TypeDefInfo = {}));\n", "export * from './create/index.js';\nexport * from './util/index.js';\n", "export * from './class.js';\nexport * from './type.js';\n", "import { BTreeMap, BTreeSet, Bytes, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Null, Option, Range, RangeInclusive, Result, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\nimport { isNumber, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nimport { getTypeDef } from '../util/getTypeDef.js';\nfunction getTypeDefType({ lookupName, type }) {\n    return lookupName || type;\n}\nfunction getSubDefArray(value) {\n    if (!Array.isArray(value.sub)) {\n        throw new Error(`Expected subtype as TypeDef[] in ${stringify(value)}`);\n    }\n    return value.sub;\n}\nfunction getSubDef(value) {\n    if (!value.sub || Array.isArray(value.sub)) {\n        throw new Error(`Expected subtype as TypeDef in ${stringify(value)}`);\n    }\n    return value.sub;\n}\nfunction getSubType(value) {\n    return getTypeDefType(getSubDef(value));\n}\nfunction getTypeClassMap(value) {\n    const subs = getSubDefArray(value);\n    const map = {};\n    for (let i = 0, count = subs.length; i < count; i++) {\n        map[subs[i].name] = getTypeDefType(subs[i]);\n    }\n    return map;\n}\nfunction getTypeClassArray(value) {\n    return getSubDefArray(value).map(getTypeDefType);\n}\nfunction createInt(Clazz, { displayName, length }) {\n    if (!isNumber(length)) {\n        throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);\n    }\n    return Clazz.with(length, displayName);\n}\nfunction createHashMap(Clazz, value) {\n    const [keyType, valueType] = getTypeClassArray(value);\n    return Clazz.with(keyType, valueType);\n}\nfunction createWithSub(Clazz, value) {\n    return Clazz.with(getSubType(value));\n}\nconst infoMapping = {\n    [TypeDefInfo.BTreeMap]: (_registry, value) => createHashMap(BTreeMap, value),\n    [TypeDefInfo.BTreeSet]: (_registry, value) => createWithSub(BTreeSet, value),\n    [TypeDefInfo.Compact]: (_registry, value) => createWithSub(Compact, value),\n    [TypeDefInfo.DoNotConstruct]: (_registry, value) => DoNotConstruct.with(value.displayName || value.type),\n    [TypeDefInfo.Enum]: (_registry, value) => {\n        const subs = getSubDefArray(value);\n        return Enum.with(subs.every(({ type }) => type === 'Null')\n            ? subs.reduce((out, { index, name }, count) => {\n                out[name] = index || count;\n                return out;\n            }, {})\n            : getTypeClassMap(value));\n    },\n    [TypeDefInfo.HashMap]: (_registry, value) => createHashMap(HashMap, value),\n    [TypeDefInfo.Int]: (_registry, value) => createInt(Int, value),\n    // We have circular deps between Linkage & Struct\n    [TypeDefInfo.Linkage]: (_registry, value) => {\n        const type = `Option<${getSubType(value)}>`;\n        // eslint-disable-next-line sort-keys\n        const Clazz = Struct.with({ previous: type, next: type });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        Clazz.prototype.toRawType = function () {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n            return `Linkage<${this.next.toRawType(true)}>`;\n        };\n        return Clazz;\n    },\n    [TypeDefInfo.Null]: (_registry, _value) => Null,\n    [TypeDefInfo.Option]: (_registry, value) => {\n        if (!value.sub || Array.isArray(value.sub)) {\n            throw new Error('Expected type information for Option');\n        }\n        // NOTE This is opt-in (unhandled), not by default\n        // if (value.sub.type === 'bool') {\n        //   return OptionBool;\n        // }\n        return createWithSub(Option, value);\n    },\n    [TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),\n    [TypeDefInfo.Range]: (_registry, value) => createWithSub(Range, value),\n    [TypeDefInfo.RangeInclusive]: (_registry, value) => createWithSub(RangeInclusive, value),\n    [TypeDefInfo.Result]: (_registry, value) => {\n        const [Ok, Err] = getTypeClassArray(value);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return Result.with({ Err, Ok });\n    },\n    [TypeDefInfo.Set]: (_registry, value) => CodecSet.with(getSubDefArray(value).reduce((result, { index, name }) => {\n        result[name] = index;\n        return result;\n    }, {}), value.length),\n    [TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),\n    [TypeDefInfo.Struct]: (_registry, value) => Struct.with(getTypeClassMap(value), value.alias),\n    [TypeDefInfo.Tuple]: (_registry, value) => Tuple.with(getTypeClassArray(value)),\n    [TypeDefInfo.UInt]: (_registry, value) => createInt(UInt, value),\n    [TypeDefInfo.Vec]: (_registry, { sub }) => {\n        if (!sub || Array.isArray(sub)) {\n            throw new Error('Expected type information for vector');\n        }\n        return (sub.type === 'u8'\n            ? Bytes\n            : Vec.with(getTypeDefType(sub)));\n    },\n    [TypeDefInfo.VecFixed]: (_registry, { displayName, length, sub }) => {\n        if (!isNumber(length) || !sub || Array.isArray(sub)) {\n            throw new Error('Expected length & type information for fixed vector');\n        }\n        return (sub.type === 'u8'\n            ? U8aFixed.with((length * 8), displayName)\n            : VecFixed.with(getTypeDefType(sub), length));\n    },\n    [TypeDefInfo.WrapperKeepOpaque]: (_registry, value) => createWithSub(WrapperKeepOpaque, value),\n    [TypeDefInfo.WrapperOpaque]: (_registry, value) => createWithSub(WrapperOpaque, value)\n};\nexport function constructTypeClass(registry, typeDef) {\n    try {\n        const Type = infoMapping[typeDef.info](registry, typeDef);\n        if (!Type) {\n            throw new Error('No class created');\n        }\n        // don't clobber any existing\n        if (!Type.__fallbackType && typeDef.fallbackType) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore ...this is the only place we we actually assign this...\n            Type.__fallbackType = typeDef.fallbackType;\n        }\n        return Type;\n    }\n    catch (error) {\n        throw new Error(`Unable to construct class from ${stringify(typeDef)}: ${error.message}`);\n    }\n}\nexport function getTypeClass(registry, typeDef) {\n    return registry.getUnsafe(typeDef.type, false, typeDef);\n}\nexport function createClassUnsafe(registry, type) {\n    return (\n    // just retrieve via name, no creation via typeDef\n    registry.getUnsafe(type) ||\n        // we don't have an existing type, create the class via typeDef\n        getTypeClass(registry, registry.isLookupType(type)\n            ? registry.lookup.getTypeDef(type)\n            : getTypeDef(type)));\n}\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "export default [];\n", "export { packageInfo } from './packageInfo.js';\nexport * from './abstract/index.js';\nexport * from './base/index.js';\nexport * from './extended/index.js';\nexport * from './native/index.js';\nexport * from './primitive/index.js';\nexport * from './utils/index.js';\n", "export { AbstractArray } from './Array.js';\nexport { AbstractBase } from './Base.js';\nexport { AbstractInt } from './Int.js';\n", "import { compactToU8a, u8aConcatStrict, u8aToHex } from '@polkadot/util';\nimport { compareArray } from '../utils/compareArray.js';\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\nexport class AbstractArray extends Array {\n    /**\n     * @description This ensures that operators such as clice, filter, map, etc. return\n     * new Array instances (without this we need to apply overrides)\n     */\n    static get [Symbol.species]() {\n        return Array;\n    }\n    constructor(registry, length) {\n        super(length);\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        // We need to loop through all entries since they may have a variable length themselves,\n        // e.g. when a Vec or Compact is contained withing, it has a variable length based on data\n        const count = this.length;\n        let total = compactToU8a(count).length;\n        for (let i = 0; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * @description The length of the value\n     */\n    get length() {\n        // only included here since we ignore inherited docs\n        return super.length;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareArray(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner(),\n            outer: [compactToU8a(this.length)]\n        };\n    }\n    /**\n     * @internal\n     * @description Internal per-item inspection of internal values\n     */\n    inspectInner() {\n        const count = this.length;\n        const inner = new Array(count);\n        for (let i = 0; i < count; i++) {\n            inner[i] = this[i].inspect();\n        }\n        return inner;\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n    toArray() {\n        return Array.from(this);\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i] && this[i].toHuman(isExtended);\n        }\n        return result;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            // We actually log inside the U8a decoding and use JSON.stringify(...), which\n            // means that the Vec may be partially populated (same applies to toHuman, same check)\n            result[i] = this[i] && this[i].toJSON();\n        }\n        return result;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i] && this[i].toPrimitive();\n        }\n        return result;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i].toString();\n        }\n        return `[${result.join(', ')}]`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.toU8aInner();\n        return isBare\n            ? u8aConcatStrict(encoded)\n            : u8aConcatStrict([compactToU8a(this.length), ...encoded]);\n    }\n    /**\n     * @internal\n     * @description Internal per-item SCALE encoding of contained values\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8aInner(isBare) {\n        const count = this.length;\n        const encoded = new Array(count);\n        for (let i = 0; i < count; i++) {\n            encoded[i] = this[i].toU8a(isBare);\n        }\n        return encoded;\n    }\n}\n", "import { isUndefined } from '@polkadot/util';\nimport { hasEq } from './util.js';\nexport function compareArray(a, b) {\n    if (Array.isArray(b)) {\n        return (a.length === b.length) && isUndefined(a.find((v, index) => hasEq(v)\n            ? !v.eq(b[index])\n            : v !== b[index]));\n    }\n    return false;\n}\n", "import { isFunction } from '@polkadot/util';\nexport function hasEq(o) {\n    return isFunction(o.eq);\n}\n", "/**\n * @name Base\n * @description A type extends the Base class, when it holds a value\n */\nexport class AbstractBase {\n    constructor(registry, value, initialU8aLength) {\n        this.initialU8aLength = initialU8aLength;\n        this.__internal__raw = value;\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description returns the inner (wrapped value)\n     */\n    get inner() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.__internal__raw.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return this.__internal__raw.inspect();\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex(isLe) {\n        return this.__internal__raw.toHex(isLe);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.__internal__raw.toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.__internal__raw.toPrimitive();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.__internal__raw.toU8a(isBare);\n    }\n    /**\n     * @description Returns the inner wrapped value (equivalent to valueOf)\n     */\n    unwrap() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Returns the inner wrapped value\n     */\n    valueOf() {\n        return this.__internal__raw;\n    }\n}\n", "import { BN, BN_BILLION, BN_HUNDRED, BN_MILLION, BN_QUINTILL, bnToBn, bnToHex, bnToU8a, formatBalance, formatNumber, hexToBn, isBigInt, isBn, isFunction, isHex, isNumber, isObject, isString, isU8a, u8aToBn, u8aToNumber } from '@polkadot/util';\nexport const DEFAULT_UINT_BITS = 64;\nconst MAX_NUMBER_BITS = 52;\nconst MUL_P = new BN(10000);\nconst FORMATTERS = [\n    ['Perquintill', BN_QUINTILL],\n    ['Perbill', BN_BILLION],\n    ['Permill', BN_MILLION],\n    ['Percent', BN_HUNDRED]\n];\nfunction isToBn(value) {\n    return isFunction(value.toBn);\n}\nfunction toPercentage(value, divisor) {\n    return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;\n}\n/** @internal */\nfunction decodeAbstractInt(value, isNegative) {\n    if (isNumber(value)) {\n        if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {\n            throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');\n        }\n        return value;\n    }\n    else if (isString(value)) {\n        if (isHex(value, -1, true)) {\n            return hexToBn(value, { isLe: false, isNegative }).toString();\n        }\n        if (value.includes('.') || value.includes(',') || value.includes('e')) {\n            throw new Error('String should not contain decimal points or scientific notation');\n        }\n        return value;\n    }\n    else if (isBn(value) || isBigInt(value)) {\n        return value.toString();\n    }\n    else if (isObject(value)) {\n        if (isToBn(value)) {\n            return value.toBn().toString();\n        }\n        // Allow the construction from an object with a single top-level key. This means that\n        // single key objects can be treated equivalently to numbers, assuming they meet the\n        // specific requirements. (This is useful in Weights 1.5 where Objects are compact)\n        const keys = Object.keys(value);\n        if (keys.length !== 1) {\n            throw new Error('Unable to construct number from multi-key object');\n        }\n        return decodeAbstractInt(value[keys[0]], isNegative);\n    }\n    else if (!value) {\n        return 0;\n    }\n    throw new Error(`Unable to create BN from unknown type ${typeof value}`);\n}\n/**\n * @name AbstractInt\n * @ignore\n * @noInheritDoc\n */\nexport class AbstractInt extends BN {\n    constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {\n        // Construct via a string/number, which will be passed in the BN constructor.\n        // It would be ideal to actually return a BN, but there is an issue:\n        // https://github.com/indutny/bn.js/issues/206\n        super(\n        // shortcut isU8a as used in SCALE decoding\n        isU8a(value)\n            ? bitLength <= 48\n                ? u8aToNumber(value.subarray(0, bitLength / 8), { isNegative: isSigned })\n                : u8aToBn(value.subarray(0, bitLength / 8), { isLe: true, isNegative: isSigned }).toString()\n            : decodeAbstractInt(value, isSigned));\n        this.registry = registry;\n        this.__internal__bitLength = bitLength;\n        this.encodedLength = this.__internal__bitLength / 8;\n        this.initialU8aLength = this.__internal__bitLength / 8;\n        this.isUnsigned = !isSigned;\n        const isNegative = this.isNeg();\n        const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);\n        if (isNegative && !isSigned) {\n            throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);\n        }\n        else if (super.bitLength() > maxBits) {\n            throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);\n        }\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is a zero value (align elsewhere)\n     */\n    get isEmpty() {\n        return this.isZero();\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.__internal__bitLength;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    eq(other) {\n        // Here we are actually overriding the built-in .eq to take care of both\n        // number and BN inputs (no `.eqn` needed) - numbers will be converted\n        return super.eq(isHex(other)\n            ? hexToBn(other.toString(), { isLe: false, isNegative: !this.isUnsigned })\n            : bnToBn(other));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description True if this value is the max of the type\n     */\n    isMax() {\n        const u8a = this.toU8a().filter((b) => b === 0xff);\n        return u8a.length === (this.__internal__bitLength / 8);\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    /**\n     * @description Returns the BN representation of the number. (Compatibility)\n     */\n    toBn() {\n        return this;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isLe = false) {\n        // For display/JSON, this is BE, for compare, use isLe\n        return bnToHex(this, {\n            bitLength: this.bitLength(),\n            isLe,\n            isNegative: !this.isUnsigned\n        });\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(_isExpanded) {\n        const rawType = this.toRawType();\n        if (rawType === 'Balance') {\n            return this.isMax()\n                ? 'everything'\n                // FIXME In the case of multiples we need some way of detecting which instance this belongs\n                // to. as it stands we will always format (incorrectly) against the first token defined\n                : formatBalance(this, { decimals: this.registry.chainDecimals[0], withSi: true, withUnit: this.registry.chainTokens[0] });\n        }\n        const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];\n        return divisor\n            ? toPercentage(this, divisor)\n            : formatNumber(this);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON(onlyHex = false) {\n        // FIXME this return type should by string | number, however BN returns string\n        // Options here are\n        //   - super.bitLength() - the actual used bits, use hex when close to MAX_SAFE_INTEGER\n        //   - this.__internal__bitLength - the max used bits, use hex when larger than native Rust type\n        return onlyHex || (this.__internal__bitLength > 128) || (super.bitLength() > MAX_NUMBER_BITS)\n            ? this.toHex()\n            : this.toNumber();\n    }\n    /**\n     * @description Returns the value in a primitive form, either number when <= 52 bits, or string otherwise\n     */\n    toPrimitive() {\n        return super.bitLength() > MAX_NUMBER_BITS\n            ? this.toString()\n            : this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        // NOTE In the case of balances, which have a special meaning on the UI\n        // and can be interpreted differently, return a specific value for it so\n        // underlying it always matches (no matter which length it actually is)\n        return this instanceof this.registry.createClassUnsafe('Balance')\n            ? 'Balance'\n            : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     * @param base The base to use for the conversion\n     */\n    toString(base) {\n        // only included here since we do not inherit docs\n        return super.toString(base);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this, {\n            bitLength: this.bitLength(),\n            isLe: true,\n            isNegative: !this.isUnsigned\n        });\n    }\n}\n", "export { Compact } from './Compact.js';\nexport { DoNotConstruct } from './DoNotConstruct.js';\nexport { Enum } from './Enum.js';\nexport { Int } from './Int.js';\nexport { Null } from './Null.js';\nexport { Option } from './Option.js';\nexport { Result } from './Result.js';\nexport { Tuple } from './Tuple.js';\nexport { UInt } from './UInt.js';\nexport { Vec } from './Vec.js';\nexport { VecAny } from './VecAny.js';\nexport { VecFixed } from './VecFixed.js';\n", "import { compactFromU8a, compactFromU8aLim, compactToU8a, identity, isU8a } from '@polkadot/util';\nimport { typeToConstructor } from '../utils/index.js';\nfunction decodeCompact(registry, Type, value) {\n    if (isU8a(value)) {\n        const [decodedLength, bn] = (value[0] & 0b11) < 0b11\n            ? compactFromU8aLim(value)\n            : compactFromU8a(value);\n        return [new Type(registry, bn), decodedLength];\n    }\n    else if (value instanceof Compact) {\n        const raw = value.unwrap();\n        return raw instanceof Type\n            ? [raw, 0]\n            : [new Type(registry, raw), 0];\n    }\n    else if (value instanceof Type) {\n        return [value, 0];\n    }\n    return [new Type(registry, value), 0];\n}\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\nexport class Compact {\n    constructor(registry, Type, value = 0, { definition, setDefinition = identity } = {}) {\n        this.registry = registry;\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        const [raw, decodedLength] = decodeCompact(registry, this.__internal__Type, value);\n        this.initialU8aLength = decodedLength;\n        this.__internal__raw = raw;\n    }\n    static with(Type) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends Compact {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.__internal__raw.bitLength();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.__internal__raw.eq(other instanceof Compact\n            ? other.__internal__raw\n            : other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return this.__internal__raw.toBigInt();\n    }\n    /**\n     * @description Returns the BN representation of the number\n     */\n    toBn() {\n        return this.__internal__raw.toBn();\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex(isLe) {\n        return this.__internal__raw.toHex(isLe);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.__internal__raw.toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Returns the number representation for the value\n     */\n    toNumber() {\n        return this.__internal__raw.toNumber();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.__internal__raw.toPrimitive();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Compact<${this.registry.getClassName(this.__internal__Type) || this.__internal__raw.toRawType()}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return compactToU8a(this.__internal__raw.toBn());\n    }\n    /**\n     * @description Returns the embedded [[UInt]] or [[Moment]] value\n     */\n    unwrap() {\n        return this.__internal__raw;\n    }\n}\n", "export { compareArray } from './compareArray.js';\nexport { compareMap } from './compareMap.js';\nexport { compareSet } from './compareSet.js';\nexport { decodeU8a, decodeU8aStruct, decodeU8aVec } from './decodeU8a.js';\nexport { sanitize } from './sanitize.js';\nexport { sortAsc, sortMap, sortSet } from './sortValues.js';\nexport { mapToTypeMap, typesToConstructors, typeToConstructor } from './toConstructors.js';\nexport { typesToMap } from './typesToMap.js';\n", "import { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from './util.js';\nfunction hasMismatch(a, b) {\n    return isUndefined(a) || (hasEq(a)\n        ? !a.eq(b)\n        : a !== b);\n}\nfunction notEntry(value) {\n    return !Array.isArray(value) || value.length !== 2;\n}\nfunction compareMapArray(a, b) {\n    // equal number of entries and each entry in the array should match\n    return (a.size === b.length) && !b.some((e) => notEntry(e) ||\n        hasMismatch(a.get(e[0]), e[1]));\n}\nexport function compareMap(a, b) {\n    if (Array.isArray(b)) {\n        return compareMapArray(a, b);\n    }\n    else if (b instanceof Map) {\n        return compareMapArray(a, [...b.entries()]);\n    }\n    else if (isObject(b)) {\n        return compareMapArray(a, Object.entries(b));\n    }\n    return false;\n}\n", "import { isObject } from '@polkadot/util';\nfunction compareSetArray(a, b) {\n    // equal number of entries and each entry in the array should match\n    return (a.size === b.length) && !b.some((e) => !a.has(e));\n}\nexport function compareSet(a, b) {\n    if (Array.isArray(b)) {\n        return compareSetArray(a, b);\n    }\n    else if (b instanceof Set) {\n        return compareSetArray(a, [...b.values()]);\n    }\n    else if (isObject(b)) {\n        return compareSetArray(a, Object.values(b));\n    }\n    return false;\n}\n", "import { u8aToHex } from '@polkadot/util';\n/** @internal */\nfunction formatFailure(registry, fn, _result, { message }, u8a, i, count, Type, key) {\n    let type = '';\n    try {\n        type = `: ${new Type(registry).toRawType()}`;\n    }\n    catch {\n        // ignore\n    }\n    // This is extra debugging info (we most-probably want this in in some way, shape or form,\n    // but at this point not quite sure how to include and format it (it can be quite massive)\n    // console.error(JSON.stringify(result, null, 2));\n    return `${fn}: failed at ${u8aToHex(u8a.subarray(0, 16))}…${key ? ` on ${key}` : ''} (index ${i + 1}/${count})${type}:: ${message}`;\n}\n/**\n * @internal\n *\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param result - The result array (will be returned with values pushed)\n * @param types - The array of CodecClass to decode the U8a against.\n */\nexport function decodeU8a(registry, result, u8a, [Types, keys]) {\n    const count = result.length;\n    let offset = 0;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Types[i](registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = value;\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8a', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n    }\n    return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\nexport function decodeU8aStruct(registry, result, u8a, [Types, keys]) {\n    const count = result.length;\n    let offset = 0;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Types[i](registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = [keys[i], value];\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8aStruct', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n    }\n    return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\nexport function decodeU8aVec(registry, result, u8a, startAt, Type) {\n    const count = result.length;\n    let offset = startAt;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Type(registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = value;\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8aVec', result, error, u8a.subarray(offset), i, count, Type));\n    }\n    return [offset, offset - startAt];\n}\n", "const BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];\nconst ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Opaque', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);\nconst BOX_PRECEDING = ['<', '(', '[', '\"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple\nconst mappings = [\n    // alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport\n    alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false),\n    alias('VecDeque<', 'Vec<', false),\n    // <T::Balance as HasCompact>\n    cleanupCompact(),\n    // Change BoundedVec<Type, Size> to Vec<Type>\n    removeExtensions('Bounded', true),\n    // Change WeakVec<Type> to Vec<Type>\n    removeExtensions('Weak', false),\n    // Remove all the trait prefixes\n    removeTraits(),\n    // remove PairOf<T> -> (T, T)\n    removePairOf(),\n    // remove boxing, `Box<Proposal>` -> `Proposal`\n    removeWrap('Box<'),\n    // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`\n    removeGenerics(),\n    // alias String -> Text (compat with jsonrpc methods)\n    alias('String', 'Text'),\n    // alias Vec<u8> -> Bytes\n    alias('Vec<u8>', 'Bytes'),\n    alias('&\\\\[u8\\\\]', 'Bytes'),\n    alias(\"&'static\\\\[u8\\\\]\", 'Bytes'),\n    // alias RawAddress -> Address\n    alias('RawAddress', 'Address'),\n    // lookups, mapped to Address/AccountId as appropriate in runtime\n    alias('Lookup::Source', 'LookupSource'),\n    alias('Lookup::Target', 'LookupTarget'),\n    // HACK duplication between contracts & primitives, however contracts prefixed with exec\n    alias('exec::StorageKey', 'ContractStorageKey'),\n    // flattens tuples with one value, `(AccountId)` -> `AccountId`\n    flattenSingleTuple(),\n    // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal\n    removeColons(),\n    // remove all trailing spaces - this should always be the last\n    trim()\n];\nexport function trim() {\n    return (value) => value.trim();\n}\nexport function findClosing(value, start) {\n    let depth = 0;\n    for (let i = start, count = value.length; i < count; i++) {\n        if (value[i] === '>') {\n            if (!depth) {\n                return i;\n            }\n            depth--;\n        }\n        else if (value[i] === '<') {\n            depth++;\n        }\n    }\n    throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);\n}\nexport function alias(src, dest, withChecks = true) {\n    const from = new RegExp(`(^${src}|${BOX_PRECEDING.map((box) => `\\\\${box}${src}`).join('|')})`, 'g');\n    const to = (src) => {\n        from.lastIndex = 0;\n        return withChecks && BOX_PRECEDING.includes(src[0])\n            ? `${src[0]}${dest}`\n            : dest;\n    };\n    return (value) => value.replace(from, to);\n}\nexport function cleanupCompact() {\n    return (value) => {\n        if (value.includes(' as HasCompact')) {\n            for (let i = 0, count = value.length; i < count; i++) {\n                if (value[i] === '<') {\n                    const end = findClosing(value, i + 1) - 14;\n                    if (value.substring(end, end + 14) === ' as HasCompact') {\n                        value = `Compact<${value.substring(i + 1, end)}>`;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n}\nexport function flattenSingleTuple() {\n    const from1 = /,\\)/g;\n    const from2 = /\\(([^,]+)\\)/;\n    return (value) => {\n        from1.lastIndex = 0;\n        return value\n            // tuples may have trailing commas, e.g. (u32, BlockNumber, )\n            .replace(from1, ')')\n            // change (u32) -> u32\n            .replace(from2, '$1');\n    };\n}\nfunction replaceTagWith(value, matcher, replacer) {\n    let index = -1;\n    while (true) {\n        index = value.indexOf(matcher, index + 1);\n        if (index === -1) {\n            return value;\n        }\n        const start = index + matcher.length;\n        const end = findClosing(value, start);\n        value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;\n    }\n}\nexport function removeExtensions(type, isSized) {\n    return (value) => {\n        for (let i = 0, count = BOUNDED.length; i < count; i++) {\n            const tag = BOUNDED[i];\n            value = replaceTagWith(value, `${type}${tag}<`, (v) => {\n                const parts = v\n                    .split(',')\n                    .map((s) => s.trim())\n                    .filter((s) => s);\n                if (isSized) {\n                    parts.pop();\n                }\n                return `${tag}<${parts.join(',')}>`;\n            });\n        }\n        return value;\n    };\n}\nexport function removeColons() {\n    return (value) => {\n        let index = 0;\n        while (index !== -1) {\n            index = value.indexOf('::');\n            if (index === 0) {\n                value = value.substring(2);\n            }\n            else if (index !== -1) {\n                let start = index;\n                while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {\n                    start--;\n                }\n                value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;\n            }\n        }\n        return value;\n    };\n}\nexport function removeGenerics() {\n    return (value) => {\n        for (let i = 0, count = value.length; i < count; i++) {\n            if (value[i] === '<') {\n                // check against the allowed wrappers, be it Vec<..>, Option<...> ...\n                const box = ALLOWED_BOXES.find((box) => {\n                    const start = i - box.length;\n                    return ((start >= 0 &&\n                        value.substring(start, i) === box) && (\n                    // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>\n                    start === 0 ||\n                        BOX_PRECEDING.includes(value[start - 1])));\n                });\n                // we have not found anything, unwrap generic innards\n                if (!box) {\n                    const end = findClosing(value, i + 1);\n                    value = `${value.substring(0, i)}${value.substring(end + 1)}`;\n                }\n            }\n        }\n        return value;\n    };\n}\nexport function removePairOf() {\n    const replacer = (v) => `(${v},${v})`;\n    return (value) => replaceTagWith(value, 'PairOf<', replacer);\n}\nexport function removeTraits() {\n    const from1 = /\\s/g;\n    const from2 = /(T|Self)::/g;\n    const from3 = /<(T|Self)asTrait>::/g;\n    const from4 = /<Tas[a-z]+::Trait>::/g;\n    const from5 = /<LookupasStaticLookup>/g;\n    const from6 = /::Type/g;\n    return (value) => {\n        from1.lastIndex = 0;\n        from2.lastIndex = 0;\n        from3.lastIndex = 0;\n        from4.lastIndex = 0;\n        from5.lastIndex = 0;\n        from6.lastIndex = 0;\n        return value\n            // remove all whitespaces\n            .replace(from1, '')\n            // anything `T::<type>` to end up as `<type>`\n            .replace(from2, '')\n            // replace `<T as Trait>::` (whitespaces were removed above)\n            .replace(from3, '')\n            // replace `<T as something::Trait>::` (whitespaces were removed above)\n            .replace(from4, '')\n            // replace <Lookup as StaticLookup>\n            .replace(from5, 'Lookup')\n            // replace `<...>::Type`\n            .replace(from6, '');\n    };\n}\nexport function removeWrap(check) {\n    const replacer = (v) => v;\n    return (value) => replaceTagWith(value, check, replacer);\n}\nconst sanitizeMap = new Map();\nexport function sanitize(value) {\n    const startValue = value.toString();\n    const memoized = sanitizeMap.get(startValue);\n    if (memoized) {\n        return memoized;\n    }\n    let result = startValue;\n    for (let i = 0, count = mappings.length; i < count; i++) {\n        result = mappings[i](result);\n    }\n    sanitizeMap.set(startValue, result);\n    return result;\n}\n", "import { bnToBn, isBigInt, isBn, isCodec, isNumber, stringify } from '@polkadot/util';\n/** @internal **/\nfunction isArrayLike(arg) {\n    return arg instanceof Uint8Array || Array.isArray(arg);\n}\n/** @internal **/\nfunction isEnum(arg) {\n    return isCodec(arg) && isNumber(arg.index) && isCodec(arg.value);\n}\n/** @internal */\nfunction isNumberLike(arg) {\n    return isNumber(arg) || isBn(arg) || isBigInt(arg);\n}\n/** @internal */\nfunction sortArray(a, b) {\n    // Vec, Tuple, Bytes etc.\n    let sortRes = 0;\n    const minLen = Math.min(a.length, b.length);\n    for (let i = 0; i < minLen; ++i) {\n        sortRes = sortAsc(a[i], b[i]);\n        if (sortRes !== 0) {\n            return sortRes;\n        }\n    }\n    return a.length - b.length;\n}\n/**\n* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)\n*/\nexport function sortAsc(a, b) {\n    if (isNumberLike(a) && isNumberLike(b)) {\n        return bnToBn(a).cmp(bnToBn(b));\n    }\n    else if (a instanceof Map && b instanceof Map) {\n        return sortAsc(Array.from(a.values()), Array.from(b.values()));\n    }\n    else if (isEnum(a) && isEnum(b)) {\n        return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);\n    }\n    else if (isArrayLike(a) && isArrayLike(b)) {\n        return sortArray(a, b);\n    }\n    else if (isCodec(a) && isCodec(b)) {\n        // Text, Bool etc.\n        return sortAsc(a.toU8a(true), b.toU8a(true));\n    }\n    throw new Error(`Attempting to sort unrecognized values: ${stringify(a)} (typeof ${typeof a}) <-> ${stringify(b)} (typeof ${typeof b})`);\n}\nexport function sortSet(set) {\n    return new Set(Array.from(set).sort(sortAsc));\n}\nexport function sortMap(map) {\n    return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));\n}\n", "/**\n * @internal\n * From a type string or class, return the associated type class\n */\nexport function typeToConstructor(registry, type) {\n    return typeof type === 'function'\n        ? type\n        : registry.createClassUnsafe(type);\n}\n/**\n * @internal\n * Takes an input array of types and returns the associated classes for it\n*/\nexport function typesToConstructors(registry, types) {\n    const count = types.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = typeToConstructor(registry, types[i]);\n    }\n    return result;\n}\n/**\n * @internal\n * Takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`\n */\nexport function mapToTypeMap(registry, input) {\n    const entries = Object.entries(input);\n    const count = entries.length;\n    const output = [new Array(count), new Array(count)];\n    for (let i = 0; i < count; i++) {\n        output[1][i] = entries[i][0];\n        output[0][i] = typeToConstructor(registry, entries[i][1]);\n    }\n    return output;\n}\n", "export function typesToMap(registry, [Types, keys]) {\n    const result = {};\n    for (let i = 0, count = keys.length; i < count; i++) {\n        result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();\n    }\n    return result;\n}\n", "/**\n * @name DoNotConstruct\n * @description\n * An unknown type that fails on construction with the type info\n */\nexport class DoNotConstruct {\n    constructor(registry, typeName = 'DoNotConstruct') {\n        this.registry = registry;\n        this.__internal__neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);\n        throw this.__internal__neverError;\n    }\n    static with(typeName) {\n        return class extends DoNotConstruct {\n            constructor(registry) {\n                super(registry, typeName);\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Checks if the value is an empty value (always true)\n     */\n    get isEmpty() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    eq() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    inspect() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toHex() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toHuman() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toJSON() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toPrimitive() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toRawType() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toString() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toU8a() {\n        throw this.__internal__neverError;\n    }\n}\n", "import { identity, isHex, isNumber, isObject, isString, isU8a, objectProperties, stringCamelCase, stringify, stringPascalCase, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { mapToTypeMap, typesToMap } from '../utils/index.js';\nimport { Null } from './Null.js';\nfunction isRustEnum(def) {\n    const defValues = Object.values(def);\n    if (defValues.some((v) => isNumber(v))) {\n        if (!defValues.every((v) => isNumber(v) && v >= 0 && v <= 255)) {\n            throw new Error('Invalid number-indexed enum definition');\n        }\n        return false;\n    }\n    return true;\n}\nfunction extractDef(registry, _def) {\n    const def = {};\n    let isBasic;\n    let isIndexed;\n    if (Array.isArray(_def)) {\n        for (let i = 0, count = _def.length; i < count; i++) {\n            def[_def[i]] = { Type: Null, index: i };\n        }\n        isBasic = true;\n        isIndexed = false;\n    }\n    else if (isRustEnum(_def)) {\n        const [Types, keys] = mapToTypeMap(registry, _def);\n        for (let i = 0, count = keys.length; i < count; i++) {\n            def[keys[i]] = { Type: Types[i], index: i };\n        }\n        isBasic = !Object.values(def).some(({ Type }) => Type !== Null);\n        isIndexed = false;\n    }\n    else {\n        const entries = Object.entries(_def);\n        for (let i = 0, count = entries.length; i < count; i++) {\n            const [key, index] = entries[i];\n            def[key] = { Type: Null, index };\n        }\n        isBasic = true;\n        isIndexed = true;\n    }\n    return {\n        def,\n        isBasic,\n        isIndexed\n    };\n}\nfunction getEntryType(def, checkIdx) {\n    const values = Object.values(def);\n    for (let i = 0; i < values.length; i++) {\n        const { Type, index } = values[i];\n        if (index === checkIdx) {\n            return Type;\n        }\n    }\n    throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);\n}\nfunction createFromU8a(registry, def, index, value) {\n    const Type = getEntryType(def, index);\n    return {\n        index,\n        value: new Type(registry, value)\n    };\n}\nfunction createFromValue(registry, def, index = 0, value) {\n    const Type = getEntryType(def, index);\n    return {\n        index,\n        value: value instanceof Type\n            ? value\n            : new Type(registry, value)\n    };\n}\nfunction decodeFromJSON(registry, def, key, value) {\n    // JSON comes in the form of { \"<type (camelCase)>\": \"<value for type>\" }, here we\n    // additionally force to lower to ensure forward compat\n    const keys = Object.keys(def).map((k) => k.toLowerCase());\n    const keyLower = key.toLowerCase();\n    const index = keys.indexOf(keyLower);\n    if (index === -1) {\n        throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);\n    }\n    try {\n        return createFromValue(registry, def, Object.values(def)[index].index, value);\n    }\n    catch (error) {\n        throw new Error(`Enum(${key}):: ${error.message}`);\n    }\n}\nfunction decodeEnum(registry, def, value, index) {\n    // NOTE We check the index path first, before looking at values - this allows treating\n    // the optional indexes before anything else, more-specific > less-specific\n    if (isNumber(index)) {\n        return createFromValue(registry, def, index, value);\n    }\n    else if (isU8a(value) || isHex(value)) {\n        const u8a = u8aToU8a(value);\n        // nested, we don't want to match isObject below\n        if (u8a.length) {\n            return createFromU8a(registry, def, u8a[0], u8a.subarray(1));\n        }\n    }\n    else if (value instanceof Enum) {\n        return createFromValue(registry, def, value.index, value.value);\n    }\n    else if (isNumber(value)) {\n        return createFromValue(registry, def, value);\n    }\n    else if (isString(value)) {\n        return decodeFromJSON(registry, def, value.toString());\n    }\n    else if (isObject(value)) {\n        const key = Object.keys(value)[0];\n        return decodeFromJSON(registry, def, key, value[key]);\n    }\n    // Worst-case scenario, return the first with default\n    return createFromValue(registry, def, Object.values(def)[0].index);\n}\n/**\n * @name Enum\n * @description\n * This implements an enum, that based on the value wraps a different type. It is effectively\n * an extension to enum where the value type is determined by the actual index.\n */\nexport class Enum {\n    constructor(registry, Types, value, index, { definition, setDefinition = identity } = {}) {\n        const { def, isBasic, isIndexed } = definition || setDefinition(extractDef(registry, Types));\n        // shortcut isU8a as used in SCALE decoding\n        const decoded = isU8a(value) && value.length && !isNumber(index)\n            ? createFromU8a(registry, def, value[0], value.subarray(1))\n            : decodeEnum(registry, def, value, index);\n        this.registry = registry;\n        this.__internal__def = def;\n        this.__internal__isBasic = isBasic;\n        this.__internal__isIndexed = isIndexed;\n        this.__internal__indexes = Object.values(def).map(({ index }) => index);\n        this.__internal__entryIndex = this.__internal__indexes.indexOf(decoded.index);\n        this.__internal__raw = decoded.value;\n        if (this.__internal__raw.initialU8aLength) {\n            this.initialU8aLength = 1 + this.__internal__raw.initialU8aLength;\n        }\n    }\n    static with(Types) {\n        var _a;\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return _a = class extends Enum {\n                constructor(registry, value, index) {\n                    super(registry, Types, value, index, { definition, setDefinition });\n                }\n            },\n            (() => {\n                const keys = Array.isArray(Types)\n                    ? Types\n                    : Object.keys(Types);\n                const count = keys.length;\n                const asKeys = new Array(count);\n                const isKeys = new Array(count);\n                for (let i = 0; i < count; i++) {\n                    const name = stringPascalCase(keys[i]);\n                    asKeys[i] = `as${name}`;\n                    isKeys[i] = `is${name}`;\n                }\n                objectProperties(_a.prototype, isKeys, (_, i, self) => self.type === keys[i]);\n                objectProperties(_a.prototype, asKeys, (k, i, self) => {\n                    if (self.type !== keys[i]) {\n                        throw new Error(`Cannot convert '${self.type}' via ${k}`);\n                    }\n                    return self.value;\n                });\n            })(),\n            _a;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1 + this.__internal__raw.encodedLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description The index of the enum value\n     */\n    get index() {\n        return this.__internal__indexes[this.__internal__entryIndex];\n    }\n    /**\n     * @description The value of the enum\n     */\n    get inner() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description true if this is a basic enum (no values)\n     */\n    get isBasic() {\n        return this.__internal__isBasic;\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Checks if the Enum points to a [[Null]] type\n     */\n    get isNone() {\n        return this.__internal__raw instanceof Null;\n    }\n    /**\n     * @description The available keys for this enum\n     */\n    get defIndexes() {\n        return this.__internal__indexes;\n    }\n    /**\n     * @description The available keys for this enum\n     */\n    get defKeys() {\n        return Object.keys(this.__internal__def);\n    }\n    /**\n     * @description The name of the type this enum value represents\n     */\n    get type() {\n        return this.defKeys[this.__internal__entryIndex];\n    }\n    /**\n     * @description The value of the enum\n     */\n    get value() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        // cater for the case where we only pass the enum index\n        if (isU8a(other)) {\n            return !this.toU8a().some((entry, index) => entry !== other[index]);\n        }\n        else if (isNumber(other)) {\n            return this.toNumber() === other;\n        }\n        else if (this.__internal__isBasic && isString(other)) {\n            return this.type === other;\n        }\n        else if (isHex(other)) {\n            return this.toHex() === other;\n        }\n        else if (other instanceof Enum) {\n            return this.index === other.index && this.value.eq(other.value);\n        }\n        else if (isObject(other)) {\n            return this.value.eq(other[this.type]);\n        }\n        // compare the actual wrapper value\n        return this.value.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        if (this.__internal__isBasic) {\n            return { outer: [new Uint8Array([this.index])] };\n        }\n        const { inner, outer = [] } = this.__internal__raw.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([this.index]), ...outer]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.__internal__isBasic || this.isNone\n            ? this.type\n            : { [this.type]: this.__internal__raw.toHuman(isExtended) };\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__isBasic\n            ? this.type\n            : { [stringCamelCase(this.type)]: this.__internal__raw.toJSON() };\n    }\n    /**\n     * @description Returns the number representation for the value\n     */\n    toNumber() {\n        return this.index;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.__internal__isBasic\n            ? this.type\n            : { [stringCamelCase(this.type)]: this.__internal__raw.toPrimitive() };\n    }\n    /**\n     * @description Returns a raw struct representation of the enum types\n     */\n    _toRawStruct() {\n        if (this.__internal__isBasic) {\n            return this.__internal__isIndexed\n                ? this.defKeys.reduce((out, key, index) => {\n                    out[key] = this.__internal__indexes[index];\n                    return out;\n                }, {})\n                : this.defKeys;\n        }\n        const entries = Object.entries(this.__internal__def);\n        return typesToMap(this.registry, entries.reduce((out, [key, { Type }], i) => {\n            out[0][i] = Type;\n            out[1][i] = key;\n            return out;\n        }, [new Array(entries.length), new Array(entries.length)]));\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify({ _enum: this._toRawStruct() });\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.isNone\n            ? this.type\n            : stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return isBare\n            ? this.__internal__raw.toU8a(isBare)\n            : u8aConcatStrict([\n                new Uint8Array([this.index]),\n                this.__internal__raw.toU8a(isBare)\n            ]);\n    }\n}\n", "import { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\nexport class Null {\n    constructor(registry) {\n        this.encodedLength = 0;\n        this.isEmpty = true;\n        this.initialU8aLength = 0;\n        this.registry = registry;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        throw new Error('.hash is not implemented on Null');\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return other instanceof Null || isNull(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {};\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return '0x';\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return null;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return null;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Null';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return '';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return new Uint8Array();\n    }\n}\n", "import { AbstractInt } from '../abstract/Int.js';\n/**\n * @name Int\n * @description\n * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nexport class Int extends AbstractInt {\n    constructor(registry, value = 0, bitLength) {\n        super(registry, value, bitLength, true);\n    }\n    static with(bitLength, typeName) {\n        return class extends Int {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n}\n", "import { identity, isCodec, isNull, isU8a, isUndefined, u8aToHex } from '@polkadot/util';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Null } from './Null.js';\nclass None extends Null {\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'None';\n    }\n}\n/** @internal */\nfunction decodeOption(registry, Type, value) {\n    if (value instanceof Type) {\n        // don't re-create, use as it (which also caters for derived types)\n        return value;\n    }\n    else if (value instanceof Option) {\n        if (value.value instanceof Type) {\n            // same instance, return it\n            return value.value;\n        }\n        else if (value.isNone) {\n            // internal is None, we are also none\n            return new None(registry);\n        }\n        // convert the actual value into known\n        return new Type(registry, value.value);\n    }\n    else if (isNull(value) || isUndefined(value) || value === '0x' || value instanceof None) {\n        // anyhting empty we pass as-is\n        return new None(registry);\n    }\n    else if (isU8a(value)) {\n        // the isU8a check happens last in the if-tree - since the wrapped value\n        // may be an instance of it, so Type and Option checks go in first\n        return !value.length || value[0] === 0\n            ? new None(registry)\n            : new Type(registry, value.subarray(1));\n    }\n    return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\nexport class Option {\n    constructor(registry, typeName, value, { definition, setDefinition = identity } = {}) {\n        const Type = definition || setDefinition(typeToConstructor(registry, typeName));\n        const decoded = isU8a(value) && value.length && !isCodec(value)\n            ? value[0] === 0\n                ? new None(registry)\n                : new Type(registry, value.subarray(1))\n            : decodeOption(registry, Type, value);\n        this.registry = registry;\n        this.__internal__Type = Type;\n        this.__internal__raw = decoded;\n        if (decoded?.initialU8aLength) {\n            this.initialU8aLength = 1 + decoded.initialU8aLength;\n        }\n    }\n    static with(Type) {\n        let definition;\n        const setDefinition = (d) => {\n            definition = d;\n            return d;\n        };\n        return class extends Option {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        // boolean byte (has value, doesn't have) along with wrapped length\n        return 1 + this.__internal__raw.encodedLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n    get isEmpty() {\n        return this.isNone;\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n    get isNone() {\n        return this.__internal__raw instanceof None;\n    }\n    /**\n     * @description Checks if the Option has a value\n     */\n    get isSome() {\n        return !this.isNone;\n    }\n    /**\n     * @description The actual value for the Option\n     */\n    get value() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (other instanceof Option) {\n            return (this.isSome === other.isSome) && this.value.eq(other.value);\n        }\n        return this.value.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        if (this.isNone) {\n            return { outer: [new Uint8Array([0])] };\n        }\n        const { inner, outer = [] } = this.__internal__raw.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([1]), ...outer]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        // This attempts to align with the JSON encoding - actually in this case\n        // the isSome value is correct, however the `isNone` may be problematic\n        return this.isNone\n            ? '0x'\n            : u8aToHex(this.toU8a().subarray(1));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.__internal__raw.toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.isNone\n            ? null\n            : this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.isNone\n            ? null\n            : this.__internal__raw.toPrimitive();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType(isBare) {\n        const wrapped = this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType();\n        return isBare\n            ? wrapped\n            : `Option<${wrapped}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        if (isBare) {\n            return this.__internal__raw.toU8a(true);\n        }\n        const u8a = new Uint8Array(this.encodedLength);\n        if (this.isSome) {\n            u8a.set([1]);\n            u8a.set(this.__internal__raw.toU8a(), 1);\n        }\n        return u8a;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available), throws if null\n     */\n    unwrap() {\n        if (this.isNone) {\n            throw new Error('Option: unwrapping a None value');\n        }\n        return this.__internal__raw;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n    unwrapOr(defaultValue) {\n        return this.isSome\n            ? this.unwrap()\n            : defaultValue;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n    unwrapOrDefault() {\n        return this.isSome\n            ? this.unwrap()\n            : new this.__internal__Type(this.registry);\n    }\n}\n", "import { Enum } from './Enum.js';\n/**\n * @name Result\n * @description\n * A Result maps to the Rust Result type, that can either wrap a success or error value\n */\nexport class Result extends Enum {\n    constructor(registry, Ok, Err, value) {\n        // NOTE This is order-dependent, Ok (with index 0) needs to be first\n        // eslint-disable-next-line sort-keys\n        super(registry, { Ok, Err }, value);\n    }\n    static with(Types) {\n        return class extends Result {\n            constructor(registry, value) {\n                super(registry, Types.Ok, Types.Err, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the wrapper Err value (if isErr)\n     */\n    get asErr() {\n        if (!this.isErr) {\n            throw new Error('Cannot extract Err value from Ok result, check isErr first');\n        }\n        return this.value;\n    }\n    /**\n     * @description Returns the wrapper Ok value (if isOk)\n     */\n    get asOk() {\n        if (!this.isOk) {\n            throw new Error('Cannot extract Ok value from Err result, check isOk first');\n        }\n        return this.value;\n    }\n    /**\n     * @description Checks if the Result has no value\n     */\n    get isEmpty() {\n        return this.isOk && this.value.isEmpty;\n    }\n    /**\n     * @description Checks if the Result wraps an Err value\n     */\n    get isErr() {\n        return !this.isOk;\n    }\n    /**\n     * @description Checks if the Result wraps an Ok value\n     */\n    get isOk() {\n        return this.index === 0;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        const Types = this._toRawStruct();\n        return `Result<${Types.Ok},${Types.Err}>`;\n    }\n}\n", "import { identity, isFunction, isHex, isString, isU8a, stringify, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8a, mapToTypeMap, typesToConstructors, typeToConstructor } from '../utils/index.js';\n/** @internal */\nfunction decodeTuple(registry, result, value, Classes) {\n    if (Array.isArray(value)) {\n        const Types = Classes[0];\n        for (let i = 0, count = Types.length; i < count; i++) {\n            try {\n                const entry = value?.[i];\n                result[i] = entry instanceof Types[i]\n                    ? entry\n                    : new Types[i](registry, entry);\n            }\n            catch (error) {\n                throw new Error(`Tuple: failed on ${i}:: ${error.message}`);\n            }\n        }\n        return [result, 0];\n    }\n    else if (isHex(value)) {\n        return decodeU8a(registry, result, u8aToU8a(value), Classes);\n    }\n    else if (!value || !result.length) {\n        const Types = Classes[0];\n        for (let i = 0, count = Types.length; i < count; i++) {\n            result[i] = new Types[i](registry);\n        }\n        return [result, 0];\n    }\n    throw new Error(`Expected array input to Tuple decoding, found ${typeof value}: ${stringify(value)}`);\n}\n/**\n * @name Tuple\n * @description\n * A Tuple defines an anonymous fixed-length array, where each element has its\n * own type. It extends the base JS `Array` object.\n */\nexport class Tuple extends AbstractArray {\n    constructor(registry, Types, value, { definition, setDefinition = identity } = {}) {\n        const Classes = definition || setDefinition(Array.isArray(Types)\n            ? [typesToConstructors(registry, Types), []]\n            : isFunction(Types) || isString(Types)\n                ? [[typeToConstructor(registry, Types)], []]\n                : mapToTypeMap(registry, Types));\n        super(registry, Classes[0].length);\n        this.initialU8aLength = (isU8a(value)\n            ? decodeU8a(registry, this, value, Classes)\n            : decodeTuple(registry, this, value, Classes))[1];\n        this.__internal__Types = Classes;\n    }\n    static with(Types) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return class extends Tuple {\n            constructor(registry, value) {\n                super(registry, Types, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (let i = 0, count = this.length; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description The types definition of the tuple\n     */\n    get Types() {\n        return this.__internal__Types[1].length\n            ? this.__internal__Types[1]\n            : this.__internal__Types[0].map((T) => new T(this.registry).toRawType());\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner()\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        const types = this.__internal__Types[0].map((T) => this.registry.getClassName(T) || new T(this.registry).toRawType());\n        return `(${types.join(',')})`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        // Overwrite the default toString representation of Array.\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return u8aConcatStrict(this.toU8aInner(isBare));\n    }\n}\n", "import { AbstractInt } from '../abstract/Int.js';\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nexport class UInt extends AbstractInt {\n    static with(bitLength, typeName) {\n        return class extends UInt {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n}\n", "import { compactFromU8aLim, identity, isHex, isU8a, logger, stringify, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8aVec, typeToConstructor } from '../utils/index.js';\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\nfunction decodeVecLength(value) {\n    if (Array.isArray(value)) {\n        return [value, value.length, 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        const u8a = u8aToU8a(value);\n        const [startAt, length] = compactFromU8aLim(u8a);\n        if (length > MAX_LENGTH) {\n            throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);\n        }\n        return [u8a, length, startAt];\n    }\n    else if (!value) {\n        return [null, 0, 0];\n    }\n    throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof value}: ${stringify(value)}`);\n}\nexport function decodeVec(registry, result, value, startAt, Type) {\n    if (Array.isArray(value)) {\n        const count = result.length;\n        for (let i = 0; i < count; i++) {\n            // 26/08/2022 this is actually a false positive - after recent eslint upgdates\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const entry = value[i];\n            try {\n                result[i] = entry instanceof Type\n                    ? entry\n                    : new Type(registry, entry);\n            }\n            catch (error) {\n                l.error(`Unable to decode on index ${i}`, error.message);\n                throw error;\n            }\n        }\n        return [0, 0];\n    }\n    else if (!value) {\n        return [0, 0];\n    }\n    // we don't need more checks, we already limited it via the length decoding\n    return decodeU8aVec(registry, result, u8aToU8a(value), startAt, Type);\n}\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\nexport class Vec extends AbstractArray {\n    constructor(registry, Type, value = [], { definition, setDefinition = identity } = {}) {\n        const [decodeFrom, length, startAt] = decodeVecLength(value);\n        super(registry, length);\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        this.initialU8aLength = (isU8a(decodeFrom)\n            ? decodeU8aVec(registry, this, decodeFrom, startAt, this.__internal__Type)\n            : decodeVec(registry, this, decodeFrom, startAt, this.__internal__Type))[0];\n    }\n    static with(Type) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends Vec {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The type for the items\n     */\n    get Type() {\n        return this.__internal__Type.name;\n    }\n    /**\n     * @description Finds the index of the value in the array\n     */\n    indexOf(other) {\n        // convert type first, this removes overhead from the eq\n        const check = other instanceof this.__internal__Type\n            ? other\n            : new this.__internal__Type(this.registry, other);\n        for (let i = 0, count = this.length; i < count; i++) {\n            if (check.eq(this[i])) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Vec<${this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType()}>`;\n    }\n}\n", "import { AbstractArray } from '../abstract/Array.js';\n/**\n * @name VecAny\n * @description\n * This manages codec arrays, assuming that the inputs are already of type Codec. Unlike\n * a vector, this can be used to manage array-like structures with variable arguments of\n * any types\n */\nexport class VecAny extends AbstractArray {\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        // FIXME This is basically an any type, cannot instantiate via createType\n        return 'Vec<Codec>';\n    }\n}\n", "import { identity, isU8a, u8aConcatStrict } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8aVec, typeToConstructor } from '../utils/index.js';\nimport { decodeVec } from './Vec.js';\n/**\n * @name VecFixed\n * @description\n * This manages codec arrays of a fixed length\n */\nexport class VecFixed extends AbstractArray {\n    constructor(registry, Type, length, value = [], { definition, setDefinition = identity } = {}) {\n        super(registry, length);\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        this.initialU8aLength = (isU8a(value)\n            ? decodeU8aVec(registry, this, value, 0, this.__internal__Type)\n            : decodeVec(registry, this, value, 0, this.__internal__Type))[1];\n    }\n    static with(Type, length) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends VecFixed {\n            constructor(registry, value) {\n                super(registry, Type, length, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The type for the items\n     */\n    get Type() {\n        return new this.__internal__Type(this.registry).toRawType();\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (let i = 0, count = this.length; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner()\n        };\n    }\n    toU8a() {\n        // we override, we don't add the length prefix for ourselves, and at the same time we\n        // ignore isBare on entries, since they should be properly encoded at all times\n        const encoded = this.toU8aInner();\n        return encoded.length\n            ? u8aConcatStrict(encoded)\n            : new Uint8Array([]);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `[${this.Type};${this.length}]`;\n    }\n}\n", "export { BitVec } from './BitVec.js';\nexport { BTreeMap } from './BTreeMap.js';\nexport { BTreeSet } from './BTreeSet.js';\nexport { Bytes } from './Bytes.js';\nexport { HashMap } from './HashMap.js';\nexport { Linkage } from './Linkage.js';\nexport { CodecMap, CodecMap as Map } from './Map.js';\nexport { OptionBool } from './OptionBool.js';\nexport { Range } from './Range.js';\nexport { RangeInclusive } from './RangeInclusive.js';\nexport { Type } from './Type.js';\nexport { U8aFixed } from './U8aFixed.js';\nexport { WrapperKeepOpaque } from './WrapperKeepOpaque.js';\nexport { WrapperOpaque } from './WrapperOpaque.js';\n", "import { compactFromU8aLim, compactToU8a, isString, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeBitVecU8a(value) {\n    if (!value || !value.length) {\n        return [0, new Uint8Array()];\n    }\n    // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + Math.ceil(length / 8);\n    if (total > value.length) {\n        throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    return [length, value.subarray(offset, total)];\n}\n/** @internal */\nfunction decodeBitVec(value) {\n    if (Array.isArray(value) || isString(value)) {\n        const u8a = u8aToU8a(value);\n        return [u8a.length / 8, u8a];\n    }\n    return decodeBitVecU8a(value);\n}\n/**\n * @name BitVec\n * @description\n * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this\n * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes\n */\nexport class BitVec extends Raw {\n    // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming\n    // we are dealing with Lsb, which is the default (as of writing) BitVec format used\n    // in the Polkadot code (this only affects the toHuman displays)\n    constructor(registry, value, isMsb = false) {\n        const [decodedLength, u8a] = decodeBitVec(value);\n        super(registry, u8a);\n        this.__internal__decodedLength = decodedLength;\n        this.__internal__isMsb = isMsb;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length + compactToU8a(this.__internal__decodedLength).length;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [compactToU8a(this.__internal__decodedLength), super.toU8a()]\n        };\n    }\n    /**\n     * @description Creates a boolean array of the bit values\n     */\n    toBoolArray() {\n        const map = [...this.toU8a(true)].map((v) => [\n            !!(v & 128),\n            !!(v & 64),\n            !!(v & 32),\n            !!(v & 16),\n            !!(v & 8),\n            !!(v & 4),\n            !!(v & 2),\n            !!(v & 1)\n        ]);\n        const count = map.length;\n        const result = new Array(8 * count);\n        for (let i = 0; i < count; i++) {\n            const off = i * 8;\n            const v = map[i];\n            for (let j = 0; j < 8; j++) {\n                result[off + j] = this.__internal__isMsb\n                    ? v[j]\n                    : v[7 - j];\n            }\n        }\n        return result;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return `0b${[...this.toU8a(true)]\n            .map((d) => `00000000${d.toString(2)}`.slice(-8))\n            .map((s) => this.__internal__isMsb ? s : s.split('').reverse().join(''))\n            .join('_')}`;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'BitVec';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const bitVec = super.toU8a(isBare);\n        return isBare\n            ? bitVec\n            : u8aConcatStrict([compactToU8a(this.__internal__decodedLength), bitVec]);\n    }\n}\n", "import { isAscii, isUndefined, isUtf8, u8aToHex, u8aToString, u8aToU8a } from '@polkadot/util';\n/**\n * @name Raw\n * @description\n * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ\n * from other implementations where it will consume the full Uint8Array as passed to it.\n * As such it is meant to be subclassed where the wrapper takes care of the\n * actual lengths instead of used directly.\n * @noInheritDoc\n */\nexport class Raw extends Uint8Array {\n    /**\n     * @description This ensures that operators such as clice, filter, map, etc. return\n     * new Array instances (without this we need to apply overrides)\n     */\n    static get [Symbol.species]() {\n        return Uint8Array;\n    }\n    constructor(registry, value, initialU8aLength) {\n        super(u8aToU8a(value));\n        this.registry = registry;\n        this.initialU8aLength = initialU8aLength;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns true if the wrapped value contains only ASCII printable characters\n     */\n    get isAscii() {\n        return isAscii(this);\n    }\n    /**\n     * @description Returns true if the type wraps an empty/default all-0 value\n     */\n    get isEmpty() {\n        return !this.length || isUndefined(this.find((b) => !!b));\n    }\n    /**\n     * @description Returns true if the wrapped value contains only utf8 characters\n     */\n    get isUtf8() {\n        return isUtf8(this);\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.length * 8;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (other instanceof Uint8Array) {\n            return (this.length === other.length) &&\n                !this.some((b, index) => b !== other[index]);\n        }\n        return this.eq(u8aToU8a(other));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toPrimitive();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        if (this.isAscii) {\n            const text = this.toUtf8();\n            // ensure we didn't end up with multibyte codepoints\n            if (isAscii(text)) {\n                return text;\n            }\n        }\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Raw';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return Uint8Array.from(this);\n    }\n    /**\n     * @description Returns the wrapped data as a UTF-8 string\n     */\n    toUtf8() {\n        if (!this.isUtf8) {\n            throw new Error('The character sequence is not a valid Utf8 string');\n        }\n        return u8aToString(this);\n    }\n}\n", "import { CodecMap } from './Map.js';\nexport class BTreeMap extends CodecMap {\n    static with(keyType, valType) {\n        return class extends BTreeMap {\n            constructor(registry, value) {\n                super(registry, keyType, valType, value, 'BTreeMap');\n            }\n        };\n    }\n}\n", "import { compactFromU8aLim, compactToU8a, isHex, isObject, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { Enum } from '../base/Enum.js';\nimport { Raw } from '../native/Raw.js';\nimport { Struct } from '../native/Struct.js';\nimport { compareMap, decodeU8a, sortMap, typeToConstructor } from '../utils/index.js';\nconst l = logger('Map');\n/** @internal */\nfunction decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {\n    const output = new Map();\n    const [offset, count] = compactFromU8aLim(u8a);\n    const types = [];\n    for (let i = 0; i < count; i++) {\n        types.push(KeyClass, ValClass);\n    }\n    const [values, decodedLength] = decodeU8a(registry, new Array(types.length), u8a.subarray(offset), [types, []]);\n    for (let i = 0, count = values.length; i < count; i += 2) {\n        output.set(values[i], values[i + 1]);\n    }\n    return [KeyClass, ValClass, output, offset + decodedLength];\n}\n/** @internal */\nfunction decodeMapFromMap(registry, KeyClass, ValClass, value) {\n    const output = new Map();\n    for (const [key, val] of value.entries()) {\n        const isComplex = KeyClass.prototype instanceof AbstractArray ||\n            KeyClass.prototype instanceof Struct ||\n            KeyClass.prototype instanceof Enum;\n        try {\n            output.set(key instanceof KeyClass\n                ? key\n                : new KeyClass(registry, isComplex && typeof key === 'string' ? JSON.parse(key) : key), val instanceof ValClass\n                ? val\n                : new ValClass(registry, val));\n        }\n        catch (error) {\n            l.error('Failed to decode key or value:', error.message);\n            throw error;\n        }\n    }\n    return [KeyClass, ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param KeyClass - Type of the map key\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Map<any, any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonMap\n * @internal\n */\nfunction decodeMap(registry, keyType, valType, value) {\n    const KeyClass = typeToConstructor(registry, keyType);\n    const ValClass = typeToConstructor(registry, valType);\n    if (!value) {\n        return [KeyClass, ValClass, new Map(), 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        return decodeMapFromU8a(registry, KeyClass, ValClass, u8aToU8a(value));\n    }\n    else if (value instanceof Map) {\n        return decodeMapFromMap(registry, KeyClass, ValClass, value);\n    }\n    else if (isObject(value)) {\n        return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));\n    }\n    throw new Error('Map: cannot decode type');\n}\nexport class CodecMap extends Map {\n    constructor(registry, keyType, valType, rawValue, type = 'HashMap') {\n        const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);\n        super(type === 'BTreeMap' ? sortMap(decoded) : decoded);\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n        this.__internal__KeyClass = KeyClass;\n        this.__internal__ValClass = ValClass;\n        this.__internal__type = type;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let len = compactToU8a(this.size).length;\n        for (const [k, v] of this.entries()) {\n            len += k.encodedLength + v.encodedLength;\n        }\n        return len;\n    }\n    /**\n     * @description Returns a hash of the value\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const inner = [];\n        for (const [k, v] of this.entries()) {\n            inner.push(k.inspect());\n            inner.push(v.inspect());\n        }\n        return {\n            inner,\n            outer: [compactToU8a(this.size)]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k instanceof Raw && k.isAscii\n                ? k.toUtf8()\n                : k.toString()] = v.toHuman(isExtended);\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k.toString()] = v.toJSON();\n        }\n        return json;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k instanceof Raw && k.isAscii\n                ? k.toUtf8()\n                : k.toString()] = v.toPrimitive();\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__type}<${this.registry.getClassName(this.__internal__KeyClass) || new this.__internal__KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        if (!isBare) {\n            encoded.push(compactToU8a(this.size));\n        }\n        for (const [k, v] of this.entries()) {\n            encoded.push(k.toU8a(isBare), v.toU8a(isBare));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n", "import { isBoolean, isHex, isObject, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareMap, decodeU8aStruct, mapToTypeMap, typesToMap } from '../utils/index.js';\nfunction noopSetDefinition(d) {\n    return d;\n}\n/** @internal */\nfunction decodeStructFromObject(registry, [Types, keys], value, jsonMap) {\n    let jsonObj;\n    const typeofArray = Array.isArray(value);\n    const typeofMap = value instanceof Map;\n    const count = keys.length;\n    if (!typeofArray && !typeofMap && !isObject(value)) {\n        throw new Error(`Struct: Cannot decode value ${stringify(value)} (typeof ${typeof value}), expected an input object, map or array`);\n    }\n    else if (typeofArray && value.length !== count) {\n        throw new Error(`Struct: Unable to map ${stringify(value)} array to object with known keys ${keys.join(', ')}`);\n    }\n    const raw = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const key = keys[i];\n        const jsonKey = jsonMap.get(key) || key;\n        const Type = Types[i];\n        let assign;\n        try {\n            if (typeofArray) {\n                assign = value[i];\n            }\n            else if (typeofMap) {\n                assign = jsonKey && value.get(jsonKey);\n            }\n            else {\n                assign = jsonKey && value[jsonKey];\n                if (isUndefined(assign)) {\n                    if (isUndefined(jsonObj)) {\n                        const entries = Object.entries(value);\n                        jsonObj = {};\n                        for (let e = 0, ecount = entries.length; e < ecount; e++) {\n                            jsonObj[stringCamelCase(entries[e][0])] = entries[e][1];\n                        }\n                    }\n                    assign = jsonKey && jsonObj[jsonKey];\n                }\n            }\n            raw[i] = [\n                key,\n                assign instanceof Type\n                    ? assign\n                    : new Type(registry, assign)\n            ];\n        }\n        catch (error) {\n            let type = Type.name;\n            try {\n                type = new Type(registry).toRawType();\n            }\n            catch {\n                // ignore\n            }\n            throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n        }\n    }\n    return [raw, 0];\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\nexport class Struct extends Map {\n    constructor(registry, Types, value, jsonMap = new Map(), { definition, setDefinition = noopSetDefinition } = {}) {\n        const typeMap = definition || setDefinition(mapToTypeMap(registry, Types));\n        const [decoded, decodedLength] = isU8a(value) || isHex(value)\n            ? decodeU8aStruct(registry, new Array(typeMap[0].length), u8aToU8a(value), typeMap)\n            : value instanceof Struct\n                ? [value, 0]\n                : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);\n        super(decoded);\n        this.initialU8aLength = decodedLength;\n        this.registry = registry;\n        this.__internal__jsonMap = jsonMap;\n        this.__internal__Types = typeMap;\n    }\n    static with(Types, jsonMap) {\n        var _a;\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return _a = class extends Struct {\n                constructor(registry, value) {\n                    super(registry, Types, value, jsonMap, { definition, setDefinition });\n                }\n            },\n            (() => {\n                const keys = Object.keys(Types);\n                objectProperties(_a.prototype, keys, (k, _, self) => self.get(k));\n            })(),\n            _a;\n    }\n    /**\n     * @description The available keys for this struct\n     */\n    get defKeys() {\n        return this.__internal__Types[1];\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        for (const v of this.values()) {\n            if (!v.isEmpty) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (const v of this.values()) {\n            total += v.encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns the Type description of the structure\n     */\n    get Type() {\n        const result = {};\n        const [Types, keys] = this.__internal__Types;\n        for (let i = 0, count = keys.length; i < count; i++) {\n            result[keys[i]] = new Types[i](this.registry).toRawType();\n        }\n        return result;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a specific names entry in the structure\n     * @param key The name of the entry to retrieve\n     */\n    get(key) {\n        return super.get(key);\n    }\n    /**\n     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n     */\n    getAtIndex(index) {\n        return this.toArray()[index];\n    }\n    /**\n     * @description Returns the a types value by name\n     */\n    getT(key) {\n        return super.get(key);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect(isBare) {\n        const inner = [];\n        for (const [k, v] of this.entries()) {\n            inner.push({\n                ...v.inspect(!isBare || isBoolean(isBare)\n                    ? isBare\n                    : isBare[k]),\n                name: stringCamelCase(k)\n            });\n        }\n        return {\n            inner\n        };\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n    toArray() {\n        return [...this.values()];\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k] = v.toHuman(isExtended);\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            // Here we pull out the entry against the JSON mapping (if supplied)\n            // since this representation goes over RPC and needs to be correct\n            json[(this.__internal__jsonMap.get(k) || k)] = v.toJSON();\n        }\n        return json;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k] = v.toPrimitive();\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify(typesToMap(this.registry, this.__internal__Types));\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        for (const [k, v] of this.entries()) {\n            encoded.push(v.toU8a(!isBare || isBoolean(isBare)\n                ? isBare\n                : isBare[k]));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n", "import { compactFromU8aLim, compactToU8a, isHex, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareSet, decodeU8aVec, sortSet, typeToConstructor } from '../utils/index.js';\nconst l = logger('BTreeSet');\n/** @internal */\nfunction decodeSetFromU8a(registry, ValClass, u8a) {\n    const output = new Set();\n    const [offset, count] = compactFromU8aLim(u8a);\n    const result = new Array(count);\n    const [decodedLength] = decodeU8aVec(registry, result, u8a, offset, ValClass);\n    for (let i = 0; i < count; i++) {\n        output.add(result[i]);\n    }\n    return [ValClass, output, decodedLength];\n}\n/** @internal */\nfunction decodeSetFromSet(registry, ValClass, value) {\n    const output = new Set();\n    value.forEach((val) => {\n        try {\n            output.add((val instanceof ValClass) ? val : new ValClass(registry, val));\n        }\n        catch (error) {\n            l.error('Failed to decode key or value:', error.message);\n            throw error;\n        }\n    });\n    return [ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Set<any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonSet\n * @internal\n */\nfunction decodeSet(registry, valType, value) {\n    const ValClass = typeToConstructor(registry, valType);\n    if (!value) {\n        return [ValClass, new Set(), 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        return decodeSetFromU8a(registry, ValClass, u8aToU8a(value));\n    }\n    else if (Array.isArray(value) || value instanceof Set) {\n        return decodeSetFromSet(registry, ValClass, value);\n    }\n    throw new Error('BTreeSet: cannot decode type');\n}\nexport class BTreeSet extends Set {\n    constructor(registry, valType, rawValue) {\n        const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);\n        super(sortSet(values));\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n        this.__internal__ValClass = ValClass;\n    }\n    static with(valType) {\n        return class extends BTreeSet {\n            constructor(registry, value) {\n                super(registry, valType, value);\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let len = compactToU8a(this.size).length;\n        for (const v of this.values()) {\n            len += v.encodedLength;\n        }\n        return len;\n    }\n    /**\n     * @description Returns a hash of the value\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description The actual set values as a string[]\n     */\n    get strings() {\n        return [...super.values()].map((v) => v.toString());\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareSet(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const inner = [];\n        for (const v of this.values()) {\n            inner.push(v.inspect());\n        }\n        return {\n            inner,\n            outer: [compactToU8a(this.size)]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toHuman(isExtended));\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toJSON());\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `BTreeSet<${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toPrimitive());\n        }\n        return json;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        if (!isBare) {\n            encoded.push(compactToU8a(this.size));\n        }\n        for (const v of this.values()) {\n            encoded.push(v.toU8a(isBare));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n", "import { compactAddLength, compactFromU8aLim, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\nfunction decodeBytesU8a(value) {\n    if (!value.length) {\n        return [new Uint8Array(), 0];\n    }\n    // handle all other Uint8Array inputs, these do have a length prefix\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + length;\n    if (length > MAX_LENGTH) {\n        throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    }\n    else if (total > value.length) {\n        throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    return [value.subarray(offset, total), total];\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\nexport class Bytes extends Raw {\n    constructor(registry, value) {\n        const [u8a, decodedLength] = isU8a(value) && !(value instanceof Raw)\n            ? decodeBytesU8a(value)\n            : Array.isArray(value) || isString(value)\n                ? [u8aToU8a(value), 0]\n                : [value, 0];\n        super(registry, u8a, decodedLength);\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length + compactToU8a(this.length).length;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect(isBare) {\n        const clength = compactToU8a(this.length);\n        return {\n            outer: isBare\n                ? [super.toU8a()]\n                : this.length\n                    ? [clength, super.toU8a()]\n                    : [clength]\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Bytes';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return isBare\n            ? super.toU8a(isBare)\n            : compactAddLength(this);\n    }\n}\n", "import { CodecMap } from './Map.js';\nexport class HashMap extends CodecMap {\n    static with(keyType, valType) {\n        return class extends HashMap {\n            constructor(registry, value) {\n                super(registry, keyType, valType, value);\n            }\n        };\n    }\n}\n", "import { Option } from '../base/Option.js';\nimport { Tuple } from '../base/Tuple.js';\nimport { Vec } from '../base/Vec.js';\nimport { Struct } from '../native/Struct.js';\nconst EMPTY = new Uint8Array();\n/**\n * @name Linkage\n * @description The wrapper for the result from a LinkedMap\n */\nexport class Linkage extends Struct {\n    constructor(registry, Type, value) {\n        super(registry, {\n            previous: Option.with(Type),\n            // eslint-disable-next-line sort-keys\n            next: Option.with(Type)\n        }, value);\n    }\n    static withKey(Type) {\n        return class extends Linkage {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the next item the Linkage is pointing to\n     */\n    get previous() {\n        return this.get('previous');\n    }\n    /**\n     * @description Returns the previous item the Linkage is pointing to\n     */\n    get next() {\n        return this.get('next');\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Linkage<${this.next.toRawType(true)}>`;\n    }\n    /**\n     * @description Custom toU8a which with bare mode does not return the linkage if empty\n     */\n    toU8a(isBare) {\n        // As part of a storage query (where these appear), in the case of empty, the values\n        // are NOT populated by the node - follow the same logic, leaving it empty\n        return this.isEmpty\n            ? EMPTY\n            : super.toU8a(isBare);\n    }\n}\n/**\n * @name LinkageResult\n * @description A Linkage keys/Values tuple\n */\nexport class LinkageResult extends Tuple {\n    constructor(registry, [TypeKey, keys], [TypeValue, values]) {\n        super(registry, {\n            Keys: Vec.with(TypeKey),\n            Values: Vec.with(TypeValue)\n        }, [keys, values]);\n    }\n}\n", "import { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Option } from '../base/Option.js';\nimport { bool as Bool } from '../native/Bool.js';\nfunction decodeU8a(registry, value) {\n    // Encoded as -\n    //  - 0 = None\n    //  - 1 = True\n    //  - 2 = False\n    return value[0] === 0\n        ? null\n        : new Bool(registry, value[0] === 1);\n}\n/**\n * @name OptionBool\n * @description A specific implementation of Option<bool> than allows for single-byte encoding\n */\nexport class OptionBool extends Option {\n    constructor(registry, value) {\n        super(registry, Bool, isU8a(value) || isHex(value)\n            ? decodeU8a(registry, u8aToU8a(value))\n            : value);\n        this.initialU8aLength = 1;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isFalse() {\n        return this.isSome\n            ? !this.value.valueOf()\n            : false;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isTrue() {\n        return this.isSome\n            ? this.value.valueOf()\n            : false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return { outer: [this.toU8a()] };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType(isBare) {\n        return isBare\n            ? 'bool'\n            : 'Option<bool>';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        if (isBare) {\n            return super.toU8a(true);\n        }\n        return this.isSome\n            ? new Uint8Array([this.isTrue ? 1 : 2])\n            : new Uint8Array([0]);\n    }\n}\n", "import { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\nexport class bool extends Boolean {\n    constructor(registry, value = false) {\n        super(isU8a(value)\n            ? value[0] === 1\n            : value instanceof Boolean\n                ? value.valueOf()\n                : !!value);\n        this.initialU8aLength = 1;\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value (true when it wraps false/default)\n     */\n    get isEmpty() {\n        return this.isFalse;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isFalse() {\n        return !this.isTrue;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isTrue() {\n        return this.valueOf();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.valueOf() === (other instanceof Boolean\n            ? other.valueOf()\n            : other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.valueOf();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'bool';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toJSON().toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return new Uint8Array([this.valueOf() ? 1 : 0]);\n    }\n}\n", "import { Tuple } from '../base/Tuple.js';\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n    constructor(registry, Type, value, { rangeName = 'Range' } = {}) {\n        super(registry, [Type, Type], value);\n        this.__internal__rangeName = rangeName;\n    }\n    static with(Type) {\n        return class extends Range {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the starting range value\n     */\n    get start() {\n        return this[0];\n    }\n    /**\n     * @description Returns the ending range value\n     */\n    get end() {\n        return this[1];\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__rangeName}<${this.start.toRawType()}>`;\n    }\n}\n", "import { Range } from './Range.js';\nexport class RangeInclusive extends Range {\n    constructor(registry, Type, value) {\n        super(registry, Type, value, { rangeName: 'RangeInclusive' });\n    }\n    static with(Type) {\n        return class extends RangeInclusive {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n}\n", "import { Text } from '../native/Text.js';\nimport { sanitize } from '../utils/index.js';\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nexport class Type extends Text {\n    constructor(registry, value = '') {\n        super(registry, value);\n        this.setOverride(sanitize(this.toString()));\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Type';\n    }\n}\n", "import { compactAddLength, compactFromU8aLim, compactToU8a, hexToU8a, isHex, isString, isU8a, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { Raw } from './Raw.js';\nconst MAX_LENGTH = 128 * 1024;\n/** @internal */\nfunction decodeText(value) {\n    if (isU8a(value)) {\n        if (!value.length) {\n            return ['', 0];\n        }\n        // for Raw, the internal buffer does not have an internal length\n        // (the same applies in e.g. Bytes, where length is added at encoding-time)\n        if (value instanceof Raw) {\n            return [u8aToString(value), 0];\n        }\n        const [offset, length] = compactFromU8aLim(value);\n        const total = offset + length;\n        if (length > MAX_LENGTH) {\n            throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);\n        }\n        else if (total > value.length) {\n            throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);\n        }\n        return [u8aToString(value.subarray(offset, total)), total];\n    }\n    else if (isHex(value)) {\n        return [u8aToString(hexToU8a(value)), 0];\n    }\n    return [value ? value.toString() : '', 0];\n}\n/**\n * @name Text\n * @description\n * This is a string wrapper, along with the length. It is used both for strings as well\n * as items such as documentation. It simply extends the standard JS `String` built-in\n * object, inheriting all methods exposed from `String`.\n * @noInheritDoc\n */\nexport class Text extends String {\n    constructor(registry, value) {\n        const [str, decodedLength] = decodeText(value);\n        super(str);\n        this.__internal__override = null;\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * @description The length of the value\n     */\n    get length() {\n        // only included here since we ignore inherited docs\n        return super.length;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return isString(other)\n            ? this.toString() === other.toString()\n            : false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const value = stringToU8a(super.toString());\n        return {\n            outer: value.length\n                ? [compactToU8a(value.length), value]\n                : [compactToU8a(value.length)]\n        };\n    }\n    /**\n     * @description Set an override value for this\n     */\n    setOverride(override) {\n        this.__internal__override = override;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        // like with Vec<u8>, when we are encoding to hex, we don't actually add\n        // the length prefix (it is already implied by the actual string length)\n        return u8aToHex(this.toU8a(true));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Text';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__override || super.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        // NOTE Here we use the super toString (we are not taking overrides into account,\n        // rather encoding the original value the string was constructed with)\n        const encoded = stringToU8a(super.toString());\n        return isBare\n            ? encoded\n            : compactAddLength(encoded);\n    }\n}\n", "import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeU8aFixed(value, bitLength) {\n    const u8a = u8aToU8a(value);\n    const byteLength = bitLength / 8;\n    if (!u8a.length) {\n        return [new Uint8Array(byteLength), 0];\n    }\n    if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n        throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n    }\n    return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\nexport class U8aFixed extends Raw {\n    constructor(registry, value = new Uint8Array(), bitLength = 256) {\n        const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n        super(registry, u8a, decodedLength);\n    }\n    static with(bitLength, typeName) {\n        return class extends U8aFixed {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `[u8;${this.length}]`;\n    }\n}\n", "import { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Bytes } from './Bytes.js';\nfunction decodeRaw(registry, typeName, value) {\n    const Type = typeToConstructor(registry, typeName);\n    if (isU8a(value) || isHex(value)) {\n        try {\n            const [, u8a] = isHex(value)\n                ? [0, u8aToU8a(value)]\n                : (value instanceof Raw)\n                    ? [0, value.subarray()]\n                    : compactStripLength(value);\n            return [Type, new Type(registry, u8a), value];\n        }\n        catch {\n            return [Type, null, value];\n        }\n    }\n    const instance = new Type(registry, value);\n    return [Type, instance, compactAddLength(instance.toU8a())];\n}\nexport class WrapperKeepOpaque extends Bytes {\n    constructor(registry, typeName, value, { opaqueName = 'WrapperKeepOpaque' } = {}) {\n        const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n        super(registry, u8a);\n        this.__internal__Type = Type;\n        this.__internal__decoded = decoded;\n        this.__internal__opaqueName = opaqueName;\n    }\n    static with(Type) {\n        return class extends WrapperKeepOpaque {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Checks if the wrapper is decodable\n     */\n    get isDecoded() {\n        return !!this.__internal__decoded;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return this.__internal__decoded\n            ? {\n                inner: [this.__internal__decoded.inspect()],\n                outer: [compactToU8a(this.length)]\n            }\n            : {\n                outer: [compactToU8a(this.length), this.toU8a(true)]\n            };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toHuman(isExtended)\n            : super.toHuman();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toPrimitive()\n            : super.toPrimitive();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__opaqueName}<${this.registry.getClassName(this.__internal__Type) || (this.__internal__decoded ? this.__internal__decoded.toRawType() : new this.__internal__Type(this.registry).toRawType())}>`;\n    }\n    /**\n     * @description Converts the Object to to a string (either decoded or bytes)\n     */\n    toString() {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toString()\n            : super.toString();\n    }\n    /**\n     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n     */\n    unwrap() {\n        if (!this.__internal__decoded) {\n            throw new Error(`${this.__internal__opaqueName}: unwrapping an undecodable value`);\n        }\n        return this.__internal__decoded;\n    }\n}\n", "import { WrapperKeepOpaque } from './WrapperKeepOpaque.js';\nexport class WrapperOpaque extends WrapperKeepOpaque {\n    constructor(registry, typeName, value) {\n        super(registry, typeName, value, { opaqueName: 'WrapperOpaque' });\n    }\n    static with(Type) {\n        return class extends WrapperOpaque {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)\n     */\n    get inner() {\n        return this.unwrap();\n    }\n}\n", "export { bool as Bool, bool } from './Bool.js';\nexport { CodecDate, CodecDate as Date } from './Date.js';\nexport { Float } from './Float.js';\nexport { Json } from './Json.js';\nexport { Raw } from './Raw.js';\nexport { CodecSet, CodecSet as Set } from './Set.js';\nexport { Struct } from './Struct.js';\nexport { Text } from './Text.js';\n", "import { BN, bnToBn, bnToHex, bnToU8a, isString, isU8a, u8aToBn } from '@polkadot/util';\nconst BITLENGTH = 64;\nconst U8A_OPTS = { bitLength: BITLENGTH, isLe: true };\nfunction decodeDate(value) {\n    if (isU8a(value)) {\n        value = u8aToBn(value.subarray(0, BITLENGTH / 8));\n    }\n    else if (value instanceof Date) {\n        return value;\n    }\n    else if (isString(value)) {\n        value = new BN(value.toString(), 10, 'le');\n    }\n    return new Date(bnToBn(value).toNumber() * 1000);\n}\n/**\n * @name Date\n * @description\n * A wrapper around seconds/timestamps. Internally the representation only has\n * second precicion (aligning with Rust), so any numbers passed an/out are always\n * per-second. For any encoding/decoding the 1000 multiplier would be applied to\n * get it in line with JavaScript formats. It extends the base JS `Date` object\n * and has all the methods available that are applicable to any `Date`\n * @noInheritDoc\n */\nexport class CodecDate extends Date {\n    constructor(registry, value = 0) {\n        super(decodeDate(value));\n        this.initialU8aLength = BITLENGTH / 8;\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return BITLENGTH / 8;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.getTime() === 0;\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return BITLENGTH;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return decodeDate(other).getTime() === this.getTime();\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    /**\n     * @description Returns the BN representation of the timestamp\n     */\n    toBn() {\n        return new BN(this.toNumber());\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isLe = false) {\n        return bnToHex(this.toBn(), {\n            bitLength: BITLENGTH,\n            isLe,\n            isNegative: false\n        });\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toISOString();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // FIXME Return type should be number, but conflicts with Date.toJSON()\n        // which returns string\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the number representation for the timestamp\n     */\n    toNumber() {\n        return Math.ceil(this.getTime() / 1000);\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Moment';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        // only included here since we do not inherit docs\n        return super.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this.toNumber(), U8A_OPTS);\n    }\n}\n", "import { floatToU8a, isHex, isU8a, u8aToFloat, u8aToHex, u8aToU8a } from '@polkadot/util';\n/**\n * @name Float\n * @description\n * A Codec wrapper for F32 & F64 values. You generally don't want to be using\n * f32/f64 in your runtime, operations on fixed points numbers are preferable. This class\n * was explicitly added since scale-codec has a flag that enables this and it is available\n * in some eth_* RPCs\n */\nexport class Float extends Number {\n    constructor(registry, value, { bitLength = 32 } = {}) {\n        super(isU8a(value) || isHex(value)\n            ? value.length === 0\n                ? 0\n                : u8aToFloat(u8aToU8a(value), { bitLength })\n            : (value || 0));\n        this.__internal__bitLength = bitLength;\n        this.encodedLength = bitLength / 8;\n        this.initialU8aLength = this.encodedLength;\n        this.registry = registry;\n    }\n    static with(bitLength) {\n        return class extends Float {\n            constructor(registry, value) {\n                super(registry, value, { bitLength });\n            }\n        };\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns true if the type wraps an empty/default all-0 value\n     */\n    get isEmpty() {\n        return this.valueOf() === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.valueOf() === Number(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // Not sure if this is actually a hex or a string value\n        // (would need to check against RPCs to see the result here)\n        return this.toHex();\n    }\n    /**\n     * @description Returns the number representation (Same as valueOf)\n     */\n    toNumber() {\n        return this.valueOf();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `f${this.__internal__bitLength}`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return floatToU8a(this, {\n            bitLength: this.__internal__bitLength\n        });\n    }\n}\n", "import { isFunction, objectProperties, stringify } from '@polkadot/util';\nimport { compareMap } from '../utils/index.js';\n/** @internal */\nfunction decodeJson(value) {\n    return Object.entries(value || {});\n}\n/**\n * @name Json\n * @description\n * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it\n * implements a Codec, it is limited in that it can only be used with input objects via RPC,\n * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys\n * @noInheritDoc\n */\nexport class Json extends Map {\n    constructor(registry, value) {\n        const decoded = decodeJson(value);\n        super(decoded);\n        this.registry = registry;\n        objectProperties(this, decoded.map(([k]) => k), (k) => this.get(k));\n    }\n    /**\n     * @description Always 0, never encodes as a Uint8Array\n     */\n    get encodedLength() {\n        return 0;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return [...this.keys()].length === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a typed value from the internal map\n     */\n    getT(key) {\n        return this.get(key);\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    inspect() {\n        throw new Error('Unimplemented');\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    toHex() {\n        throw new Error('Unimplemented');\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = isFunction(value.toHuman)\n                ? value.toHuman()\n                : value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = isFunction(value.toPrimitive)\n                ? value.toPrimitive()\n                : value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Json';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    toU8a(_isBare) {\n        throw new Error('Unimplemented');\n    }\n}\n", "import { BN, bnToBn, bnToU8a, isBn, isNumber, isString, isU8a, isUndefined, objectProperties, stringify, stringPascalCase, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareArray } from '../utils/index.js';\nfunction encodeSet(setValues, values) {\n    const encoded = new BN(0);\n    for (let i = 0, count = values.length; i < count; i++) {\n        encoded.ior(bnToBn(setValues[values[i]] || 0));\n    }\n    return encoded;\n}\n/** @internal */\nfunction decodeSetArray(setValues, values) {\n    const count = values.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const key = values[i];\n        if (isUndefined(setValues[key])) {\n            throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n        }\n        result[i] = key;\n    }\n    return result;\n}\n/** @internal */\nfunction decodeSetNumber(setValues, _value) {\n    const bn = bnToBn(_value);\n    const keys = Object.keys(setValues);\n    const result = [];\n    for (let i = 0, count = keys.length; i < count; i++) {\n        const key = keys[i];\n        if (bn.and(bnToBn(setValues[key])).eq(bnToBn(setValues[key]))) {\n            result.push(key);\n        }\n    }\n    const computed = encodeSet(setValues, result);\n    if (!bn.eq(computed)) {\n        throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n    }\n    return result;\n}\n/** @internal */\nfunction decodeSet(setValues, value = 0, bitLength) {\n    if (bitLength % 8 !== 0) {\n        throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);\n    }\n    const byteLength = bitLength / 8;\n    if (isU8a(value)) {\n        return value.length === 0\n            ? []\n            : decodeSetNumber(setValues, u8aToBn(value.subarray(0, byteLength), { isLe: true }));\n    }\n    else if (isString(value)) {\n        return decodeSet(setValues, u8aToU8a(value), byteLength);\n    }\n    else if (value instanceof Set || Array.isArray(value)) {\n        const input = Array.isArray(value)\n            ? value\n            : [...value.values()];\n        return decodeSetArray(setValues, input);\n    }\n    return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\nexport class CodecSet extends Set {\n    constructor(registry, setValues, value, bitLength = 8) {\n        super(decodeSet(setValues, value, bitLength));\n        /**\n         * @description adds a value to the Set (extended to allow for validity checking)\n         */\n        this.add = (key) => {\n            // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n            // we have the isUndefined(this._setValues) in here as well, add is used internally\n            // in the Set constructor (so it is undefined at this point, and should allow)\n            if (this.__internal__allowed && isUndefined(this.__internal__allowed[key])) {\n                throw new Error(`Set: Invalid key '${key}' on add`);\n            }\n            super.add(key);\n            return this;\n        };\n        this.registry = registry;\n        this.__internal__allowed = setValues;\n        this.__internal__byteLength = bitLength / 8;\n    }\n    static with(values, bitLength) {\n        var _a;\n        return _a = class extends CodecSet {\n                constructor(registry, value) {\n                    super(registry, values, value, bitLength);\n                }\n            },\n            (() => {\n                const keys = Object.keys(values);\n                const count = keys.length;\n                const isKeys = new Array(count);\n                for (let i = 0; i < count; i++) {\n                    isKeys[i] = `is${stringPascalCase(keys[i])}`;\n                }\n                objectProperties(_a.prototype, isKeys, (_, i, self) => self.strings.includes(keys[i]));\n            })(),\n            _a;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.__internal__byteLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description true is the Set contains no values\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description The actual set values as a string[]\n     */\n    get strings() {\n        return [...super.values()];\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n    get valueEncoded() {\n        return encodeSet(this.__internal__allowed, this.strings);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (Array.isArray(other)) {\n            // we don't actually care about the order, sort the values\n            return compareArray(this.strings.sort(), other.sort());\n        }\n        else if (other instanceof Set) {\n            return this.eq([...other.values()]);\n        }\n        else if (isNumber(other) || isBn(other)) {\n            return this.valueEncoded.eq(bnToBn(other));\n        }\n        return false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.strings;\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n    toNumber() {\n        return this.valueEncoded.toNumber();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify({ _set: this.__internal__allowed });\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return `[${this.strings.join(', ')}]`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this.valueEncoded, {\n            bitLength: this.__internal__byteLength * 8,\n            isLe: true\n        });\n    }\n}\n", "export { f32 as F32, f32 } from './F32.js';\nexport { f64 as F64, f64 } from './F64.js';\nexport { i8 as I8, i8 } from './I8.js';\nexport { i16 as I16, i16 } from './I16.js';\nexport { i32 as I32, i32 } from './I32.js';\nexport { i64 as I64, i64 } from './I64.js';\nexport { i128 as I128, i128 } from './I128.js';\nexport { i256 as I256, i256 } from './I256.js';\nexport { isize as ISize, isize } from './ISize.js';\nexport { u8 as U8, u8 } from './U8.js';\nexport { u16 as U16, u16 } from './U16.js';\nexport { u32 as U32, u32 } from './U32.js';\nexport { u64 as U64, u64 } from './U64.js';\nexport { u128 as U128, u128 } from './U128.js';\nexport { u256 as U256, u256 } from './U256.js';\nexport { usize as USize, usize } from './USize.js';\n", "import { Float } from '../native/Float.js';\n/**\n * @name f32\n * @description\n * A 32-bit float\n */\nexport class f32 extends Float.with(32) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__FloatType = 'f32';\n    }\n}\n", "import { Float } from '../native/Float.js';\n/**\n * @name f64\n * @description\n * A 64-bit float\n */\nexport class f64 extends Float.with(64) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__FloatType = 'f64';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i8\n * @description\n * An 8-bit signed integer\n */\nexport class i8 extends Int.with(8) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i8';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i16\n * @description\n * A 16-bit signed integer\n */\nexport class i16 extends Int.with(16) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i16';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i32\n * @description\n * A 32-bit signed integer\n */\nexport class i32 extends Int.with(32) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i32';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i64\n * @description\n * A 64-bit signed integer\n */\nexport class i64 extends Int.with(64) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i64';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i128\n * @description\n * A 128-bit signed integer\n */\nexport class i128 extends Int.with(128) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i128';\n    }\n}\n", "import { Int } from '../base/Int.js';\n/**\n * @name i256\n * @description\n * A 256-bit signed integer\n */\nexport class i256 extends Int.with(256) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__IntType = 'i256';\n    }\n}\n", "import { i32 } from './I32.js';\n/**\n * @name ISize\n * @description\n * A System default signed number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[I32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it creates consensus mismatches.\n */\nexport class isize extends i32 {\n    constructor(registry, value) {\n        super(registry, value);\n        throw new Error('The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.');\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u8\n * @description\n * An 8-bit unsigned integer\n */\nexport class u8 extends UInt.with(8) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u8';\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u16\n * @description\n * A 16-bit unsigned integer\n */\nexport class u16 extends UInt.with(16) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u16';\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u32\n * @description\n * A 32-bit unsigned integer\n */\nexport class u32 extends UInt.with(32) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u32';\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u64\n * @description\n * A 64-bit unsigned integer\n */\nexport class u64 extends UInt.with(64) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u64';\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u128\n * @description\n * A 128-bit unsigned integer\n */\nexport class u128 extends UInt.with(128) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u128';\n    }\n}\n", "import { UInt } from '../base/UInt.js';\n/**\n * @name u256\n * @description\n * A 256-bit unsigned integer\n */\nexport class u256 extends UInt.with(256) {\n    constructor() {\n        super(...arguments);\n        // NOTE without this, we cannot properly determine extensions\n        this.__UIntType = 'u256';\n    }\n}\n", "import { u32 } from './U32.js';\n/**\n * @name USize\n * @description\n * A System default unsigned number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it created consensus mismatches.\n */\nexport class usize extends u32 {\n    constructor(registry, value) {\n        super(registry, value);\n        throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');\n    }\n}\n", "import { sanitize } from '@polkadot/types-codec';\nimport { isNumber, isString, objectSpread } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nimport { typeSplit } from './typeSplit.js';\nconst KNOWN_INTERNALS = ['_alias', '_fallback'];\nfunction getTypeString(typeOrObj) {\n    return isString(typeOrObj)\n        ? typeOrObj.toString()\n        : JSON.stringify(typeOrObj);\n}\nfunction isRustEnum(details) {\n    const values = Object.values(details);\n    if (values.some((v) => isNumber(v))) {\n        if (!values.every((v) => isNumber(v) && v >= 0 && v <= 255)) {\n            throw new Error('Invalid number-indexed enum definition');\n        }\n        return false;\n    }\n    return true;\n}\nfunction _decodeEnum(value, details, count, fallbackType) {\n    value.info = TypeDefInfo.Enum;\n    value.fallbackType = fallbackType;\n    // not as pretty, but remain compatible with oo7 for both struct and Array types\n    if (Array.isArray(details)) {\n        value.sub = details.map((name, index) => ({\n            index,\n            info: TypeDefInfo.Plain,\n            name,\n            type: 'Null'\n        }));\n    }\n    else if (isRustEnum(details)) {\n        value.sub = Object.entries(details).map(([name, typeOrObj], index) => objectSpread({}, getTypeDef(getTypeString(typeOrObj || 'Null'), { name }, count), { index }));\n    }\n    else {\n        value.sub = Object.entries(details).map(([name, index]) => ({\n            index,\n            info: TypeDefInfo.Plain,\n            name,\n            type: 'Null'\n        }));\n    }\n    return value;\n}\nfunction _decodeSet(value, details, fallbackType) {\n    value.info = TypeDefInfo.Set;\n    value.fallbackType = fallbackType;\n    value.length = details._bitLength;\n    value.sub = Object\n        .entries(details)\n        .filter(([name]) => !name.startsWith('_'))\n        .map(([name, index]) => ({\n        index,\n        info: TypeDefInfo.Plain,\n        name,\n        type: 'Null'\n    }));\n    return value;\n}\nfunction _decodeStruct(value, type, _, count) {\n    const parsed = JSON.parse(type);\n    const keys = Object.keys(parsed);\n    if (parsed._enum) {\n        return _decodeEnum(value, parsed._enum, count, parsed._fallback);\n    }\n    else if (parsed._set) {\n        return _decodeSet(value, parsed._set, parsed._fallback);\n    }\n    value.alias = parsed._alias\n        ? new Map(Object.entries(parsed._alias))\n        : undefined;\n    value.fallbackType = parsed._fallback;\n    value.sub = keys\n        .filter((name) => !KNOWN_INTERNALS.includes(name))\n        .map((name) => getTypeDef(getTypeString(parsed[name]), { name }, count));\n    return value;\n}\nfunction _decodeFixedVec(value, type, _, count) {\n    const max = type.length - 1;\n    let index = -1;\n    let inner = 0;\n    for (let i = 1; (i < max) && (index === -1); i++) {\n        switch (type[i]) {\n            case ';': {\n                if (inner === 0) {\n                    index = i;\n                }\n                break;\n            }\n            case '[':\n            case '(':\n            case '<':\n                inner++;\n                break;\n            case ']':\n            case ')':\n            case '>':\n                inner--;\n                break;\n        }\n    }\n    if (index === -1) {\n        throw new Error(`${type}: Unable to extract location of ';'`);\n    }\n    const vecType = type.substring(1, index);\n    const [strLength, displayName] = type.substring(index + 1, max).split(';');\n    const length = parseInt(strLength.trim(), 10);\n    if (length > 2048) {\n        throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);\n    }\n    value.displayName = displayName;\n    value.length = length;\n    value.sub = getTypeDef(vecType, {}, count);\n    return value;\n}\nfunction _decodeTuple(value, _, subType, count) {\n    value.sub = subType.length === 0\n        ? []\n        : typeSplit(subType).map((inner) => getTypeDef(inner, {}, count));\n    return value;\n}\nfunction _decodeAnyInt(value, type, _, clazz) {\n    const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');\n    const length = parseInt(strLength.trim(), 10);\n    if ((length > 8192) || (length % 8)) {\n        throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);\n    }\n    value.displayName = displayName;\n    value.length = length;\n    return value;\n}\nfunction _decodeInt(value, type, subType) {\n    return _decodeAnyInt(value, type, subType, 'Int');\n}\nfunction _decodeUInt(value, type, subType) {\n    return _decodeAnyInt(value, type, subType, 'UInt');\n}\nfunction _decodeDoNotConstruct(value, type, _) {\n    const NAME_LENGTH = 'DoNotConstruct'.length;\n    value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);\n    return value;\n}\nfunction hasWrapper(type, [start, end]) {\n    return (type.substring(0, start.length) === start) && (type.slice(-1 * end.length) === end);\n}\nconst nestedExtraction = [\n    ['[', ']', TypeDefInfo.VecFixed, _decodeFixedVec],\n    ['{', '}', TypeDefInfo.Struct, _decodeStruct],\n    ['(', ')', TypeDefInfo.Tuple, _decodeTuple],\n    // the inner for these are the same as tuple, multiple values\n    ['BTreeMap<', '>', TypeDefInfo.BTreeMap, _decodeTuple],\n    ['HashMap<', '>', TypeDefInfo.HashMap, _decodeTuple],\n    ['Int<', '>', TypeDefInfo.Int, _decodeInt],\n    ['Result<', '>', TypeDefInfo.Result, _decodeTuple],\n    ['UInt<', '>', TypeDefInfo.UInt, _decodeUInt],\n    ['DoNotConstruct<', '>', TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]\n];\nconst wrappedExtraction = [\n    ['BTreeSet<', '>', TypeDefInfo.BTreeSet],\n    ['Compact<', '>', TypeDefInfo.Compact],\n    ['Linkage<', '>', TypeDefInfo.Linkage],\n    ['Opaque<', '>', TypeDefInfo.WrapperOpaque],\n    ['Option<', '>', TypeDefInfo.Option],\n    ['Range<', '>', TypeDefInfo.Range],\n    ['RangeInclusive<', '>', TypeDefInfo.RangeInclusive],\n    ['Vec<', '>', TypeDefInfo.Vec],\n    ['WrapperKeepOpaque<', '>', TypeDefInfo.WrapperKeepOpaque],\n    ['WrapperOpaque<', '>', TypeDefInfo.WrapperOpaque]\n];\nfunction extractSubType(type, [start, end]) {\n    return type.substring(start.length, type.length - end.length);\n}\nexport function getTypeDef(_type, { displayName, name } = {}, count = 0) {\n    // create the type via Type, allowing types to be sanitized\n    const type = sanitize(_type);\n    const value = { displayName, info: TypeDefInfo.Plain, name, type };\n    if (++count > 64) {\n        throw new Error('getTypeDef: Maximum nested limit reached');\n    }\n    const nested = nestedExtraction.find((nested) => hasWrapper(type, nested));\n    if (nested) {\n        value.info = nested[2];\n        return nested[3](value, type, extractSubType(type, nested), count);\n    }\n    const wrapped = wrappedExtraction.find((wrapped) => hasWrapper(type, wrapped));\n    if (wrapped) {\n        value.info = wrapped[2];\n        value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);\n    }\n    return value;\n}\n", "export function typeSplit(type) {\n    const result = [];\n    // these are the depths of the various tokens: <, [, {, (\n    let c = 0;\n    let f = 0;\n    let s = 0;\n    let t = 0;\n    // current start position\n    let start = 0;\n    for (let i = 0, count = type.length; i < count; i++) {\n        switch (type[i]) {\n            // if we are not nested, add the type\n            case ',': {\n                if (!(c || f || s || t)) {\n                    result.push(type.substring(start, i).trim());\n                    start = i + 1;\n                }\n                break;\n            }\n            // adjust compact/vec (and friends) depth\n            case '<':\n                c++;\n                break;\n            case '>':\n                c--;\n                break;\n            // adjust fixed vec depths\n            case '[':\n                f++;\n                break;\n            case ']':\n                f--;\n                break;\n            // adjust struct depth\n            case '{':\n                s++;\n                break;\n            case '}':\n                s--;\n                break;\n            // adjust tuple depth\n            case '(':\n                t++;\n                break;\n            case ')':\n                t--;\n                break;\n        }\n    }\n    // ensure we have all the terminators taken care of\n    if (c || f || s || t) {\n        throw new Error(`Invalid definition (missing terminators) found in ${type}`);\n    }\n    // the final leg of the journey\n    result.push(type.substring(start, type.length).trim());\n    return result;\n}\n", "import { Option } from '@polkadot/types-codec';\nimport { isHex, isU8a, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { createClassUnsafe } from './class.js';\nfunction checkInstance(created, matcher) {\n    const u8a = created.toU8a();\n    const rawType = created.toRawType();\n    const isOk = (\n    // full match, all ok\n    u8aEq(u8a, matcher) ||\n        (\n        // on a length-prefixed type, just check the actual length\n        ['Bytes', 'Text', 'Type'].includes(rawType) &&\n            matcher.length === created.length) ||\n        (\n        // when the created is empty and matcher is also empty, let it slide...\n        created.isEmpty &&\n            matcher.every((v) => !v)));\n    if (!isOk) {\n        throw new Error(`${rawType}:: Decoded input doesn't match input, received ${u8aToHex(matcher, 512)} (${matcher.length} bytes), created ${u8aToHex(u8a, 512)} (${u8a.length} bytes)`);\n    }\n}\nfunction checkPedantic(created, [value]) {\n    if (isU8a(value)) {\n        checkInstance(created, value);\n    }\n    else if (isHex(value)) {\n        checkInstance(created, u8aToU8a(value));\n    }\n}\nfunction initType(registry, Type, params = [], { blockHash, isFallback, isOptional, isPedantic } = {}) {\n    const created = new (isOptional\n        ? Option.with(Type)\n        : Type)(registry, ...params);\n    isPedantic && checkPedantic(created, params);\n    if (blockHash) {\n        created.createdAtHash = createTypeUnsafe(registry, 'BlockHash', [blockHash]);\n    }\n    if (isFallback) {\n        created.isStorageFallback = true;\n    }\n    return created;\n}\nexport function createTypeUnsafe(registry, type, params = [], options = {}) {\n    let Clazz = null;\n    let firstError = null;\n    try {\n        Clazz = createClassUnsafe(registry, type);\n        return initType(registry, Clazz, params, options);\n    }\n    catch (error) {\n        firstError = new Error(`createType(${type}):: ${error.message}`);\n    }\n    if (Clazz && Clazz.__fallbackType) {\n        try {\n            Clazz = createClassUnsafe(registry, Clazz.__fallbackType);\n            return initType(registry, Clazz, params, options);\n        }\n        catch {\n            // swallow, we will throw the first error again\n        }\n    }\n    throw firstError;\n}\n", "export * from './encodeTypes.js';\nexport * from './getTypeDef.js';\nexport * from './typeSplit.js';\nexport * from './xcm.js';\n", "import { isNumber, isUndefined, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nconst stringIdentity = (value) => value.toString();\nconst INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];\nexport function paramsNotation(outer, inner, transform = stringIdentity) {\n    return `${outer}${inner\n        ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>`\n        : ''}`;\n}\nfunction encodeWithParams(registry, typeDef, outer) {\n    const { info, sub } = typeDef;\n    switch (info) {\n        case TypeDefInfo.BTreeMap:\n        case TypeDefInfo.BTreeSet:\n        case TypeDefInfo.Compact:\n        case TypeDefInfo.HashMap:\n        case TypeDefInfo.Linkage:\n        case TypeDefInfo.Option:\n        case TypeDefInfo.Range:\n        case TypeDefInfo.RangeInclusive:\n        case TypeDefInfo.Result:\n        case TypeDefInfo.Vec:\n        case TypeDefInfo.WrapperKeepOpaque:\n        case TypeDefInfo.WrapperOpaque:\n            return paramsNotation(outer, sub, (p) => encodeTypeDef(registry, p));\n    }\n    throw new Error(`Unable to encode ${stringify(typeDef)} with params`);\n}\nfunction encodeSubTypes(registry, sub, asEnum, extra) {\n    const names = sub.map(({ name }) => name);\n    if (!names.every((n) => !!n)) {\n        throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);\n    }\n    const inner = objectSpread({}, extra);\n    for (let i = 0, count = sub.length; i < count; i++) {\n        const def = sub[i];\n        inner[def.name] = encodeTypeDef(registry, def);\n    }\n    return stringify(asEnum\n        ? { _enum: inner }\n        : inner);\n}\nconst encoders = {\n    [TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),\n    [TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),\n    [TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),\n    [TypeDefInfo.DoNotConstruct]: (registry, { displayName, lookupIndex, lookupName }) => `DoNotConstruct<${lookupName || displayName || (isUndefined(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,\n    [TypeDefInfo.Enum]: (registry, { sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Enum type');\n        }\n        // c-like enums have all Null entries\n        // TODO We need to take the disciminant into account and auto-add empty entries\n        return sub.every(({ type }) => type === 'Null')\n            ? stringify({ _enum: sub.map(({ name }, index) => `${name || `Empty${index}`}`) })\n            : encodeSubTypes(registry, sub, true);\n    },\n    [TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),\n    [TypeDefInfo.Int]: (_registry, { length = 32 }) => `Int<${length}>`,\n    [TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),\n    [TypeDefInfo.Null]: (_registry, _typeDef) => 'Null',\n    [TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),\n    [TypeDefInfo.Plain]: (_registry, { displayName, type }) => displayName || type,\n    [TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),\n    [TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),\n    [TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),\n    [TypeDefInfo.Set]: (_registry, { length = 8, sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Set type');\n        }\n        return stringify({\n            _set: sub.reduce((all, { index, name }, count) => objectSpread(all, { [`${name || `Unknown${index || count}`}`]: index || count }), { _bitLength: length || 8 })\n        });\n    },\n    [TypeDefInfo.Si]: (_registry, { lookupName, type }) => lookupName || type,\n    [TypeDefInfo.Struct]: (registry, { alias, sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Struct type');\n        }\n        return encodeSubTypes(registry, sub, false, alias\n            ? {\n                _alias: [...alias.entries()].reduce((all, [k, v]) => objectSpread(all, { [k]: v }), {})\n            }\n            : {});\n    },\n    [TypeDefInfo.Tuple]: (registry, { sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Tuple type');\n        }\n        return `(${sub.map((type) => encodeTypeDef(registry, type)).join(',')})`;\n    },\n    [TypeDefInfo.UInt]: (_registry, { length = 32 }) => `UInt<${length}>`,\n    [TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),\n    [TypeDefInfo.VecFixed]: (_registry, { length, sub }) => {\n        if (!isNumber(length) || !sub || Array.isArray(sub)) {\n            throw new Error('Unable to encode VecFixed type');\n        }\n        return `[${sub.type};${length}]`;\n    },\n    [TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),\n    [TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')\n};\nfunction encodeType(registry, typeDef, withLookup = true) {\n    return withLookup && typeDef.lookupName\n        ? typeDef.lookupName\n        : encoders[typeDef.info](registry, typeDef);\n}\nexport function encodeTypeDef(registry, typeDef) {\n    // In the case of contracts we do have the unfortunate situation where the displayName would\n    // refer to \"Option\" when it is an option. For these, string it out, only using when actually\n    // not a top-level element to be used\n    return (typeDef.displayName && !INFO_WRAP.some((i) => typeDef.displayName === i))\n        ? typeDef.displayName\n        : encodeType(registry, typeDef);\n}\nexport function withTypeString(registry, typeDef) {\n    return objectSpread({}, typeDef, {\n        type: encodeType(registry, typeDef, false)\n    });\n}\n", "import { objectSpread } from '@polkadot/util';\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nexport function mapXcmTypes(version) {\n    return XCM_MAPPINGS.reduce((all, key) => objectSpread(all, { [key]: `${key}${version}` }), {});\n}\n", "export const v0 = {\n    FungibilityV0: 'FungibilityV1',\n    WildFungibilityV0: 'WildFungibilityV1',\n    AssetInstanceV0: {\n        _enum: {\n            Undefined: 'Null',\n            Index8: 'u8',\n            Index16: 'Compact<u16>',\n            Index32: 'Compact<u32>',\n            Index64: 'Compact<u64>',\n            Index128: 'Compact<u128>',\n            Array4: '[u8; 4]',\n            Array8: '[u8; 8]',\n            Array16: '[u8; 16]',\n            Array32: '[u8; 32]',\n            Blob: 'Vec<u8>'\n        }\n    },\n    JunctionV0: {\n        _enum: {\n            Parent: 'Null',\n            Parachain: 'Compact<u32>',\n            AccountId32: {\n                network: 'NetworkId',\n                id: 'AccountId'\n            },\n            AccountIndex64: {\n                network: 'NetworkId',\n                index: 'Compact<u64>'\n            },\n            AccountKey20: {\n                network: 'NetworkId',\n                key: '[u8; 20]'\n            },\n            PalletInstance: 'u8',\n            GeneralIndex: 'Compact<u128>',\n            GeneralKey: 'Vec<u8>',\n            OnlyChild: 'Null',\n            Plurality: {\n                id: 'BodyId',\n                part: 'BodyPart'\n            }\n        }\n    },\n    MultiAssetV0: {\n        _enum: {\n            None: 'Null',\n            All: 'Null',\n            AllFungible: 'Null',\n            AllNonFungible: 'Null',\n            AllAbstractFungible: 'Vec<u8>',\n            AllAbstractNonFungible: 'Vec<u8>',\n            AllConcreteFungible: 'MultiLocationV0',\n            AllConcreteNonFungible: 'MultiLocationV0',\n            AbstractFungible: {\n                id: 'Vec<u8>',\n                instance: 'Compact<u128>'\n            },\n            AbstractNonFungible: {\n                class: 'Vec<u8>',\n                instance: 'AssetInstanceV0'\n            },\n            ConcreteFungible: {\n                id: 'MultiLocationV0',\n                amount: 'Compact<u128>'\n            },\n            ConcreteNonFungible: {\n                class: 'MultiLocationV0',\n                instance: 'AssetInstanceV0'\n            }\n        }\n    },\n    MultiLocationV0: {\n        _enum: {\n            Here: 'Null',\n            X1: 'JunctionV0',\n            X2: '(JunctionV0, JunctionV0)',\n            X3: '(JunctionV0, JunctionV0, JunctionV0)',\n            X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'\n        }\n    },\n    OriginKindV0: {\n        _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    ResponseV0: {\n        _enum: {\n            Assets: 'Vec<MultiAssetV0>'\n        }\n    },\n    XcmV0: {\n        _enum: {\n            WithdrawAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ReserveAssetDeposit: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ReceiveTeleportedAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV0'\n            },\n            TransferAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0'\n            },\n            TransferReserveAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            Transact: {\n                originType: 'XcmOriginKind',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            RelayedFrom: {\n                who: 'MultiLocationV0',\n                message: 'XcmV0'\n            }\n        }\n    },\n    XcmErrorV0: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            SendFailed: 'Null',\n            CannotReachDestination: '(MultiLocation, Xcm)',\n            MultiLocationFull: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            RecursionLimitReached: 'Null'\n        }\n    },\n    XcmOrderV0: {\n        _enum: {\n            Null: 'Null',\n            DepositAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0'\n            },\n            DepositReserveAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ExchangeAsset: {\n                give: 'Vec<MultiAssetV0>',\n                receive: 'Vec<MultiAssetV0>'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'Vec<MultiAssetV0>',\n                reserve: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            InitiateTeleport: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            QueryHolding: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV0',\n                assets: 'Vec<MultiAssetV0>'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV0',\n                weight: 'u64',\n                debt: 'u64',\n                haltOnError: 'bool',\n                xcm: 'Vec<XcmV0>'\n            }\n        }\n    }\n};\n", "export const v1 = {\n    AssetInstanceV1: {\n        _enum: {\n            Undefined: 'Null',\n            Index: 'Compact<u128>',\n            Array4: '[u8; 4]',\n            Array8: '[u8; 8]',\n            Array16: '[u8; 16]',\n            Array32: '[u8; 32]',\n            Blob: 'Bytes'\n        }\n    },\n    FungibilityV1: {\n        _enum: {\n            Fungible: 'Compact<u128>',\n            NonFungible: 'AssetInstanceV1'\n        }\n    },\n    JunctionV1: {\n        _enum: {\n            Parachain: 'Compact<u32>',\n            AccountId32: {\n                network: 'NetworkId',\n                id: 'AccountId'\n            },\n            AccountIndex64: {\n                network: 'NetworkId',\n                index: 'Compact<u64>'\n            },\n            AccountKey20: {\n                network: 'NetworkId',\n                key: '[u8; 20]'\n            },\n            PalletInstance: 'u8',\n            GeneralIndex: 'Compact<u128>',\n            GeneralKey: 'Vec<u8>',\n            OnlyChild: 'Null',\n            Plurality: {\n                id: 'BodyId',\n                part: 'BodyPart'\n            }\n        }\n    },\n    JunctionsV1: {\n        _enum: {\n            Here: 'Null',\n            X1: 'JunctionV1',\n            X2: '(JunctionV1, JunctionV1)',\n            X3: '(JunctionV1, JunctionV1, JunctionV1)',\n            X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'\n        }\n    },\n    MultiAssetsV1: 'Vec<MultiAssetV1>',\n    MultiAssetV1: {\n        id: 'XcmAssetId',\n        fungibility: 'FungibilityV1'\n    },\n    MultiAssetFilterV1: {\n        _enum: {\n            Definite: 'MultiAssetsV1',\n            Wild: 'WildMultiAssetV1'\n        }\n    },\n    MultiLocationV1: {\n        parents: 'u8',\n        interior: 'JunctionsV1'\n    },\n    OriginKindV1: 'OriginKindV0',\n    ResponseV1: {\n        _enum: {\n            Assets: 'MultiAssetsV1'\n        }\n    },\n    WildFungibilityV1: {\n        _enum: ['Fungible', 'NonFungible']\n    },\n    WildMultiAssetV1: {\n        _enum: {\n            All: 'Null',\n            AllOf: {\n                id: 'XcmAssetId',\n                fungibility: 'WildFungibilityV1'\n            }\n        }\n    },\n    XcmV1: {\n        _enum: {\n            WithdrawAsset: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ReserveAssetDeposit: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ReceiveTeleportedAsset: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV1'\n            },\n            TransferAsset: {\n                assets: 'MultiAssetsV1',\n                dest: 'MultiLocationV1'\n            },\n            TransferReserveAsset: {\n                assets: 'MultiAssetsV1',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            Transact: {\n                originType: 'XcmOriginKind',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            RelayedFrom: {\n                who: 'MultiLocationV1',\n                message: 'XcmV1'\n            }\n        }\n    },\n    XcmErrorV1: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            SendFailed: 'Null',\n            CannotReachDestination: '(MultiLocationV1, XcmV1)',\n            MultiLocationFull: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            DestinationUnsupported: 'Null',\n            RecursionLimitReached: 'Null'\n        }\n    },\n    XcmOrderV1: {\n        _enum: {\n            Noop: 'Null',\n            DepositAsset: {\n                assets: 'MultiAssetFilterV1',\n                maxAssets: 'u32',\n                beneficiary: 'MultiLocationV1'\n            },\n            DepositReserveAsset: {\n                assets: 'MultiAssetFilterV1',\n                maxAssets: 'u32',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ExchangeAsset: {\n                give: 'MultiAssetFilterV1',\n                receive: 'MultiAssetsV1'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'MultiAssetFilterV1',\n                reserve: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            InitiateTeleport: {\n                assets: 'MultiAssetFilterV1',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            QueryHolding: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV1',\n                assets: 'MultiAssetFilterV1'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV1',\n                weight: 'u64',\n                debt: 'u64',\n                haltOnError: 'bool',\n                instructions: 'Vec<XcmV1>'\n            }\n        }\n    }\n};\n", "export const v2 = {\n    AssetInstanceV2: 'AssetInstanceV1',\n    FungibilityV2: 'FungibilityV1',\n    JunctionV2: 'JunctionV1',\n    JunctionsV2: 'JunctionsV1',\n    MultiAssetsV2: 'MultiAssetsV1',\n    MultiAssetV2: 'MultiAssetV1',\n    MultiAssetFilterV2: 'MultiAssetFilterV1',\n    MultiLocationV2: 'MultiLocationV1',\n    OriginKindV2: 'OriginKindV1',\n    WildFungibilityV2: 'WildFungibilityV1',\n    ResponseV2: {\n        _enum: {\n            Null: 'Null',\n            Assets: 'MultiAssetsV2',\n            ExecutionResult: 'ResponseV2Result'\n        }\n    },\n    ResponseV2Error: '(u32, XcmErrorV2)',\n    ResponseV2Result: 'Result<Null, ResponseV2Error>',\n    WeightLimitV2: {\n        _enum: {\n            Unlimited: 'Null',\n            Limited: 'Compact<u64>'\n        }\n    },\n    InstructionV2: {\n        _enum: {\n            WithdrawAsset: 'MultiAssetsV2',\n            ReserveAssetDeposited: 'MultiAssetsV2',\n            ReceiveTeleportedAsset: 'MultiAssetsV2',\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV2',\n                maxWeight: 'Compact<u64>'\n            },\n            TransferAsset: {\n                assets: 'MultiAssetsV2',\n                beneficiary: 'MultiLocationV2'\n            },\n            TransferReserveAsset: {\n                assets: 'MultiAssetsV2',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            Transact: {\n                originType: 'OriginKindV2',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            ClearOrigin: 'Null',\n            DescendOrigin: 'InteriorMultiLocation',\n            ReportError: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV2',\n                maxResponseWeight: 'Compact<u64>'\n            },\n            DepositAsset: {\n                assets: 'MultiAssetFilterV2',\n                maxAssets: 'u32',\n                beneficiary: 'MultiLocationV2'\n            },\n            DepositReserveAsset: {\n                assets: 'MultiAssetFilterV2',\n                maxAssets: 'u32',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            ExchangeAsset: {\n                give: 'MultiAssetFilterV2',\n                receive: 'MultiAssetsV2'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'MultiAssetFilterV2',\n                reserve: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            InitiateTeleport: {\n                assets: 'MultiAssetFilterV2',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            QueryHolding: {\n                query_id: 'Compact<u64>',\n                dest: 'MultiLocationV2',\n                assets: 'MultiAssetFilterV2',\n                maxResponse_Weight: 'Compact<u64>'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV2',\n                weightLimit: 'WeightLimitV2'\n            },\n            RefundSurplus: 'Null',\n            SetErrorHandler: 'XcmV2',\n            SetAppendix: 'XcmV2',\n            ClearError: 'Null',\n            ClaimAsset: {\n                assets: 'MultiAssetsV2',\n                ticket: 'MultiLocationV2'\n            },\n            Trap: 'u64'\n        }\n    },\n    WildMultiAssetV2: 'WildMultiAssetV1',\n    XcmV2: 'Vec<InstructionV2>',\n    XcmErrorV2: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            MultiLocationFull: 'Null',\n            MultiLocationNotInvertible: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            DestinationUnsupported: 'Null',\n            RecursionLimitReached: 'Null',\n            Transport: 'Null',\n            Unroutable: 'Null',\n            UnknownWeightRequired: 'Null',\n            Trap: 'u64',\n            UnknownClaim: 'Null',\n            InvalidLocation: 'Null'\n        }\n    },\n    XcmOrderV2: 'XcmOrderV1'\n};\n", "/* eslint-disable sort-keys */\nconst layout = {\n    ContractCryptoHasher: {\n        _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n    },\n    ContractDiscriminant: 'u32',\n    ContractLayoutArray: {\n        offset: 'ContractLayoutKey',\n        len: 'u32',\n        cellsPerElem: 'u64',\n        layout: 'ContractStorageLayout'\n    },\n    ContractLayoutCell: {\n        key: 'ContractLayoutKey',\n        ty: 'SiLookupTypeId'\n    },\n    ContractLayoutEnum: {\n        dispatchKey: 'ContractLayoutKey',\n        variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'\n    },\n    ContractLayoutHash: {\n        offset: 'ContractLayoutKey',\n        strategy: 'ContractLayoutHashingStrategy',\n        layout: 'ContractStorageLayout'\n    },\n    ContractLayoutHashingStrategy: {\n        hasher: 'ContractCryptoHasher',\n        postfix: 'Vec<u8>',\n        prefix: 'Vec<u8>'\n    },\n    ContractLayoutKey: '[u8; 32]',\n    ContractLayoutStruct: {\n        fields: 'Vec<ContractLayoutStructField>'\n    },\n    ContractLayoutStructField: {\n        layout: 'ContractStorageLayout',\n        name: 'Text'\n    },\n    ContractStorageLayout: {\n        _enum: {\n            Cell: 'ContractLayoutCell',\n            Hash: 'ContractLayoutHash',\n            Array: 'ContractLayoutArray',\n            Struct: 'ContractLayoutStruct',\n            Enum: 'ContractLayoutEnum'\n        }\n    }\n};\nconst spec = {\n    ContractConstructorSpecV0: {\n        name: 'Text',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV1: {\n        name: 'Vec<Text>',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV2: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV3: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV4: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>',\n        default: 'bool',\n        returnType: 'Option<ContractTypeSpec>'\n    },\n    ContractContractSpecV0: {\n        constructors: 'Vec<ContractConstructorSpecV0>',\n        messages: 'Vec<ContractMessageSpecV0>',\n        events: 'Vec<ContractEventSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV1: {\n        constructors: 'Vec<ContractConstructorSpecV1>',\n        messages: 'Vec<ContractMessageSpecV1>',\n        events: 'Vec<ContractEventSpecV1>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV2: {\n        constructors: 'Vec<ContractConstructorSpecV2>',\n        messages: 'Vec<ContractMessageSpecV2>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV3: {\n        constructors: 'Vec<ContractConstructorSpecV3>',\n        messages: 'Vec<ContractMessageSpecV2>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV4: {\n        constructors: 'Vec<ContractConstructorSpecV4>',\n        messages: 'Vec<ContractMessageSpecV3>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>',\n        environment: 'ContractEnvironmentV4'\n    },\n    ContractDisplayName: 'SiPath',\n    ContractEventParamSpecV0: {\n        name: 'Text',\n        indexed: 'bool',\n        type: 'ContractTypeSpec',\n        docs: 'Vec<Text>'\n    },\n    ContractEventParamSpecV2: {\n        label: 'Text',\n        indexed: 'bool',\n        type: 'ContractTypeSpec',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV0: {\n        name: 'Text',\n        args: 'Vec<ContractEventParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV1: {\n        name: 'Text',\n        args: 'Vec<ContractEventParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV2: {\n        label: 'Text',\n        args: 'Vec<ContractEventParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageParamSpecV0: {\n        name: 'Text',\n        type: 'ContractTypeSpec'\n    },\n    ContractMessageParamSpecV2: {\n        label: 'Text',\n        type: 'ContractTypeSpec'\n    },\n    ContractMessageSpecV0: {\n        name: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV1: {\n        name: 'Vec<Text>',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV2: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV3: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>',\n        default: 'bool'\n    },\n    ContractSelector: '[u8; 4]',\n    ContractTypeSpec: {\n        type: 'SiLookupTypeId',\n        displayName: 'ContractDisplayName'\n    }\n};\nconst latest = {\n    ContractConstructorSpecLatest: 'ContractConstructorSpecV4',\n    ContractEventSpecLatest: 'ContractEventSpecV2',\n    ContractEventParamSpecLatest: 'ContractEventParamSpecV2',\n    ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',\n    ContractMessageSpecLatest: 'ContractMessageSpecV3',\n    ContractMetadataLatest: 'ContractMetadataV4'\n};\nexport default {\n    rpc: {},\n    types: {\n        ...layout,\n        ...spec,\n        ...latest,\n        ContractProjectInfo: {\n            source: 'ContractProjectSource',\n            contract: 'ContractProjectContract'\n        },\n        ContractMetadataV0: {\n            metadataVersion: 'Text',\n            types: 'Vec<Si0Type>',\n            spec: 'ContractContractSpecV0'\n        },\n        ContractMetadataV1: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV1'\n        },\n        ContractMetadataV2: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV2'\n        },\n        ContractMetadataV3: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV3'\n        },\n        ContractMetadataV4: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV4'\n        },\n        ContractMetadata: {\n            _enum: {\n                V0: 'ContractMetadataV0',\n                V1: 'ContractMetadataV1',\n                V2: 'ContractMetadataV2',\n                V3: 'ContractMetadataV3',\n                V4: 'ContractMetadataV4'\n            }\n        },\n        ContractProjectV0: {\n            metadataVersion: 'Text',\n            source: 'ContractProjectSource',\n            contract: 'ContractProjectContract',\n            types: 'Vec<Si0Type>',\n            spec: 'ContractContractSpecV0'\n        },\n        ContractProject: '(ContractProjectInfo, ContractMetadata)',\n        ContractProjectContract: {\n            _alias: {\n                docs: 'documentation'\n            },\n            name: 'Text',\n            version: 'Text',\n            authors: 'Vec<Text>',\n            description: 'Option<Text>',\n            docs: 'Option<Text>',\n            repository: 'Option<Text>',\n            homepage: 'Option<Text>',\n            license: 'Option<Text>'\n        },\n        ContractProjectSource: {\n            _alias: {\n                wasmHash: 'hash'\n            },\n            wasmHash: '[u8; 32]',\n            language: 'Text',\n            compiler: 'Text',\n            wasm: 'Raw'\n        },\n        ContractEnvironmentV4: {\n            _alias: {\n                hashType: 'hash'\n            },\n            // NOTE These are not marked optional in the Rust code, however since we\n            // convert from older versions to newer, we may not have these fields.\n            // The Option<...> works since our inputs are always JSON, so it will\n            // be None when not specified.\n            //\n            // Additionally we don't mark the full structure as Option, rather we\n            // do it on a per-field basis since fields may be added as the versions\n            // progress.\n            accountId: 'Option<ContractTypeSpec>',\n            balance: 'Option<ContractTypeSpec>',\n            blockNumber: 'Option<ContractTypeSpec>',\n            hashType: 'Option<ContractTypeSpec>',\n            timestamp: 'Option<ContractTypeSpec>',\n            maxEventTopics: 'Option<u32>'\n        }\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nconst V0 = {\n    BlockV0: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV0>',\n        ommers: 'Vec<EthHeader>'\n    },\n    LegacyTransaction: {\n        nonce: 'U256',\n        gasPrice: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        signature: 'EthTransactionSignature'\n    },\n    TransactionV0: 'LegacyTransaction'\n};\nconst V1 = {\n    BlockV1: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV1>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EIP2930Transaction: {\n        chainId: 'u64',\n        nonce: 'U256',\n        gasPrice: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        accessList: 'EthAccessList',\n        oddYParity: 'bool',\n        r: 'H256',\n        s: 'H256'\n    },\n    TransactionV1: {\n        _enum: {\n            Legacy: 'LegacyTransaction',\n            EIP2930: 'EIP2930Transaction'\n        }\n    }\n};\nconst V2 = {\n    BlockV2: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV2>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EIP1559Transaction: {\n        chainId: 'u64',\n        nonce: 'U256',\n        maxPriorityFeePerGas: 'U256',\n        maxFeePerGas: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        accessList: 'EthAccessList',\n        oddYParity: 'bool',\n        r: 'H256',\n        s: 'H256'\n    },\n    TransactionV2: {\n        _enum: {\n            Legacy: 'LegacyTransaction',\n            EIP2930: 'EIP2930Transaction',\n            EIP1559: 'EIP1559Transaction'\n        }\n    }\n};\nconst types = {\n    ...V0,\n    ...V1,\n    ...V2,\n    EthereumAccountId: 'GenericEthereumAccountId',\n    EthereumAddress: 'GenericEthereumAccountId',\n    EthereumLookupSource: 'GenericEthereumLookupSource',\n    EthereumSignature: '[u8; 65]',\n    EthAccessListItem: {\n        address: 'EthAddress',\n        slots: 'Vec<H256>'\n    },\n    EthAccessList: 'Vec<EthAccessListItem>',\n    EthAccount: {\n        address: 'EthAddress',\n        balance: 'U256',\n        nonce: 'U256',\n        codeHash: 'H256',\n        storageHash: 'H256',\n        accountProof: 'Vec<Bytes>',\n        storageProof: 'Vec<EthStorageProof>'\n    },\n    EthAddress: 'H160',\n    EthBlock: {\n        header: 'EthHeader',\n        transactions: 'Vec<EthTransaction>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EthHeader: {\n        parentHash: 'H256',\n        ommersHash: 'H256',\n        beneficiary: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        logsBloom: 'EthBloom',\n        difficulty: 'U256',\n        number: 'U256',\n        gasLimit: 'U256',\n        gasUsed: 'U256',\n        timestamp: 'u64',\n        extraData: 'Bytes',\n        mixMash: 'H256',\n        nonce: 'H64'\n    },\n    EthRichBlock: {\n        _alias: {\n            blockHash: 'hash',\n            blockSize: 'size'\n        },\n        blockHash: 'Option<H256>',\n        parentHash: 'H256',\n        sha3Uncles: 'H256',\n        author: 'EthAddress',\n        miner: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        number: 'Option<U256>',\n        gasUsed: 'U256',\n        gasLimit: 'U256',\n        extraData: 'Bytes',\n        logsBloom: 'EthBloom',\n        timestamp: 'U256',\n        difficulty: 'U256',\n        totalDifficulty: 'Option<U256>',\n        sealFields: 'Vec<Bytes>',\n        uncles: 'Vec<H256>',\n        transactions: 'Vec<EthTransaction>',\n        blockSize: 'Option<U256>'\n    },\n    EthBloom: 'H2048',\n    EthCallRequest: {\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        gasPrice: 'Option<U256>',\n        gas: 'Option<U256>',\n        value: 'Option<U256>',\n        data: 'Option<Bytes>',\n        nonce: 'Option<U256>'\n    },\n    EthFeeHistory: {\n        oldestBlock: 'U256',\n        baseFeePerGas: 'Vec<U256>',\n        gasUsedRatio: 'Vec<f64>',\n        reward: 'Option<Vec<Vec<U256>>>'\n    },\n    EthFilter: {\n        fromBlock: 'Option<BlockNumber>',\n        toBlock: 'Option<BlockNumber>',\n        blockHash: 'Option<H256>',\n        address: 'Option<EthFilterAddress>',\n        topics: 'Option<EthFilterTopic>'\n    },\n    EthFilterAddress: {\n        _enum: {\n            Single: 'EthAddress',\n            Multiple: 'Vec<EthAddress>',\n            Null: 'Null'\n        }\n    },\n    EthFilterChanges: {\n        _enum: {\n            Logs: 'Vec<EthLog>',\n            Hashes: 'Vec<H256>',\n            Empty: 'Null'\n        }\n    },\n    EthFilterTopic: {\n        _enum: {\n            Single: 'EthFilterTopicInner',\n            Multiple: 'Vec<EthFilterTopicInner>',\n            Null: 'Null'\n        }\n    },\n    EthFilterTopicEntry: 'Option<H256>',\n    EthFilterTopicInner: {\n        _enum: {\n            Single: 'EthFilterTopicEntry',\n            Multiple: 'Vec<EthFilterTopicEntry>',\n            Null: 'Null'\n        }\n    },\n    EthRichHeader: {\n        _alias: {\n            blockHash: 'hash',\n            blockSize: 'size'\n        },\n        blockHash: 'Option<H256>',\n        parentHash: 'H256',\n        sha3Uncles: 'H256',\n        author: 'EthAddress',\n        miner: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        number: 'Option<U256>',\n        gasUsed: 'U256',\n        gasLimit: 'U256',\n        extraData: 'Bytes',\n        logsBloom: 'EthBloom',\n        timestamp: 'U256',\n        difficulty: 'U256',\n        sealFields: 'Vec<Bytes>',\n        blockSize: 'Option<U256>'\n    },\n    EthLog: {\n        address: 'EthAddress',\n        topics: 'Vec<H256>',\n        data: 'Bytes',\n        blockHash: 'Option<H256>',\n        blockNumber: 'Option<U256>',\n        transactionHash: 'Option<H256>',\n        transactionIndex: 'Option<U256>',\n        logIndex: 'Option<U256>',\n        transactionLogIndex: 'Option<U256>',\n        removed: 'bool'\n    },\n    EthReceipt: {\n        transactionHash: 'Option<H256>',\n        transactionIndex: 'Option<U256>',\n        blockHash: 'Option<H256>',\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        blockNumber: 'Option<U256>',\n        cumulativeGasUsed: 'U256',\n        gasUsed: 'Option<U256>',\n        contractAddress: 'Option<EthAddress>',\n        logs: 'Vec<EthLog>',\n        root: 'Option<H256>',\n        logsBloom: 'EthBloom',\n        statusCode: 'Option<U64>'\n    },\n    // not convinced, however the original commit matches, so... (maybe V3 is incorrect?)\n    EthReceiptV0: 'EthReceipt',\n    EthReceiptV3: 'EthReceipt',\n    EthStorageProof: {\n        key: 'U256',\n        value: 'U256',\n        proof: 'Vec<Bytes>'\n    },\n    EthSubKind: {\n        _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n    },\n    EthSubParams: {\n        _enum: {\n            None: 'Null',\n            Logs: 'EthFilter'\n        }\n    },\n    EthSubResult: {\n        _enum: {\n            Header: 'EthRichHeader',\n            Log: 'EthLog',\n            TransactionHash: 'H256',\n            SyncState: 'EthSyncStatus'\n        }\n    },\n    EthSyncInfo: {\n        startingBlock: 'U256',\n        currentBlock: 'U256',\n        highestBlock: 'U256',\n        warpChunksAmount: 'Option<U256>',\n        warpChunksProcessed: 'Option<U256>'\n    },\n    EthSyncStatus: {\n        _enum: {\n            Info: 'EthSyncInfo',\n            None: 'Null'\n        }\n    },\n    EthTransaction: {\n        hash: 'H256',\n        nonce: 'U256',\n        blockHash: 'Option<H256>',\n        blockNumber: 'Option<U256>',\n        transactionIndex: 'Option<U256>',\n        from: 'H160',\n        to: 'Option<H160>',\n        value: 'U256',\n        gasPrice: 'Option<U256>',\n        maxFeePerGas: 'Option<U256>',\n        maxPriorityFeePerGas: 'Option<U256>',\n        gas: 'U256',\n        input: 'Bytes',\n        creates: 'Option<H160>',\n        raw: 'Bytes',\n        publicKey: 'Option<H512>',\n        chainId: 'Option<U64>',\n        standardV: 'U256',\n        v: 'U256',\n        r: 'U256',\n        s: 'U256',\n        accessList: 'Option<Vec<EthAccessListItem>>',\n        transactionType: 'Option<U256>'\n    },\n    EthTransactionSignature: {\n        v: 'u64',\n        r: 'H256',\n        s: 'H256'\n    },\n    EthTransactionAction: {\n        _enum: {\n            Call: 'H160',\n            Create: 'Null'\n        }\n    },\n    EthTransactionCondition: {\n        _enum: {\n            block: 'u64',\n            time: 'u64'\n        }\n    },\n    EthTransactionRequest: {\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        gasPrice: 'Option<U256>',\n        gas: 'Option<U256>',\n        value: 'Option<U256>',\n        data: 'Option<Bytes>',\n        nonce: 'Option<U256>'\n    },\n    EthTransactionStatus: {\n        transactionHash: 'H256',\n        transactionIndex: 'u32',\n        from: 'EthAddress',\n        to: 'Option<EthAddress>',\n        contractAddress: 'Option<EthAddress>',\n        logs: 'Vec<EthLog>',\n        logsBloom: 'EthBloom'\n    },\n    EthWork: {\n        powHash: 'H256',\n        seedHash: 'H256',\n        target: 'H256',\n        number: 'Option<u64>'\n    }\n};\nexport default { rpc, runtime, types };\n", "const netRpc = {\n    listening: {\n        aliasSection: 'net',\n        description: 'Returns true if client is actively listening for network connections. Otherwise false.',\n        params: [],\n        type: 'bool'\n    },\n    peerCount: {\n        aliasSection: 'net',\n        description: 'Returns number of peers connected to node.',\n        params: [],\n        type: 'Text'\n    },\n    version: {\n        aliasSection: 'net',\n        description: 'Returns protocol version.',\n        params: [],\n        type: 'Text'\n    }\n};\nconst web3Rpc = {\n    clientVersion: {\n        aliasSection: 'web3',\n        description: 'Returns current client version.',\n        params: [],\n        type: 'Text'\n    },\n    sha3: {\n        aliasSection: 'web3',\n        description: 'Returns sha3 of the given data',\n        params: [{ name: 'data', type: 'Bytes' }],\n        type: 'H256'\n    }\n};\nexport const rpc = {\n    ...netRpc,\n    ...web3Rpc,\n    accounts: {\n        description: 'Returns accounts list.',\n        params: [],\n        type: 'Vec<H160>'\n    },\n    blockNumber: {\n        description: 'Returns the blockNumber',\n        params: [],\n        type: 'U256'\n    },\n    call: {\n        description: 'Call contract, returning the output data.',\n        params: [\n            {\n                name: 'request',\n                type: 'EthCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Bytes'\n    },\n    chainId: {\n        description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',\n        params: [],\n        type: 'U64'\n    },\n    coinbase: {\n        description: 'Returns block author.',\n        params: [],\n        type: 'H160'\n    },\n    estimateGas: {\n        description: 'Estimate gas needed for execution of given contract.',\n        params: [\n            {\n                name: 'request',\n                type: 'EthCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    feeHistory: {\n        description: 'Returns fee history for given block count & reward percentiles',\n        params: [\n            {\n                name: 'blockCount',\n                type: 'U256'\n            },\n            {\n                name: 'newestBlock',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'rewardPercentiles',\n                type: 'Option<Vec<f64>>'\n            }\n        ],\n        type: 'EthFeeHistory'\n    },\n    gasPrice: {\n        description: 'Returns current gas price.',\n        params: [],\n        type: 'U256'\n    },\n    getBalance: {\n        description: 'Returns balance of the given account.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getBlockByHash: {\n        description: 'Returns block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'full',\n                type: 'bool'\n            }\n        ],\n        type: 'Option<EthRichBlock>'\n    },\n    getBlockByNumber: {\n        description: 'Returns block with given number.',\n        params: [\n            {\n                name: 'block',\n                type: 'BlockNumber'\n            },\n            { name: 'full', type: 'bool' }\n        ],\n        type: 'Option<EthRichBlock>'\n    },\n    getBlockTransactionCountByHash: {\n        description: 'Returns the number of transactions in a block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'U256'\n    },\n    getBlockTransactionCountByNumber: {\n        description: 'Returns the number of transactions in a block with given block number.',\n        params: [\n            {\n                name: 'block',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getCode: {\n        description: 'Returns the code at given address at given time (block number).',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Bytes'\n    },\n    getFilterChanges: {\n        description: 'Returns filter changes since last poll.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthFilterChanges'\n    },\n    getFilterLogs: {\n        description: 'Returns all logs matching given filter (in a range \\'from\\' - \\'to\\').',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'Vec<EthLog>'\n    },\n    getLogs: {\n        description: 'Returns logs matching given filter object.',\n        params: [\n            {\n                name: 'filter',\n                type: 'EthFilter'\n            }\n        ],\n        type: 'Vec<EthLog>'\n    },\n    getProof: {\n        description: 'Returns proof for account and storage.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                name: 'storageKeys',\n                type: 'Vec<H256>'\n            },\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'EthAccount'\n    },\n    getStorageAt: {\n        description: 'Returns content of the storage at given address.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'H256'\n    },\n    getTransactionByBlockHashAndIndex: {\n        description: 'Returns transaction at given block hash and index.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionByBlockNumberAndIndex: {\n        description: 'Returns transaction by given block number and index.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionByHash: {\n        description: 'Get transaction by its hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionCount: {\n        description: 'Returns the number of transactions sent from given address at given time (block number).',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getTransactionReceipt: {\n        description: 'Returns transaction receipt by transaction hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'EthReceipt'\n    },\n    getUncleByBlockHashAndIndex: {\n        description: 'Returns an uncles at given block and index.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthRichBlock'\n    },\n    getUncleByBlockNumberAndIndex: {\n        description: 'Returns an uncles at given block and index.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthRichBlock'\n    },\n    getUncleCountByBlockHash: {\n        description: 'Returns the number of uncles in a block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'U256'\n    },\n    getUncleCountByBlockNumber: {\n        description: 'Returns the number of uncles in a block with given block number.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getWork: {\n        description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',\n        params: [],\n        type: 'EthWork'\n    },\n    hashrate: {\n        description: 'Returns the number of hashes per second that the node is mining with.',\n        params: [],\n        type: 'U256'\n    },\n    maxPriorityFeePerGas: {\n        description: 'Returns max priority fee per gas',\n        params: [],\n        type: 'U256'\n    },\n    mining: {\n        description: 'Returns true if client is actively mining new blocks.',\n        params: [],\n        type: 'bool'\n    },\n    newBlockFilter: {\n        description: 'Returns id of new block filter.',\n        params: [],\n        type: 'U256'\n    },\n    newFilter: {\n        description: 'Returns id of new filter.',\n        params: [\n            {\n                name: 'filter',\n                type: 'EthFilter'\n            }\n        ],\n        type: 'U256'\n    },\n    newPendingTransactionFilter: {\n        description: 'Returns id of new block filter.',\n        params: [],\n        type: 'U256'\n    },\n    protocolVersion: {\n        description: 'Returns protocol version encoded as a string (quotes are necessary).',\n        params: [],\n        type: 'u64'\n    },\n    sendRawTransaction: {\n        description: 'Sends signed transaction, returning its hash.',\n        params: [\n            {\n                name: 'bytes',\n                type: 'Bytes'\n            }\n        ],\n        type: 'H256'\n    },\n    sendTransaction: {\n        description: 'Sends transaction; will block waiting for signer to return the transaction hash',\n        params: [\n            {\n                name: 'tx',\n                type: 'EthTransactionRequest'\n            }\n        ],\n        type: 'H256'\n    },\n    submitHashrate: {\n        description: 'Used for submitting mining hashrate.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            },\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'bool'\n    },\n    submitWork: {\n        description: 'Used for submitting a proof-of-work solution.',\n        params: [\n            {\n                name: 'nonce',\n                type: 'H64'\n            },\n            {\n                name: 'headerHash',\n                type: 'H256'\n            },\n            {\n                name: 'mixDigest',\n                type: 'H256'\n            }\n        ],\n        type: 'bool'\n    },\n    subscribe: {\n        description: 'Subscribe to Eth subscription.',\n        params: [\n            { name: 'kind', type: 'EthSubKind' },\n            {\n                isOptional: true,\n                name: 'params',\n                type: 'EthSubParams'\n            }\n        ],\n        pubsub: [\n            'subscription',\n            'subscribe',\n            'unsubscribe'\n        ],\n        type: 'Null'\n    },\n    syncing: {\n        description: 'Returns an object with data about the sync status or false.',\n        params: [],\n        type: 'EthSyncStatus'\n    },\n    uninstallFilter: {\n        description: 'Uninstalls filter.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'bool'\n    }\n};\n", "export const runtime = {\n    ConvertTransactionRuntimeApi: [\n        {\n            methods: {\n                convert_transaction: {\n                    description: 'Converts an Ethereum-style transaction to Extrinsic',\n                    params: [\n                        {\n                            name: 'transaction',\n                            type: 'TransactionV2'\n                        }\n                    ],\n                    type: 'Extrinsic'\n                }\n            },\n            version: 2\n        }\n    ],\n    DebugRuntimeApi: [\n        {\n            methods: {\n                trace_block: {\n                    description: 'Trace all block extrinsics',\n                    params: [\n                        {\n                            name: 'extrinsics',\n                            type: 'Vec<Extrinsic>'\n                        },\n                        {\n                            name: 'knownTransactions',\n                            type: 'Vec<H256>'\n                        }\n                    ],\n                    type: 'Result<(), DispatchError>'\n                },\n                trace_transaction: {\n                    description: 'Trace transaction extrinsics',\n                    params: [\n                        {\n                            name: 'extrinsics',\n                            type: 'Vec<Extrinsic>'\n                        },\n                        {\n                            name: 'transaction',\n                            type: 'EthTransaction'\n                        }\n                    ],\n                    type: 'Result<(), DispatchError>'\n                }\n            },\n            version: 4\n        }\n    ],\n    EthereumRuntimeRPCApi: [\n        {\n            methods: {\n                account_basic: {\n                    description: 'Returns pallet_evm::Accounts by address.',\n                    params: [\n                        {\n                            name: 'address',\n                            type: 'H160'\n                        }\n                    ],\n                    type: 'EvmAccount'\n                },\n                account_code_at: {\n                    description: 'For a given account address, returns pallet_evm::AccountCodes.',\n                    params: [\n                        {\n                            name: 'address',\n                            type: 'H160'\n                        }\n                    ],\n                    type: 'Bytes'\n                },\n                author: {\n                    description: 'Returns the converted FindAuthor::find_author authority id.',\n                    params: [],\n                    type: 'H160'\n                },\n                call: {\n                    description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n                    params: [\n                        {\n                            name: 'from',\n                            type: 'H160'\n                        },\n                        {\n                            name: 'to',\n                            type: 'H160'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Vec<u8>'\n                        },\n                        {\n                            name: 'value',\n                            type: 'U256'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'U256'\n                        },\n                        {\n                            name: 'maxFeePerGas',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'maxPriorityFeePerGas',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'nonce',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'estimate',\n                            type: 'bool'\n                        },\n                        {\n                            name: 'accessList',\n                            type: 'Option<Vec<(H160, Vec<H256>)>>'\n                        }\n                    ],\n                    type: 'Result<EvmCallInfo, DispatchError>'\n                },\n                chain_id: {\n                    description: 'Returns runtime defined pallet_evm::ChainId.',\n                    params: [],\n                    type: 'u64'\n                },\n                create: {\n                    description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n                    params: [\n                        {\n                            name: 'from',\n                            type: 'H160'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Vec<u8>'\n                        },\n                        {\n                            name: 'value',\n                            type: 'U256'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'U256'\n                        },\n                        {\n                            name: 'maxFeePerGas',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'maxPriorityFeePerGas',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'nonce',\n                            type: 'Option<U256>'\n                        },\n                        {\n                            name: 'estimate',\n                            type: 'bool'\n                        },\n                        {\n                            name: 'accessList',\n                            type: 'Option<Vec<(H160, Vec<H256>)>>'\n                        }\n                    ],\n                    type: 'Result<EvmCreateInfo, DispatchError>'\n                },\n                current_all: {\n                    description: 'Return all the current data for a block in a single runtime call.',\n                    params: [],\n                    type: '(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)'\n                },\n                current_block: {\n                    description: 'Return the current block.',\n                    params: [],\n                    type: 'BlockV2'\n                },\n                current_receipts: {\n                    description: 'Return the current receipt.',\n                    params: [],\n                    type: 'Option<Vec<EthReceiptV3>>'\n                },\n                current_transaction_statuses: {\n                    description: 'Return the current transaction status.',\n                    params: [],\n                    type: 'Option<Vec<EthTransactionStatus>>'\n                },\n                elasticity: {\n                    description: 'Return the elasticity multiplier.',\n                    params: [],\n                    type: 'Option<Permill>'\n                },\n                extrinsic_filter: {\n                    description: 'Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.',\n                    params: [\n                        {\n                            name: 'xts',\n                            type: 'Vec<Extrinsic>'\n                        }\n                    ],\n                    type: 'Vec<TransactionV2>'\n                },\n                gas_price: {\n                    description: 'Returns FixedGasPrice::min_gas_price',\n                    params: [],\n                    type: 'u256'\n                },\n                storage_at: {\n                    description: 'For a given account address and index, returns pallet_evm::AccountStorages.',\n                    params: [\n                        {\n                            name: 'address',\n                            type: 'H160'\n                        },\n                        {\n                            name: 'index',\n                            type: 'u256'\n                        }\n                    ],\n                    type: 'H256'\n                }\n            },\n            version: 4\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "export const runtime = {\n    // deprecated, the NimbusApi is current - this is for backwards compat\n    AuthorFilterAPI: [\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        },\n                        {\n                            name: 'parentHeader',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 1\n        }\n    ],\n    NimbusApi: [\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether a Nimbus author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        },\n                        {\n                            name: 'parentHeader',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "export const runtime = {\n    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/oracle/rpc/runtime-api/src/lib.rs#L12-L21\n    OracleApi: [\n        {\n            methods: {\n                get_all_values: {\n                    description: 'Retrieves all values',\n                    params: [\n                        {\n                            name: 'providerId',\n                            // This is a Codec type\n                            type: 'Raw'\n                        }\n                    ],\n                    // This won't actually work as expected - since we have\n                    // no information about the actual Raw sizes, we cannot\n                    // handle it in this format (it would need an override\n                    // for the specific Codec). So return the Raw value.\n                    // type: 'Vec<(Raw, Option<Raw>)>'\n                    type: 'Raw'\n                },\n                get_value: {\n                    description: 'Retrieves a single value',\n                    params: [\n                        {\n                            name: 'providerId',\n                            // This is a Codec type\n                            type: 'Raw'\n                        },\n                        {\n                            name: 'key',\n                            // This is a Codec type\n                            type: 'Raw'\n                        }\n                    ],\n                    // This is an Option<Codec> type\n                    type: 'Option<Raw>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n", "export const runtime = {\n    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/tokens/rpc/runtime-api/src/lib.rs#L11-L18\n    TokensApi: [\n        {\n            methods: {\n                query_existential_deposit: {\n                    description: 'Query the existential amount for a specific currency',\n                    params: [\n                        {\n                            name: 'currencyId',\n                            // This is CurrencyId, as per the return value, we are unsure\n                            // if this is specialized and/or global to the chain or not\n                            type: 'Raw'\n                        }\n                    ],\n                    // This is Balance - since we don't understand enough about the way\n                    // in which this is used, we default to u128 here (it certainly could\n                    // be a specialized type that doesn't map to the on-chain Balance)\n                    type: 'u128'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        RpcMethods: {\n            version: 'u32',\n            methods: 'Vec<Text>'\n        }\n    }\n};\n", "export const rpc = {\n    methods: {\n        description: 'Retrieves the list of RPC methods that are exposed by the node',\n        params: [],\n        type: 'RpcMethods'\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        ExtrinsicOrHash: {\n            _enum: {\n                Hash: 'Hash',\n                Extrinsic: 'Bytes'\n            }\n        },\n        ExtrinsicStatus: {\n            _enum: {\n                Future: 'Null',\n                Ready: 'Null',\n                Broadcast: 'Vec<Text>',\n                InBlock: 'Hash',\n                Retracted: 'Hash',\n                FinalityTimeout: 'Hash',\n                Finalized: 'Hash',\n                Usurped: 'Hash',\n                Dropped: 'Null',\n                Invalid: 'Null'\n            }\n        }\n    }\n};\n", "export const rpc = {\n    hasKey: {\n        description: 'Returns true if the keystore has private keys for the given public key and key type.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'publicKey',\n                type: 'Bytes'\n            },\n            {\n                name: 'keyType',\n                type: 'Text'\n            }\n        ],\n        type: 'bool'\n    },\n    hasSessionKeys: {\n        description: 'Returns true if the keystore has private keys for the given session public keys.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'sessionKeys',\n                type: 'Bytes'\n            }\n        ],\n        type: 'bool'\n    },\n    insertKey: {\n        description: 'Insert a key into the keystore.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'keyType',\n                type: 'Text'\n            },\n            {\n                name: 'suri',\n                type: 'Text'\n            },\n            {\n                name: 'publicKey',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Bytes'\n    },\n    pendingExtrinsics: {\n        description: 'Returns all pending extrinsics, potentially grouped by sender',\n        params: [],\n        type: 'Vec<Extrinsic>'\n    },\n    removeExtrinsic: {\n        description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'bytesOrHash',\n                type: 'Vec<ExtrinsicOrHash>'\n            }\n        ],\n        type: 'Vec<Hash>'\n    },\n    rotateKeys: {\n        description: 'Generate new session keys and returns the corresponding public keys',\n        isUnsafe: true,\n        params: [],\n        type: 'Bytes'\n    },\n    submitAndWatchExtrinsic: {\n        description: 'Submit and subscribe to watch an extrinsic until unsubscribed',\n        isSigned: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        pubsub: [\n            'extrinsicUpdate',\n            'submitAndWatchExtrinsic',\n            'unwatchExtrinsic'\n        ],\n        type: 'ExtrinsicStatus'\n    },\n    submitExtrinsic: {\n        description: 'Submit a fully formatted extrinsic for block inclusion',\n        isSigned: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        type: 'Hash'\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        BlockHash: 'Hash'\n    }\n};\n", "export const rpc = {\n    getBlock: {\n        description: 'Get header and body of a relay chain block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'SignedBlock'\n    },\n    getBlockHash: {\n        description: 'Get the block hash for a specific block',\n        params: [\n            {\n                isOptional: true,\n                name: 'blockNumber',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'BlockHash'\n    },\n    getFinalizedHead: {\n        alias: ['chain_getFinalisedHead'],\n        description: 'Get hash of the last finalized block in the canon chain',\n        params: [],\n        type: 'BlockHash'\n    },\n    getHeader: {\n        alias: ['chain_getHead'],\n        description: 'Retrieves the header for a specific block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Header'\n    },\n    subscribeAllHeads: {\n        description: 'Retrieves the newest header via subscription',\n        params: [],\n        pubsub: [\n            'allHead',\n            'subscribeAllHeads',\n            'unsubscribeAllHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n        alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n        description: 'Retrieves the best finalized header via subscription',\n        params: [],\n        pubsub: [\n            'finalizedHead',\n            'subscribeFinalizedHeads',\n            'unsubscribeFinalizedHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeNewHeads: {\n        alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n        description: 'Retrieves the best header via subscription',\n        params: [],\n        // NOTE These still has the aliassed version, compatible with 1.x\n        pubsub: [\n            'newHead',\n            'subscribeNewHead',\n            'unsubscribeNewHead'\n        ],\n        type: 'Header'\n    }\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        // StorageKey extends Bytes\n        PrefixedStorageKey: 'StorageKey'\n    }\n};\n", "export const rpc = {\n    getKeys: {\n        description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n        alias: ['childstate_getKeysPagedAt'],\n        description: 'Returns the keys with prefix from a child storage with pagination support',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                name: 'count',\n                type: 'u32'\n            },\n            {\n                isOptional: true,\n                name: 'startKey',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n        description: 'Returns a child storage entry at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n        description: 'Returns child storage entries for multiple keys at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n        description: 'Returns the hash of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<Hash>'\n    },\n    getStorageSize: {\n        description: 'Returns the size of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<u64>'\n    }\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        StorageKind: {\n            _enum: {\n                PERSISTENT: 1,\n                LOCAL: 2\n            }\n        }\n    }\n};\n", "export const rpc = {\n    localStorageGet: {\n        description: 'Get offchain local storage under given key and prefix',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'kind',\n                type: 'StorageKind'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    localStorageSet: {\n        description: 'Set offchain local storage under given key and prefix',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'kind',\n                type: 'StorageKind'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            },\n            {\n                name: 'value',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Null'\n    }\n};\n", "export const runtime = {\n    OffchainWorkerApi: [\n        {\n            methods: {\n                offchain_worker: {\n                    description: 'Starts the off-chain task for given block header.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'Null'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                offchain_worker: {\n                    description: 'Starts the off-chain task for given block header.',\n                    params: [\n                        {\n                            name: 'number',\n                            type: 'BlockNumber'\n                        }\n                    ],\n                    type: 'Null'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n", "import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        FeeDetails: {\n            inclusionFee: 'Option<InclusionFee>'\n            // skipped in serde\n            // tip: 'Balance'\n        },\n        InclusionFee: {\n            baseFee: 'Balance',\n            lenFee: 'Balance',\n            adjustedWeightFee: 'Balance'\n        },\n        RuntimeDispatchInfo: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        },\n        RuntimeDispatchInfoV1: {\n            weight: 'WeightV1',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        },\n        RuntimeDispatchInfoV2: {\n            weight: 'WeightV2',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        }\n    }\n};\n", "export const rpc = {\n    queryFeeDetails: {\n        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so\n        deprecated: 'Use `api.call.transactionPaymentApi.queryFeeDetails` instead',\n        description: 'Query the detailed fee of a given encoded extrinsic',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'FeeDetails'\n    },\n    queryInfo: {\n        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so\n        deprecated: 'Use `api.call.transactionPaymentApi.queryInfo` instead',\n        description: 'Retrieves the fee information for an encoded extrinsic',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        // NOTE: Stuck on V1 forever (at least for the time being)\n        type: 'RuntimeDispatchInfoV1'\n    }\n};\n", "const V1_TO_V4_SHARED_PAY = {\n    query_fee_details: {\n        description: 'The transaction fee details',\n        params: [\n            {\n                name: 'uxt',\n                type: 'Extrinsic'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'FeeDetails'\n    }\n};\nconst V1_TO_V3_SHARED_CALL = {\n    query_call_fee_details: {\n        description: 'The call fee details',\n        params: [\n            {\n                name: 'call',\n                type: 'Call'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'FeeDetails'\n    }\n};\nconst V2_TO_V4_SHARED_PAY = {\n    query_info: {\n        description: 'The transaction info',\n        params: [\n            {\n                name: 'uxt',\n                type: 'Extrinsic'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'RuntimeDispatchInfo'\n    }\n};\nconst V2_V3_SHARED_CALL = {\n    query_call_info: {\n        description: 'The call info',\n        params: [\n            {\n                name: 'call',\n                type: 'Call'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'RuntimeDispatchInfo'\n    }\n};\nconst V3_SHARED_PAY_CALL = {\n    query_length_to_fee: {\n        description: 'Query the output of the current LengthToFee given some input',\n        params: [\n            {\n                name: 'length',\n                type: 'u32'\n            }\n        ],\n        type: 'Balance'\n    },\n    query_weight_to_fee: {\n        description: 'Query the output of the current WeightToFee given some input',\n        params: [\n            {\n                name: 'weight',\n                type: 'Weight'\n            }\n        ],\n        type: 'Balance'\n    }\n};\nexport const runtime = {\n    TransactionPaymentApi: [\n        {\n            // V4 is equivalent to V3 (V4 just dropped all V1 references)\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 4\n        },\n        {\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 2\n        },\n        {\n            methods: {\n                query_info: {\n                    description: 'The transaction info',\n                    params: [\n                        {\n                            name: 'uxt',\n                            type: 'Extrinsic'\n                        },\n                        {\n                            name: 'len',\n                            type: 'u32'\n                        }\n                    ],\n                    // NOTE: _Should_ be V1 (as per current Substrate), however the interface was\n                    // changed mid-flight between versions. So we have some of each depending on\n                    // runtime. (We do detect the weight type, so correct)\n                    type: 'RuntimeDispatchInfo'\n                },\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 1\n        }\n    ],\n    TransactionPaymentCallApi: [\n        {\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_V3_SHARED_CALL,\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...V2_V3_SHARED_CALL,\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 2\n        },\n        {\n            methods: {\n                CALL: {\n                    description: 'The call info',\n                    params: [\n                        {\n                            name: 'call',\n                            type: 'Call'\n                        },\n                        {\n                            name: 'len',\n                            type: 'u32'\n                        }\n                    ],\n                    // NOTE: As per the above comment, the below is correct according to Substrate, but\n                    // _may_ yield fallback decoding on some versions of the runtime\n                    type: 'RuntimeDispatchInfo'\n                },\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 1\n        }\n    ]\n};\n", "import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        ApiId: '[u8; 8]',\n        BlockTrace: {\n            blockHash: 'Text',\n            parentHash: 'Text',\n            tracingTargets: 'Text',\n            storageKeys: 'Text',\n            spans: 'Vec<BlockTraceSpan>',\n            events: 'Vec<BlockTraceEvent>'\n        },\n        BlockTraceEvent: {\n            target: 'Text',\n            data: 'BlockTraceEventData',\n            parentId: 'Option<u64>'\n        },\n        BlockTraceEventData: {\n            stringValues: 'HashMap<Text, Text>'\n        },\n        BlockTraceSpan: {\n            id: 'u64',\n            parentId: 'Option<u64>',\n            name: 'Text',\n            target: 'Text',\n            wasm: 'bool'\n        },\n        KeyValueOption: '(StorageKey, Option<StorageData>)',\n        MigrationStatusResult: {\n            topRemainingToMigrate: 'u64',\n            childRemainingToMigrate: 'u64'\n        },\n        ReadProof: {\n            at: 'Hash',\n            proof: 'Vec<Bytes>'\n        },\n        RuntimeVersionApi: '(ApiId, u32)',\n        RuntimeVersion: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>',\n            transactionVersion: 'u32',\n            stateVersion: 'u8'\n        },\n        RuntimeVersionPre4: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>',\n            transactionVersion: 'u32'\n        },\n        RuntimeVersionPre3: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>'\n        },\n        RuntimeVersionPartial: {\n            specName: 'Text',\n            specVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>'\n        },\n        SpecVersion: 'u32',\n        StorageChangeSet: {\n            block: 'Hash',\n            changes: 'Vec<KeyValueOption>'\n        },\n        TraceBlockResponse: {\n            _enum: {\n                TraceError: 'TraceError',\n                BlockTrace: 'BlockTrace'\n            }\n        },\n        TraceError: {\n            error: 'Text'\n        }\n    }\n};\n", "export const rpc = {\n    call: {\n        alias: ['state_callAt'],\n        description: 'Perform a call to a builtin on the chain',\n        params: [\n            {\n                name: 'method',\n                type: 'Text'\n            },\n            {\n                name: 'data',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Bytes'\n    },\n    getChildKeys: {\n        description: 'Retrieves the keys with prefix of a specific child storage',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getChildReadProof: {\n        description: 'Returns proof of storage for child key entries at a specific block state.',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ReadProof'\n    },\n    getChildStorage: {\n        description: 'Retrieves the child storage for a key',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'StorageData'\n    },\n    getChildStorageHash: {\n        description: 'Retrieves the child storage hash',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Hash'\n    },\n    getChildStorageSize: {\n        description: 'Retrieves the child storage size',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'u64'\n    },\n    getKeys: {\n        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',\n        description: 'Retrieves the keys with a certain prefix',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n        alias: ['state_getKeysPagedAt'],\n        description: 'Returns the keys with prefix with pagination support.',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                name: 'count',\n                type: 'u32'\n            },\n            {\n                isOptional: true,\n                name: 'startKey',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getMetadata: {\n        description: 'Returns the runtime metadata',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Metadata'\n    },\n    getPairs: {\n        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',\n        description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<KeyValue>'\n    },\n    getReadProof: {\n        description: 'Returns proof of storage entries at a specific block state',\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ReadProof'\n    },\n    getRuntimeVersion: {\n        alias: ['chain_getRuntimeVersion'],\n        description: 'Get the runtime version',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'RuntimeVersion'\n    },\n    getStorage: {\n        alias: ['state_getStorageAt'],\n        description: 'Retrieves the storage for a key',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'StorageData'\n    },\n    getStorageHash: {\n        alias: ['state_getStorageHashAt'],\n        description: 'Retrieves the storage hash',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Hash'\n    },\n    getStorageSize: {\n        alias: ['state_getStorageSizeAt'],\n        description: 'Retrieves the storage size',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'u64'\n    },\n    queryStorage: {\n        description: 'Query historical storage entries (by key) starting from a start block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                name: 'fromBlock',\n                type: 'Hash'\n            },\n            {\n                isOptional: true,\n                name: 'toBlock',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n        description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageChangeSet>'\n    },\n    subscribeRuntimeVersion: {\n        alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n        description: 'Retrieves the runtime version via subscription',\n        params: [],\n        pubsub: [\n            'runtimeVersion',\n            'subscribeRuntimeVersion',\n            'unsubscribeRuntimeVersion'\n        ],\n        type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n        description: 'Subscribes to storage changes for the provided keys',\n        // NOTE Just marking it here to follow the logic - this is unsafe when no\n        // keys are provided (i.e. subscribing to all), generally this is used\n        // extensively with normal subscriptions\n        // isUnsafe: true,\n        params: [\n            {\n                isOptional: true,\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            }\n        ],\n        pubsub: [\n            'storage',\n            'subscribeStorage',\n            'unsubscribeStorage'\n        ],\n        type: 'StorageChangeSet'\n    },\n    traceBlock: {\n        description: 'Provides a way to trace the re-execution of a single block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'block',\n                type: 'Hash'\n            },\n            {\n                name: 'targets',\n                type: 'Option<Text>'\n            },\n            {\n                name: 'storageKeys',\n                type: 'Option<Text>'\n            },\n            {\n                name: 'methods',\n                type: 'Option<Text>'\n            }\n        ],\n        type: 'TraceBlockResponse'\n    },\n    trieMigrationStatus: {\n        description: 'Check current migration state',\n        isUnsafe: true,\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MigrationStatusResult'\n    }\n};\n", "import { objectSpread } from '@polkadot/util';\nimport * as defs from './definitions.js';\nconst jsonrpc = {};\nObject.keys(defs).forEach((s) => Object.entries(defs[s].rpc || {}).forEach(([method, def]) => {\n    // allow for section overrides\n    const section = def.aliasSection || s;\n    if (!jsonrpc[section]) {\n        jsonrpc[section] = {};\n    }\n    jsonrpc[section][method] = objectSpread({}, def, {\n        isSubscription: !!def.pubsub,\n        jsonrpc: `${section}_${method}`,\n        method,\n        section\n    });\n}));\nexport default jsonrpc;\n", "export { PortableRegistry } from './PortableRegistry.js';\nexport { toV1 as convertSiV0toV1 } from './toV1.js';\n", "import { sanitize, Struct } from '@polkadot/types-codec';\nimport { getTypeDef, TypeDefInfo, withTypeString } from '@polkadot/types-create';\nimport { assertUnreachable, isNumber, isString, logger, objectSpread, stringCamelCase, stringify, stringPascalCase } from '@polkadot/util';\nconst l = logger('PortableRegistry');\nconst TYPE_UNWRAP = { toNumber: () => -1 };\nconst PRIMITIVE_ALIAS = {\n    Char: 'u32',\n    Str: 'Text'\n};\nconst PATHS_ALIAS = splitNamespace([\n    // full matching on exact names...\n    // these are well-known types with additional encoding\n    'sp_core::crypto::AccountId32',\n    'sp_runtime::generic::era::Era',\n    'sp_runtime::multiaddress::MultiAddress',\n    // ethereum overrides (Frontier, Moonbeam, Polkadot claims)\n    'fp_account::AccountId20',\n    'account::AccountId20',\n    'polkadot_runtime_common::claims::EthereumAddress',\n    // weights 2 is a structure, however for 1.5. with a single field it\n    // should be flatenned (can appear in Compact<Weight> extrinsics)\n    'frame_support::weights::weight_v2::Weight',\n    'sp_weights::weight_v2::Weight',\n    // wildcard matching in place...\n    // these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy\n    '*_democracy::vote::Vote',\n    '*_conviction_voting::vote::Vote',\n    '*_identity::types::Data',\n    // these are opaque Vec<u8> wrappers\n    'sp_core::OpaqueMetadata',\n    'sp_core::OpaquePeerId',\n    'sp_core::offchain::OpaqueMultiaddr',\n    // shorten some well-known types\n    'primitive_types::*',\n    'sp_arithmetic::per_things::*',\n    // runtime\n    '*_runtime::RuntimeCall',\n    '*_runtime::RuntimeEvent',\n    // ink!\n    'ink::env::types::*',\n    'ink::primitives::types::*',\n    'ink_env::types::*',\n    'ink_primitives::types::*'\n]);\nconst PATHS_SET = splitNamespace([\n    'pallet_identity::types::BitFlags'\n]);\nconst BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];\nconst BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];\nconst BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB];\nconst WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque'];\nconst RESERVED = [\n    // JS reserved words\n    'entries', 'keys', 'new', 'size',\n    // exposed by all Codec objects\n    'hash', 'registry'\n];\nconst PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];\n/** @internal Converts a Text[] into string[] (used as part of definitions) */\nfunction sanitizeDocs(docs) {\n    const count = docs.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = docs[i].toString();\n    }\n    return result;\n}\n/** @internal Split a namespace with :: into individual parts */\nfunction splitNamespace(values) {\n    const count = values.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = values[i].split('::');\n    }\n    return result;\n}\n/** @internal Match a namespace based on parts (alongside wildcards) */\nfunction matchParts(first, second) {\n    return first.length === second.length && first.every((a, index) => {\n        const b = second[index].toString();\n        if ((a === '*') || (a === b)) {\n            return true;\n        }\n        if (a.includes('*') && a.includes('_') && b.includes('_')) {\n            let suba = a.split('_');\n            let subb = b.split('_');\n            // match initial *'s to multiples if we have a match for the other\n            if (suba[0] === '*') {\n                const indexOf = subb.indexOf(suba[1]);\n                if (indexOf !== -1) {\n                    suba = suba.slice(1);\n                    subb = subb.slice(indexOf);\n                }\n            }\n            // check for * matches at the end, adjust accordingly\n            if ((suba.length === 2) && (suba[1] === '*') && (suba[0] === subb[0])) {\n                return true;\n            }\n            return matchParts(suba, subb);\n        }\n        return false;\n    });\n}\n/** @internal check if the path matches the PATHS_ALIAS (with wildcards) */\nfunction getAliasPath({ def, path }) {\n    // specific logic for weights - we override when non-complex struct\n    // (as applied in Weight 1.5 where we also have `Compact<{ refTime: u64 }>)\n    if (['frame_support::weights::weight_v2::Weight', 'sp_weights::weight_v2::Weight'].includes(path.join('::'))) {\n        return !def.isComposite || def.asComposite.fields.length === 1\n            ? 'WeightV1'\n            : null;\n    }\n    // TODO We need to handle ink! Balance in some way\n    return path.length && PATHS_ALIAS.some((a) => matchParts(a, path))\n        ? path[path.length - 1].toString()\n        : null;\n}\n/** @internal Converts a type name into a JS-API compatible name */\nfunction extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {\n    const count = path.length;\n    // if we have no path or determined as a wrapper, we just skip it\n    if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {\n        return null;\n    }\n    const camels = new Array(count);\n    const lowers = new Array(count);\n    // initially just create arrays of the camelCase and lowercase path\n    // parts - we will check these to extract the final values. While\n    // we have 2 loops here, we also don't do the same operation twice\n    for (let i = 0; i < count; i++) {\n        const c = stringPascalCase(isInternal\n            ? path[i].replace('pallet_', '')\n            : path[i]);\n        const l = c.toLowerCase();\n        camels[i] = c;\n        lowers[i] = l;\n    }\n    let name = '';\n    for (let i = 0; i < count; i++) {\n        const l = lowers[i];\n        // Remove ::{generic, misc, pallet, traits, types}::\n        if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {\n            // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest\n            // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress\n            if (l !== lowers[i + 1]) {\n                name += camels[i];\n            }\n        }\n    }\n    // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin\n    if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {\n        const instanceType = portable[params[1].type.unwrap().toNumber()];\n        if (instanceType.type.path.length === 2) {\n            name = `${name}${instanceType.type.path[1].toString()}`;\n        }\n    }\n    return { lookupIndex, name, params };\n}\n/** @internal Alias for extractNameFlat with PortableType as a last parameter */\nfunction extractName(portable, lookupIndex, { type: { params, path } }) {\n    return extractNameFlat(portable, lookupIndex, params, path);\n}\n/** @internal Check for dupes from a specific index onwards */\nfunction nextDupeMatches(name, startAt, names) {\n    const result = [names[startAt]];\n    for (let i = startAt + 1, count = names.length; i < count; i++) {\n        const v = names[i];\n        if (v.name === name) {\n            result.push(v);\n        }\n    }\n    return result;\n}\n/** @internal Checks to see if a type is a full duplicate (with all params matching) */\nfunction rewriteDupes(input, rewrite) {\n    const count = input.length;\n    for (let i = 0; i < count; i++) {\n        const a = input[i];\n        for (let j = i + 1; j < count; j++) {\n            const b = input[j];\n            // if the indexes are not the same and the names match, we have a dupe\n            if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {\n                return false;\n            }\n        }\n    }\n    // add all the adjusted values to the rewite map\n    for (let i = 0; i < count; i++) {\n        const p = input[i];\n        rewrite[p.lookupIndex] = p.name;\n    }\n    return true;\n}\n/** @internal Find duplicates and adjust the names based on parameters */\nfunction removeDupeNames(lookup, portable, names) {\n    const rewrite = {};\n    return names\n        .map((original, startAt) => {\n        const { lookupIndex, name, params } = original;\n        if (!name) {\n            // the name is empty (this is not expected, but have a failsafe)\n            return null;\n        }\n        else if (rewrite[lookupIndex]) {\n            // we have already rewritten this one, we can skip it\n            return original;\n        }\n        // those where the name is matching starting from this index\n        const allSame = nextDupeMatches(name, startAt, names);\n        // we only have one, so all ok\n        if (allSame.length === 1) {\n            return original;\n        }\n        // are there param differences between matching names\n        const anyDiff = allSame.some((o) => params.length !== o.params.length ||\n            params.some((p, index) => !p.name.eq(o.params[index].name) ||\n                p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber()));\n        // everything matches, we can combine these\n        if (!anyDiff) {\n            return original;\n        }\n        // TODO We probably want to attach all the indexes with differences,\n        // not just the first\n        // find the first parameter that yields differences\n        const paramIdx = params.findIndex(({ type }, index) => allSame.every(({ params }, aIndex) => params[index].type.isSome && (aIndex === 0 ||\n            !params[index].type.eq(type))));\n        // No param found that is different\n        if (paramIdx === -1) {\n            return original;\n        }\n        // see if using the param type helps\n        const sameCount = allSame.length;\n        const adjusted = new Array(sameCount);\n        // loop through all, specifically checking that index where the\n        // first param yields differences\n        for (let i = 0; i < sameCount; i++) {\n            const { lookupIndex, name, params } = allSame[i];\n            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());\n            // if it is not a primitive and it doesn't have a path, we really cannot\n            // do anything at this point\n            if (!def.isPrimitive && !path.length) {\n                return null;\n            }\n            adjusted[i] = {\n                lookupIndex,\n                name: def.isPrimitive\n                    ? `${name}${def.asPrimitive.toString()}`\n                    : `${name}${path[path.length - 1].toString()}`\n            };\n        }\n        // check to see if the adjusted names have no issues\n        if (rewriteDupes(adjusted, rewrite)) {\n            return original;\n        }\n        // TODO This is duplicated from the section just above...\n        // ... we certainly need a better solution here\n        //\n        // Last-ditch effort to use the full type path - ugly\n        // loop through all, specifically checking that index where the\n        // first param yields differences\n        for (let i = 0; i < sameCount; i++) {\n            const { lookupIndex, name, params } = allSame[i];\n            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());\n            const flat = extractNameFlat(portable, lookupIndex, params, path, true);\n            if (def.isPrimitive || !flat) {\n                return null;\n            }\n            adjusted[i] = {\n                lookupIndex,\n                name: `${name}${flat.name}`\n            };\n        }\n        // check to see if the adjusted names have no issues\n        if (rewriteDupes(adjusted, rewrite)) {\n            return original;\n        }\n        return null;\n    })\n        .filter((n) => !!n)\n        .map(({ lookupIndex, name, params }) => ({\n        lookupIndex,\n        name: rewrite[lookupIndex] || name,\n        params\n    }));\n}\n/** @internal Detect on-chain types (AccountId/Signature) as set as the default */\nfunction registerTypes(lookup, lookups, names, params) {\n    // Register the types we extracted\n    lookup.registry.register(lookups);\n    // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic\n    if (params.SpRuntimeUncheckedExtrinsic) {\n        // Address, Call, Signature, Extra\n        const [addrParam, , sigParam] = params.SpRuntimeUncheckedExtrinsic;\n        const siAddress = lookup.getSiType(addrParam.type.unwrap());\n        const siSignature = lookup.getSiType(sigParam.type.unwrap());\n        const nsSignature = siSignature.path.join('::');\n        let nsAccountId = siAddress.path.join('::');\n        const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress';\n        // With multiaddress, we check the first type param again\n        if (isMultiAddress) {\n            // AccountId, AccountIndex\n            const [idParam] = siAddress.params;\n            nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');\n        }\n        lookup.registry.register({\n            // known: account::AccountId20, fp_account::AccountId20, primitive_types::H160\n            AccountId: nsAccountId.endsWith('::AccountId20') || nsAccountId.endsWith('::H160')\n                ? 'AccountId20'\n                : 'AccountId32',\n            Address: isMultiAddress\n                ? 'MultiAddress'\n                : 'AccountId',\n            ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature)\n                ? 'MultiSignature'\n                : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'\n        });\n    }\n}\n/**\n * @internal Extracts aliases based on what we know the runtime config looks like in a\n * Substrate chain. Specifically we want to have access to the Call and Event params\n **/\nfunction extractAliases(params, isContract) {\n    const hasParams = Object.keys(params).some((k) => !k.startsWith('Pallet'));\n    const alias = {};\n    if (params.SpRuntimeUncheckedExtrinsic) {\n        // Address, Call, Signature, Extra\n        const [, { type }] = params.SpRuntimeUncheckedExtrinsic;\n        alias[type.unwrap().toNumber()] = 'Call';\n    }\n    else if (hasParams && !isContract) {\n        l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');\n    }\n    if (params.FrameSystemEventRecord) {\n        // Event, Topic\n        const [{ type }] = params.FrameSystemEventRecord;\n        alias[type.unwrap().toNumber()] = 'Event';\n    }\n    else if (hasParams && !isContract) {\n        l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');\n    }\n    return alias;\n}\n/** @internal Extracts all the intreresting type information for this registry */\nfunction extractTypeInfo(lookup, portable) {\n    const nameInfo = [];\n    const types = {};\n    for (let i = 0, count = portable.length; i < count; i++) {\n        const type = portable[i];\n        const lookupIndex = type.id.toNumber();\n        const extracted = extractName(portable, lookupIndex, portable[i]);\n        if (extracted) {\n            nameInfo.push(extracted);\n        }\n        types[lookupIndex] = type;\n    }\n    const lookups = {};\n    const names = {};\n    const params = {};\n    const dedup = removeDupeNames(lookup, portable, nameInfo);\n    for (let i = 0, count = dedup.length; i < count; i++) {\n        const { lookupIndex, name, params: p } = dedup[i];\n        names[lookupIndex] = name;\n        lookups[name] = lookup.registry.createLookupType(lookupIndex);\n        params[name] = p;\n    }\n    return { lookups, names, params, types };\n}\nexport class PortableRegistry extends Struct {\n    constructor(registry, value, isContract) {\n        // const timeStart = performance.now()\n        super(registry, {\n            types: 'Vec<PortableType>'\n        }, value);\n        this.__internal__typeDefs = {};\n        const { lookups, names, params, types } = extractTypeInfo(this, this.types);\n        this.__internal__alias = extractAliases(params, isContract);\n        this.__internal__lookups = lookups;\n        this.__internal__names = names;\n        this.__internal__params = params;\n        this.__internal__types = types;\n        // console.log('PortableRegistry', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n    /**\n     * @description Returns all the available type names for this chain\n     **/\n    get names() {\n        return Object.values(this.__internal__names).sort();\n    }\n    /**\n     * @description The types of the registry\n     */\n    get types() {\n        return this.getT('types');\n    }\n    /**\n     * @description Register all available types into the registry (generally for internal usage)\n     */\n    register() {\n        registerTypes(this, this.__internal__lookups, this.__internal__names, this.__internal__params);\n    }\n    /**\n     * @description Returns the name for a specific lookup\n     */\n    getName(lookupId) {\n        return this.__internal__names[this.__internal__getLookupId(lookupId)];\n    }\n    /**\n     * @description Finds a specific type in the registry\n     */\n    getSiType(lookupId) {\n        // NOTE catch-22 - this may already be used as part of the constructor, so\n        // ensure that we have actually initialized it correctly\n        const found = (this.__internal__types || this.types)[this.__internal__getLookupId(lookupId)];\n        if (!found) {\n            throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);\n        }\n        return found.type;\n    }\n    /**\n     * @description Lookup the type definition for the index\n     */\n    getTypeDef(lookupId) {\n        const lookupIndex = this.__internal__getLookupId(lookupId);\n        if (!this.__internal__typeDefs[lookupIndex]) {\n            const lookupName = this.__internal__names[lookupIndex];\n            const empty = {\n                info: TypeDefInfo.DoNotConstruct,\n                lookupIndex,\n                lookupName,\n                type: this.registry.createLookupType(lookupIndex)\n            };\n            // Set named items since we will get into circular lookups along the way\n            if (lookupName) {\n                this.__internal__typeDefs[lookupIndex] = empty;\n            }\n            const extracted = this.__internal__extract(this.getSiType(lookupId), lookupIndex);\n            // For non-named items, we only set this right at the end\n            if (!lookupName) {\n                this.__internal__typeDefs[lookupIndex] = empty;\n            }\n            Object.keys(extracted).forEach((k) => {\n                if (k !== 'lookupName' || extracted[k]) {\n                    // these are safe since we are looking through the keys as set\n                    this.__internal__typeDefs[lookupIndex][k] = extracted[k];\n                }\n            });\n            // don't set lookupName on lower-level, we want to always direct to the type\n            if (extracted.info === TypeDefInfo.Plain) {\n                this.__internal__typeDefs[lookupIndex].lookupNameRoot = this.__internal__typeDefs[lookupIndex].lookupName;\n                delete this.__internal__typeDefs[lookupIndex].lookupName;\n            }\n        }\n        return this.__internal__typeDefs[lookupIndex];\n    }\n    /**\n     * @description For a specific field, perform adjustments to not have built-in conflicts\n     */\n    sanitizeField(name) {\n        let nameField = null;\n        let nameOrig = null;\n        if (name.isSome) {\n            nameField = stringCamelCase(name.unwrap());\n            if (nameField.includes('#')) {\n                nameOrig = nameField;\n                nameField = nameOrig.replace(/#/g, '_');\n            }\n            else if (RESERVED.includes(nameField)) {\n                nameOrig = nameField;\n                nameField = `${nameField}_`;\n            }\n        }\n        return [nameField, nameOrig];\n    }\n    /** @internal Creates a TypeDef based on an internal lookupId */\n    __internal__createSiDef(lookupId) {\n        const typeDef = this.getTypeDef(lookupId);\n        const lookupIndex = lookupId.toNumber();\n        // Setup for a lookup on complex types\n        return [TypeDefInfo.DoNotConstruct, TypeDefInfo.Enum, TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName\n            ? {\n                docs: typeDef.docs,\n                info: TypeDefInfo.Si,\n                lookupIndex,\n                lookupName: this.__internal__names[lookupIndex],\n                type: this.registry.createLookupType(lookupId)\n            }\n            : typeDef;\n    }\n    /** @internal Converts a lookupId input to the actual lookup index */\n    __internal__getLookupId(lookupId) {\n        if (isString(lookupId)) {\n            if (!this.registry.isLookupType(lookupId)) {\n                throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);\n            }\n            return parseInt(lookupId.replace('Lookup', ''), 10);\n        }\n        else if (isNumber(lookupId)) {\n            return lookupId;\n        }\n        return lookupId.toNumber();\n    }\n    /** @internal Converts a type into a TypeDef for Codec usage */\n    __internal__extract(type, lookupIndex) {\n        const namespace = type.path.join('::');\n        let typeDef;\n        const aliasType = this.__internal__alias[lookupIndex] || getAliasPath(type);\n        try {\n            if (aliasType) {\n                typeDef = this.__internal__extractAliasPath(lookupIndex, aliasType);\n            }\n            else {\n                switch (type.def.type) {\n                    case 'Array':\n                        typeDef = this.__internal__extractArray(lookupIndex, type.def.asArray);\n                        break;\n                    case 'BitSequence':\n                        typeDef = this.__internal__extractBitSequence(lookupIndex, type.def.asBitSequence);\n                        break;\n                    case 'Compact':\n                        typeDef = this.__internal__extractCompact(lookupIndex, type.def.asCompact);\n                        break;\n                    case 'Composite':\n                        typeDef = this.__internal__extractComposite(lookupIndex, type, type.def.asComposite);\n                        break;\n                    case 'HistoricMetaCompat':\n                        typeDef = this.__internal__extractHistoric(lookupIndex, type.def.asHistoricMetaCompat);\n                        break;\n                    case 'Primitive':\n                        typeDef = this.__internal__extractPrimitive(lookupIndex, type);\n                        break;\n                    case 'Sequence':\n                        typeDef = this.__internal__extractSequence(lookupIndex, type.def.asSequence);\n                        break;\n                    case 'Tuple':\n                        typeDef = this.__internal__extractTuple(lookupIndex, type.def.asTuple);\n                        break;\n                    case 'Variant':\n                        typeDef = this.__internal__extractVariant(lookupIndex, type, type.def.asVariant);\n                        break;\n                    default: assertUnreachable(type.def.type);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${stringify(type)}: ${error.message}`);\n        }\n        return objectSpread({\n            docs: sanitizeDocs(type.docs),\n            namespace\n        }, typeDef);\n    }\n    /** @internal Extracts a ScaleInfo Array into TypeDef.VecFixed */\n    __internal__extractArray(_, { len, type }) {\n        const length = len.toNumber();\n        if (length > 2048) {\n            throw new Error('Only support for [Type; <length>], where length <= 2048');\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.VecFixed,\n            length,\n            sub: this.__internal__createSiDef(type)\n        });\n    }\n    /** @internal Extracts a ScaleInfo BitSequence into TypeDef.Plain */\n    __internal__extractBitSequence(_, { bitOrderType, bitStoreType }) {\n        // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine\n        // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly\n        const a = this.__internal__createSiDef(bitOrderType);\n        const b = this.__internal__createSiDef(bitStoreType);\n        const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '')\n            ? [a, b]\n            : [b, a];\n        if (!bitOrder.namespace || !BITVEC_NS.includes(bitOrder.namespace)) {\n            throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);\n        }\n        else if (bitStore.info !== TypeDefInfo.Plain || bitStore.type !== 'u8') {\n            throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);\n        }\n        const isLsb = BITVEC_NS_LSB.includes(bitOrder.namespace);\n        if (!isLsb) {\n            // TODO To remove this limitation, we need to pass an extra info flag\n            // through to the TypeDef (Here we could potentially re-use something\n            // like index (???) to indicate and ensure we use it to pass to the\n            // BitVec constructor - which does handle this type)\n            //\n            // See https://github.com/polkadot-js/api/issues/5588\n            // throw new Error(`Only LSB BitVec is currently supported, found ${bitOrder.namespace}`);\n        }\n        return {\n            info: TypeDefInfo.Plain,\n            type: 'BitVec'\n        };\n    }\n    /** @internal Extracts a ScaleInfo Compact into TypeDef.Compact */\n    __internal__extractCompact(_, { type }) {\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Compact,\n            sub: this.__internal__createSiDef(type)\n        });\n    }\n    /** @internal Extracts a ScaleInfo Composite into TypeDef.{BTree*, Range*, Wrapper*} */\n    __internal__extractComposite(lookupIndex, { params, path }, { fields }) {\n        if (path.length) {\n            const pathFirst = path[0].toString();\n            const pathLast = path[path.length - 1].toString();\n            if (path.length === 1 && pathFirst === 'BTreeMap') {\n                if (params.length !== 2) {\n                    throw new Error(`BTreeMap requires 2 parameters, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.BTreeMap,\n                    sub: params.map(({ type }) => this.__internal__createSiDef(type.unwrap()))\n                });\n            }\n            else if (path.length === 1 && pathFirst === 'BTreeSet') {\n                if (params.length !== 1) {\n                    throw new Error(`BTreeSet requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.BTreeSet,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap())\n                });\n            }\n            else if (['Range', 'RangeInclusive'].includes(pathFirst)) {\n                if (params.length !== 1) {\n                    throw new Error(`Range requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: pathFirst === 'Range'\n                        ? TypeDefInfo.Range\n                        : TypeDefInfo.RangeInclusive,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap()),\n                    type: pathFirst\n                });\n            }\n            else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {\n                if (params.length !== 1) {\n                    throw new Error(`WrapperOpaque requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: pathLast === 'WrapperKeepOpaque'\n                        ? TypeDefInfo.WrapperKeepOpaque\n                        : TypeDefInfo.WrapperOpaque,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap()),\n                    type: pathLast\n                });\n            }\n        }\n        return PATHS_SET.some((p) => matchParts(p, path))\n            ? this.__internal__extractCompositeSet(lookupIndex, params, fields)\n            : this.__internal__extractFields(lookupIndex, fields);\n    }\n    /** @internal Extracts a ScaleInfo CompositeSet into TypeDef.Set */\n    __internal__extractCompositeSet(_, params, fields) {\n        if (params.length !== 1 || fields.length !== 1) {\n            throw new Error('Set handling expects param/field as single entries');\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Set,\n            length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),\n            sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({ index, name }) => ({\n                // This will be an issue > 2^53 - 1 ... don't have those (yet)\n                index: index.toNumber(),\n                info: TypeDefInfo.Plain,\n                name: name.toString(),\n                type: 'Null'\n            }))\n        });\n    }\n    /** @internal Extracts ScaleInfo enum/struct fields into TypeDef.{Struct, Tuple} */\n    __internal__extractFields(lookupIndex, fields) {\n        let isStruct = true;\n        let isTuple = true;\n        const count = fields.length;\n        for (let f = 0; f < count; f++) {\n            const { name } = fields[f];\n            isStruct = isStruct && name.isSome;\n            isTuple = isTuple && name.isNone;\n        }\n        if (!isTuple && !isStruct) {\n            throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');\n        }\n        if (count === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        else if (isTuple && count === 1) {\n            const typeDef = this.__internal__createSiDef(fields[0].type);\n            return objectSpread({}, typeDef, lookupIndex === -1\n                ? null\n                : {\n                    lookupIndex,\n                    lookupName: this.__internal__names[lookupIndex],\n                    lookupNameRoot: typeDef.lookupName\n                }, fields[0].typeName.isSome\n                ? { typeName: sanitize(fields[0].typeName.unwrap()) }\n                : null);\n        }\n        const [sub, alias] = this.__internal__extractFieldsAlias(fields);\n        return withTypeString(this.registry, objectSpread({\n            info: isTuple // Tuple check first\n                ? TypeDefInfo.Tuple\n                : TypeDefInfo.Struct,\n            sub\n        }, alias.size\n            ? { alias }\n            : null, lookupIndex === -1\n            ? null\n            : {\n                lookupIndex,\n                lookupName: this.__internal__names[lookupIndex]\n            }));\n    }\n    /** @internal Apply field aliassed (with no JS conflicts) */\n    __internal__extractFieldsAlias(fields) {\n        const alias = new Map();\n        const count = fields.length;\n        const sub = new Array(count);\n        for (let i = 0; i < count; i++) {\n            const { docs, name, type, typeName } = fields[i];\n            const typeDef = this.__internal__createSiDef(type);\n            if (name.isNone) {\n                sub[i] = typeDef;\n            }\n            else {\n                const [nameField, nameOrig] = this.sanitizeField(name);\n                if (nameField && nameOrig) {\n                    alias.set(nameField, nameOrig);\n                }\n                sub[i] = objectSpread({\n                    docs: sanitizeDocs(docs),\n                    name: nameField\n                }, typeDef, typeName.isSome\n                    ? { typeName: sanitize(typeName.unwrap()) }\n                    : null);\n            }\n        }\n        return [sub, alias];\n    }\n    /** @internal Extracts an internal Historic (pre V14) type  */\n    __internal__extractHistoric(_, type) {\n        return objectSpread({\n            displayName: type.toString(),\n            isFromSi: true\n        }, getTypeDef(type));\n    }\n    /** @internal Extracts a ScaleInfo Primitive into TypeDef.Plain */\n    __internal__extractPrimitive(_, type) {\n        const typeStr = type.def.asPrimitive.type.toString();\n        return {\n            info: TypeDefInfo.Plain,\n            type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()\n        };\n    }\n    /** @internal Applies an alias path onto the TypeDef */\n    __internal__extractAliasPath(_, type) {\n        return {\n            info: TypeDefInfo.Plain,\n            type\n        };\n    }\n    /** @internal Extracts a ScaleInfo Sequence into TypeDef.Vec (with Bytes shortcut) */\n    __internal__extractSequence(lookupIndex, { type }) {\n        const sub = this.__internal__createSiDef(type);\n        if (sub.type === 'u8') {\n            return {\n                info: TypeDefInfo.Plain,\n                type: 'Bytes'\n            };\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Vec,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n    /** @internal Extracts a ScaleInfo Tuple into TypeDef.Tuple */\n    __internal__extractTuple(lookupIndex, ids) {\n        if (ids.length === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        else if (ids.length === 1) {\n            return this.getTypeDef(ids[0]);\n        }\n        const sub = ids.map((t) => this.__internal__createSiDef(t));\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Tuple,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n    /** @internal Extracts a ScaleInfo Variant into TypeDef.{Option, Result, Enum} */\n    __internal__extractVariant(lookupIndex, { params, path }, { variants }) {\n        if (path.length) {\n            const specialVariant = path[0].toString();\n            if (specialVariant === 'Option') {\n                if (params.length !== 1) {\n                    throw new Error(`Option requires 1 parameter, found ${params.length}`);\n                }\n                // NOTE This is opt-in (unhandled), not by default\n                // if (sub.type === 'bool') {\n                //   return withTypeString(this.registry, {\n                //     info: TypeDefInfo.Plain,\n                //     type: 'OptionBool'\n                //   });\n                // }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.Option,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap())\n                });\n            }\n            else if (specialVariant === 'Result') {\n                if (params.length !== 2) {\n                    throw new Error(`Result requires 2 parameters, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.Result,\n                    sub: params.map(({ type }, index) => objectSpread({\n                        name: ['Ok', 'Error'][index]\n                    }, this.__internal__createSiDef(type.unwrap())))\n                });\n            }\n        }\n        if (variants.length === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        return this.__internal__extractVariantEnum(lookupIndex, variants);\n    }\n    /** @internal Extracts a ScaleInfo Variant into TypeDef.Enum */\n    __internal__extractVariantEnum(lookupIndex, variants) {\n        const sub = [];\n        // we may get entries out of order, arrange them first before creating with gaps filled\n        // NOTE: Since we mutate, use a copy of the array as an input\n        variants\n            .slice()\n            .sort((a, b) => a.index.cmp(b.index))\n            .forEach(({ fields, index: bnIndex, name }) => {\n            const index = bnIndex.toNumber();\n            while (sub.length !== index) {\n                sub.push({\n                    index: sub.length,\n                    info: TypeDefInfo.Null,\n                    name: `__Unused${sub.length}`,\n                    type: 'Null'\n                });\n            }\n            sub.push(objectSpread(this.__internal__extractFields(-1, fields), {\n                index,\n                name: name.toString()\n            }));\n        });\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Enum,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n}\n", "import { assertUnreachable } from '@polkadot/util';\nfunction convertType(key) {\n    return (registry, { type }) => registry.createType('Si1TypeDef', {\n        [key]: {\n            type: type.toNumber()\n        }\n    });\n}\nfunction convertArray(registry, { len, type }) {\n    return registry.createType('Si1TypeDef', {\n        Array: {\n            len,\n            type: type.toNumber()\n        }\n    });\n}\nfunction convertBitSequence(registry, { bitOrderType, bitStoreType }) {\n    return registry.createType('Si1TypeDef', {\n        BitSequence: {\n            bitOrderType: bitOrderType.toNumber(),\n            bitStoreType: bitStoreType.toNumber()\n        }\n    });\n}\nconst convertCompact = convertType('Compact');\nfunction convertComposite(registry, { fields }) {\n    return registry.createType('Si1TypeDef', {\n        Composite: {\n            fields: convertFields(registry, fields)\n        }\n    });\n}\nfunction convertFields(registry, fields) {\n    return fields.map(({ docs, name, type, typeName }) => registry.createType('Si1Field', {\n        docs,\n        name,\n        type: type.toNumber(),\n        typeName\n    }));\n}\nfunction convertPhantom(registry, path) {\n    console.warn(`Converting phantom type ${path.map((p) => p.toString()).join('::')} to empty tuple`);\n    return registry.createType('Si1TypeDef', {\n        Tuple: []\n    });\n}\nfunction convertPrimitive(registry, prim) {\n    return registry.createType('Si1TypeDef', {\n        Primitive: prim.toString()\n    });\n}\nconst convertSequence = convertType('Sequence');\nfunction convertTuple(registry, types) {\n    return registry.createType('Si1TypeDef', {\n        Tuple: types.map((t) => t.toNumber())\n    });\n}\nfunction convertVariant(registry, { variants }) {\n    return registry.createType('Si1TypeDef', {\n        Variant: {\n            variants: variants.map(({ discriminant, docs, fields, name }, index) => registry.createType('Si1Variant', {\n                docs,\n                fields: convertFields(registry, fields),\n                index: discriminant.isSome\n                    ? discriminant.unwrap().toNumber()\n                    : index,\n                name\n            }))\n        }\n    });\n}\nfunction convertDef(registry, { def, path }) {\n    let result;\n    switch (def.type) {\n        case 'Array':\n            result = convertArray(registry, def.asArray);\n            break;\n        case 'BitSequence':\n            result = convertBitSequence(registry, def.asBitSequence);\n            break;\n        case 'Compact':\n            result = convertCompact(registry, def.asCompact);\n            break;\n        case 'Composite':\n            result = convertComposite(registry, def.asComposite);\n            break;\n        case 'Phantom':\n            result = convertPhantom(registry, path);\n            break;\n        case 'Primitive':\n            result = convertPrimitive(registry, def.asPrimitive);\n            break;\n        case 'Sequence':\n            result = convertSequence(registry, def.asSequence);\n            break;\n        case 'Tuple':\n            result = convertTuple(registry, def.asTuple);\n            break;\n        case 'Variant':\n            result = convertVariant(registry, def.asVariant);\n            break;\n        default: assertUnreachable(def.type);\n    }\n    return result;\n}\nexport function toV1(registry, types) {\n    return types.map((t, index) => registry.createType('PortableType', {\n        // offsets are +1 from v0\n        id: index + 1,\n        type: {\n            def: convertDef(registry, t),\n            docs: [],\n            params: t.params.map((p) => registry.createType('Si1TypeParameter', {\n                type: p.toNumber()\n            })),\n            path: t.path.map((p) => p.toString())\n        }\n    }));\n}\n", "export * from './storage.js';\n", "import { getSiName } from '../metadata/util/index.js';\n/** @internal */\nexport function unwrapStorageSi(type) {\n    return type.isPlain\n        ? type.asPlain\n        : type.asMap.value;\n}\n/** @internal */\nexport function unwrapStorageType(registry, type, isOptional) {\n    const outputType = getSiName(registry.lookup, unwrapStorageSi(type));\n    return isOptional\n        ? `Option<${outputType}>`\n        : outputType;\n}\n", "export { flattenUniq } from './flattenUniq.js';\nexport { getSiName } from './getSiName.js';\nexport { getUniqTypes } from './getUniqTypes.js';\nexport { toCallsOnly } from './toCallsOnly.js';\nexport { validateTypes } from './validateTypes.js';\n", "/** @internal */\nexport function flattenUniq(list, result = []) {\n    for (let i = 0, count = list.length; i < count; i++) {\n        const entry = list[i];\n        if (Array.isArray(entry)) {\n            flattenUniq(entry, result);\n        }\n        else {\n            result.push(entry);\n        }\n    }\n    return [...new Set(result)];\n}\n", "export function getSiName(lookup, type) {\n    const typeDef = lookup.getTypeDef(type);\n    return typeDef.lookupName || typeDef.type;\n}\n", "import { flattenUniq } from './flattenUniq.js';\nimport { validateTypes } from './validateTypes.js';\n/** @internal */\nfunction extractTypes(lookup, types) {\n    return types.map(({ type }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\nfunction extractFieldTypes(lookup, type) {\n    return lookup.getSiType(type).def.asVariant.variants.map(({ fields }) => extractTypes(lookup, fields));\n}\n/** @internal */\nfunction getPalletNames({ lookup, pallets }) {\n    return pallets.reduce((all, { calls, constants, events, storage }) => {\n        all.push([extractTypes(lookup, constants)]);\n        if (calls.isSome) {\n            all.push(extractFieldTypes(lookup, calls.unwrap().type));\n        }\n        if (events.isSome) {\n            all.push(extractFieldTypes(lookup, events.unwrap().type));\n        }\n        if (storage.isSome) {\n            all.push(storage.unwrap().items.map(({ type }) => {\n                if (type.isPlain) {\n                    return [lookup.getTypeDef(type.asPlain).type];\n                }\n                const { hashers, key, value } = type.asMap;\n                return hashers.length === 1\n                    ? [\n                        lookup.getTypeDef(value).type,\n                        lookup.getTypeDef(key).type\n                    ]\n                    : [\n                        lookup.getTypeDef(value).type,\n                        ...lookup.getSiType(key).def.asTuple.map((t) => lookup.getTypeDef(t).type)\n                    ];\n            }));\n        }\n        return all;\n    }, []);\n}\n/** @internal */\nexport function getUniqTypes(registry, meta, throwError) {\n    return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}\n", "import { logger } from '@polkadot/util';\nimport { extractTypes } from './extractTypes.js';\nimport { flattenUniq } from './flattenUniq.js';\nconst l = logger('metadata');\n/** @internal */\nexport function validateTypes(registry, throwError, types) {\n    const missing = flattenUniq(extractTypes(types))\n        .filter((type) => !registry.hasType(type) &&\n        !registry.isLookupType(type))\n        .sort();\n    if (missing.length !== 0) {\n        const message = `Unknown types found, no types for ${missing.join(', ')}`;\n        if (throwError) {\n            throw new Error(message);\n        }\n        else {\n            l.warn(message);\n        }\n    }\n    return types;\n}\n", "import { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\nfunction extractSubSingle(_, { sub }) {\n    const { lookupName, type } = sub;\n    return extractTypes([lookupName || type]);\n}\nfunction extractSubArray(_, { sub }) {\n    return extractTypes(sub.map(({ lookupName, type }) => lookupName || type));\n}\nfunction unhandled(type, { info }) {\n    throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n}\nconst mapping = {\n    [TypeDefInfo.BTreeMap]: extractSubArray,\n    [TypeDefInfo.BTreeSet]: extractSubSingle,\n    [TypeDefInfo.Compact]: extractSubSingle,\n    [TypeDefInfo.DoNotConstruct]: unhandled,\n    [TypeDefInfo.Enum]: extractSubArray,\n    [TypeDefInfo.HashMap]: extractSubArray,\n    [TypeDefInfo.Int]: unhandled,\n    [TypeDefInfo.Linkage]: extractSubSingle,\n    [TypeDefInfo.Null]: unhandled,\n    [TypeDefInfo.Option]: extractSubSingle,\n    [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n    [TypeDefInfo.Range]: extractSubSingle,\n    [TypeDefInfo.RangeInclusive]: extractSubSingle,\n    [TypeDefInfo.Result]: extractSubArray,\n    [TypeDefInfo.Set]: extractSubArray,\n    [TypeDefInfo.Si]: unhandled,\n    [TypeDefInfo.Struct]: extractSubArray,\n    [TypeDefInfo.Tuple]: extractSubArray,\n    [TypeDefInfo.UInt]: unhandled,\n    [TypeDefInfo.Vec]: extractSubSingle,\n    [TypeDefInfo.VecFixed]: extractSubSingle,\n    [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n    [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\nexport function extractTypes(types) {\n    const count = types.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const type = types[i];\n        const typeDef = getTypeDef(type);\n        result[i] = mapping[typeDef.info](type, typeDef);\n    }\n    return result;\n}\n", "import { objectSpread } from '@polkadot/util';\nfunction trimDocs(docs) {\n    const strings = docs.map((d) => d.toString().trim());\n    const firstEmpty = strings.findIndex((d) => !d.length);\n    return firstEmpty === -1\n        ? strings\n        : strings.slice(0, firstEmpty);\n}\n/** @internal */\nexport function toCallsOnly(registry, { extrinsic, lookup, pallets }) {\n    return registry.createTypeUnsafe('MetadataLatest', [{\n            extrinsic,\n            lookup: {\n                types: lookup.types.map(({ id, type }) => registry.createTypeUnsafe('PortableType', [{\n                        id,\n                        type: objectSpread({}, type, { docs: trimDocs(type.docs) })\n                    }]))\n            },\n            pallets: pallets.map(({ calls, index, name }) => ({\n                calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n                index,\n                name\n            }))\n        }]).toJSON();\n}\n", "export { BTreeMap, BTreeSet, CodecMap, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Json, Linkage, Map, Option, Range, RangeInclusive, Raw, Result, Set, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\n", "export * from '@polkadot/types-create/exports';\nexport * from './createClass.js';\nexport * from './createType.js';\nexport * from './lazy.js';\nexport * from './registry.js';\n", "import { createClassUnsafe } from '@polkadot/types-create';\nexport function createClass(registry, type) {\n    return createClassUnsafe(registry, type);\n}\n", "import { createTypeUnsafe } from '@polkadot/types-create';\n/**\n * Create an instance of a `type` with a given `params`.\n * @param type - A recognizable string representing the type to create an\n * instance from\n * @param params - The value to instantiate the type with\n */\nexport function createType(registry, type, ...params) {\n    return createTypeUnsafe(registry, type, params);\n}\n", "import { lazyMethod } from '@polkadot/util';\nexport function lazyVariants(lookup, { type }, getName, creator) {\n    const result = {};\n    const variants = lookup.getSiType(type).def.asVariant.variants;\n    for (let i = 0, count = variants.length; i < count; i++) {\n        lazyMethod(result, variants[i], creator, getName, i);\n    }\n    return result;\n}\n", "import { DoNotConstruct, Json, Raw } from '@polkadot/types-codec';\nimport { constructTypeClass, createClassUnsafe, createTypeUnsafe } from '@polkadot/types-create';\nimport { assertReturn, BN_ZERO, formatBalance, isBn, isFunction, isNumber, isString, isU8a, lazyMethod, logger, objectSpread, stringCamelCase, stringify } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from '../extrinsic/signedExtensions/index.js';\nimport { GenericEventData } from '../generic/Event.js';\nimport * as baseTypes from '../index.types.js';\nimport * as definitions from '../interfaces/definitions.js';\nimport { createCallFunction } from '../metadata/decorate/extrinsics/index.js';\nimport { decorateConstants, filterCallsSome, filterEventsSome } from '../metadata/decorate/index.js';\nimport { Metadata } from '../metadata/Metadata.js';\nimport { PortableRegistry } from '../metadata/PortableRegistry/index.js';\nimport { lazyVariants } from './lazy.js';\nconst DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);\nconst l = logger('registry');\nfunction sortDecimalStrings(a, b) {\n    return parseInt(a, 10) - parseInt(b, 10);\n}\nfunction valueToString(v) {\n    return v.toString();\n}\nfunction getFieldArgs(lookup, fields) {\n    const count = fields.length;\n    const args = new Array(count);\n    for (let i = 0; i < count; i++) {\n        args[i] = lookup.getTypeDef(fields[i].type).type;\n    }\n    return args;\n}\nfunction clearRecord(record) {\n    const keys = Object.keys(record);\n    for (let i = 0, count = keys.length; i < count; i++) {\n        delete record[keys[i]];\n    }\n}\nfunction getVariantStringIdx({ index }) {\n    return index.toString();\n}\nfunction injectErrors(_, { lookup, pallets }, version, result) {\n    clearRecord(result);\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { errors, index, name } = pallets[i];\n        if (errors.isSome) {\n            const sectionName = stringCamelCase(name);\n            lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, errors.unwrap(), getVariantStringIdx, ({ docs, fields, index, name }) => ({\n                args: getFieldArgs(lookup, fields),\n                docs: docs.map(valueToString),\n                fields,\n                index: index.toNumber(),\n                method: name.toString(),\n                name: name.toString(),\n                section: sectionName\n            })));\n        }\n    }\n}\nfunction injectEvents(registry, { lookup, pallets }, version, result) {\n    const filtered = pallets.filter(filterEventsSome);\n    clearRecord(result);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { events, index, name } = filtered[i];\n        lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, events.unwrap(), getVariantStringIdx, (variant) => {\n            const meta = registry.createType('EventMetadataLatest', objectSpread({}, variant, { args: getFieldArgs(lookup, variant.fields) }));\n            return class extends GenericEventData {\n                constructor(registry, value) {\n                    super(registry, value, meta, stringCamelCase(name), variant.name.toString());\n                }\n            };\n        }));\n    }\n}\nfunction injectExtrinsics(registry, { lookup, pallets }, version, result, mapping) {\n    const filtered = pallets.filter(filterCallsSome);\n    clearRecord(result);\n    clearRecord(mapping);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { calls, index, name } = filtered[i];\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        const sectionName = stringCamelCase(name);\n        const allCalls = calls.unwrap();\n        lazyMethod(result, sectionIndex, () => lazyVariants(lookup, allCalls, getVariantStringIdx, (variant) => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));\n        const { path } = registry.lookup.getSiType(allCalls.type);\n        // frame_system::pallet::Call / pallet_balances::pallet::Call / polkadot_runtime_parachains::configuration::pallet::Call /\n        const palletIdx = path.findIndex((v) => v.eq('pallet'));\n        if (palletIdx !== -1) {\n            const name = stringCamelCase(path\n                .slice(0, palletIdx)\n                .map((p, i) => i === 0\n                // frame_system || pallet_balances\n                ? p.replace(/^(frame|pallet)_/, '')\n                : p)\n                .join(' '));\n            if (!mapping[name]) {\n                mapping[name] = [sectionName];\n            }\n            else {\n                mapping[name].push(sectionName);\n            }\n        }\n    }\n}\nfunction extractProperties(registry, metadata) {\n    const original = registry.getChainProperties();\n    const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n    const ss58Format = constants['system'] && (constants['system']['sS58Prefix'] || constants['system']['ss58Prefix']);\n    if (!ss58Format) {\n        return original;\n    }\n    const { tokenDecimals, tokenSymbol } = original || {};\n    return registry.createTypeUnsafe('ChainProperties', [{ ss58Format, tokenDecimals, tokenSymbol }]);\n}\nexport class TypeRegistry {\n    constructor(createdAtHash) {\n        this.__internal__classes = new Map();\n        this.__internal__definitions = new Map();\n        this.__internal__firstCallIndex = null;\n        this.__internal__hasher = blake2AsU8a;\n        this.__internal__knownTypes = {};\n        this.__internal__metadataVersion = 0;\n        this.__internal__signedExtensions = fallbackExtensions;\n        this.__internal__unknownTypes = new Map();\n        this.__internal__metadataCalls = {};\n        this.__internal__metadataErrors = {};\n        this.__internal__metadataEvents = {};\n        this.__internal__moduleMap = {};\n        this.__internal__registerObject = (obj) => {\n            const entries = Object.entries(obj);\n            for (let e = 0, count = entries.length; e < count; e++) {\n                const [name, type] = entries[e];\n                if (isFunction(type)) {\n                    // This _looks_ a bit funny, but `typeof Clazz === 'function'\n                    this.__internal__classes.set(name, type);\n                }\n                else {\n                    const def = isString(type)\n                        ? type\n                        : stringify(type);\n                    if (name === def) {\n                        throw new Error(`Unable to register circular ${name} === ${def}`);\n                    }\n                    // we already have this type, remove the classes registered for it\n                    if (this.__internal__classes.has(name)) {\n                        this.__internal__classes.delete(name);\n                    }\n                    this.__internal__definitions.set(name, def);\n                }\n            }\n        };\n        // register alias types alongside the portable/lookup setup\n        // (we don't combine this into setLookup since that would/could\n        // affect stand-along lookups, such as ABIs which don't have\n        // actual on-chain metadata)\n        this.__internal__registerLookup = (lookup) => {\n            // attach the lookup before we register any types\n            this.setLookup(lookup);\n            // we detect based on runtime configuration\n            let Weight = null;\n            if (this.hasType('SpWeightsWeightV2Weight')) {\n                // detection for WeightV2 type based on latest naming\n                const weightv2 = this.createType('SpWeightsWeightV2Weight');\n                Weight = weightv2.refTime && weightv2.proofSize\n                    // with both refTime & proofSize we use as-is (WeightV2)\n                    ? 'SpWeightsWeightV2Weight'\n                    // fallback to WeightV1 (WeightV1.5 is a struct, single field)\n                    : 'WeightV1';\n            }\n            else if (!isBn(this.createType('Weight'))) {\n                // where we have an already-supplied BN override, we don't clobber\n                // it with our detected value (This protects against pre-defines\n                // where Weight may be aliassed to WeightV0, e.g. in early Kusama chains)\n                Weight = 'WeightV1';\n            }\n            if (Weight) {\n                // we have detected a version, adjust the definition\n                this.register({ Weight });\n            }\n        };\n        this.__internal__knownDefaults = objectSpread({ Json, Metadata, PortableRegistry, Raw }, baseTypes);\n        this.__internal__knownDefaultsEntries = Object.entries(this.__internal__knownDefaults);\n        this.__internal__knownDefinitions = definitions;\n        const allKnown = Object.values(this.__internal__knownDefinitions);\n        for (let i = 0, count = allKnown.length; i < count; i++) {\n            this.register(allKnown[i].types);\n        }\n        if (createdAtHash) {\n            this.createdAtHash = this.createType('BlockHash', createdAtHash);\n        }\n    }\n    get chainDecimals() {\n        if (this.__internal__chainProperties?.tokenDecimals.isSome) {\n            const allDecimals = this.__internal__chainProperties.tokenDecimals.unwrap();\n            if (allDecimals.length) {\n                return allDecimals.map((b) => b.toNumber());\n            }\n        }\n        return [12];\n    }\n    get chainSS58() {\n        return this.__internal__chainProperties?.ss58Format.isSome\n            ? this.__internal__chainProperties.ss58Format.unwrap().toNumber()\n            : undefined;\n    }\n    get chainTokens() {\n        if (this.__internal__chainProperties?.tokenSymbol.isSome) {\n            const allTokens = this.__internal__chainProperties.tokenSymbol.unwrap();\n            if (allTokens.length) {\n                return allTokens.map(valueToString);\n            }\n        }\n        return [formatBalance.getDefaults().unit];\n    }\n    get firstCallIndex() {\n        return this.__internal__firstCallIndex || DEFAULT_FIRST_CALL_IDX;\n    }\n    /**\n     * @description Returns true if the type is in a Compat format\n     */\n    isLookupType(value) {\n        return /Lookup\\d+$/.test(value);\n    }\n    /**\n     * @description Creates a lookup string from the supplied id\n     */\n    createLookupType(lookupId) {\n        return `Lookup${typeof lookupId === 'number' ? lookupId : lookupId.toNumber()}`;\n    }\n    get knownTypes() {\n        return this.__internal__knownTypes;\n    }\n    get lookup() {\n        return assertReturn(this.__internal__lookup, 'PortableRegistry has not been set on this registry');\n    }\n    get metadata() {\n        return assertReturn(this.__internal__metadata, 'Metadata has not been set on this registry');\n    }\n    get unknownTypes() {\n        return [...this.__internal__unknownTypes.keys()];\n    }\n    get signedExtensions() {\n        return this.__internal__signedExtensions;\n    }\n    clearCache() {\n        this.__internal__classes = new Map();\n    }\n    /**\n     * @describe Creates an instance of the class\n     */\n    createClass(type) {\n        return createClassUnsafe(this, type);\n    }\n    /**\n     * @describe Creates an instance of the class\n     */\n    createClassUnsafe(type) {\n        return createClassUnsafe(this, type);\n    }\n    /**\n     * @description Creates an instance of a type as registered\n     */\n    createType(type, ...params) {\n        return createTypeUnsafe(this, type, params);\n    }\n    /**\n     * @description Creates an instance of a type as registered\n     */\n    createTypeUnsafe(type, params, options) {\n        return createTypeUnsafe(this, type, params, options);\n    }\n    // find a specific call\n    findMetaCall(callIndex) {\n        const [section, method] = [callIndex[0], callIndex[1]];\n        return assertReturn(this.__internal__metadataCalls[`${section}`] && this.__internal__metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);\n    }\n    // finds an error\n    findMetaError(errorIndex) {\n        const [section, method] = isU8a(errorIndex)\n            ? [errorIndex[0], errorIndex[1]]\n            : [\n                errorIndex.index.toNumber(),\n                isU8a(errorIndex.error)\n                    ? errorIndex.error[0]\n                    : errorIndex.error.toNumber()\n            ];\n        return assertReturn(this.__internal__metadataErrors[`${section}`] && this.__internal__metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);\n    }\n    findMetaEvent(eventIndex) {\n        const [section, method] = [eventIndex[0], eventIndex[1]];\n        return assertReturn(this.__internal__metadataEvents[`${section}`] && this.__internal__metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);\n    }\n    get(name, withUnknown, knownTypeDef) {\n        return this.getUnsafe(name, withUnknown, knownTypeDef);\n    }\n    getUnsafe(name, withUnknown, knownTypeDef) {\n        let Type = this.__internal__classes.get(name) || this.__internal__knownDefaults[name];\n        // we have not already created the type, attempt it\n        if (!Type) {\n            const definition = this.__internal__definitions.get(name);\n            let BaseType;\n            // we have a definition, so create the class now (lazily)\n            if (definition) {\n                BaseType = createClassUnsafe(this, definition);\n            }\n            else if (knownTypeDef) {\n                BaseType = constructTypeClass(this, knownTypeDef);\n            }\n            else if (withUnknown) {\n                l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n                this.__internal__unknownTypes.set(name, true);\n                BaseType = DoNotConstruct.with(name);\n            }\n            if (BaseType) {\n                // NOTE If we didn't extend here, we would have strange artifacts. An example is\n                // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n                // Additionally, we now pass through the registry, which is a link to ourselves\n                Type = class extends BaseType {\n                };\n                this.__internal__classes.set(name, Type);\n                // In the case of lookups, we also want to store the actual class against\n                // the lookup name, instad of having to traverse again\n                if (knownTypeDef && isNumber(knownTypeDef.lookupIndex)) {\n                    this.__internal__classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);\n                }\n            }\n        }\n        return Type;\n    }\n    getChainProperties() {\n        return this.__internal__chainProperties;\n    }\n    getClassName(Type) {\n        // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of\n        // items such as u32 & U32, we get the lowercase versions here... not quite as optimal\n        // (previously this used to be a simple find & return)\n        const names = [];\n        for (const [name, Clazz] of this.__internal__knownDefaultsEntries) {\n            if (Type === Clazz) {\n                names.push(name);\n            }\n        }\n        for (const [name, Clazz] of this.__internal__classes.entries()) {\n            if (Type === Clazz) {\n                names.push(name);\n            }\n        }\n        return names.length\n            // both sort and reverse are done in-place\n            // ['U32', 'u32'] -> ['u32', 'U32']\n            ? names.sort().reverse()[0]\n            : undefined;\n    }\n    getDefinition(typeName) {\n        return this.__internal__definitions.get(typeName);\n    }\n    getModuleInstances(specName, moduleName) {\n        return this.__internal__knownTypes?.typesBundle?.spec?.[specName.toString()]?.instances?.[moduleName] || this.__internal__moduleMap[moduleName];\n    }\n    getOrThrow(name) {\n        const Clazz = this.get(name);\n        if (!Clazz) {\n            throw new Error(`type ${name} not found`);\n        }\n        return Clazz;\n    }\n    getOrUnknown(name) {\n        return this.get(name, true);\n    }\n    getSignedExtensionExtra() {\n        return expandExtensionTypes(this.__internal__signedExtensions, 'payload', this.__internal__userExtensions);\n    }\n    getSignedExtensionTypes() {\n        return expandExtensionTypes(this.__internal__signedExtensions, 'extrinsic', this.__internal__userExtensions);\n    }\n    hasClass(name) {\n        return this.__internal__classes.has(name) || !!this.__internal__knownDefaults[name];\n    }\n    hasDef(name) {\n        return this.__internal__definitions.has(name);\n    }\n    hasType(name) {\n        return !this.__internal__unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));\n    }\n    hash(data) {\n        return this.createType('CodecHash', this.__internal__hasher(data));\n    }\n    // eslint-disable-next-line no-dupe-class-members\n    register(arg1, arg2) {\n        // NOTE Constructors appear as functions here\n        if (isFunction(arg1)) {\n            this.__internal__classes.set(arg1.name, arg1);\n        }\n        else if (isString(arg1)) {\n            if (!isFunction(arg2)) {\n                throw new Error(`Expected class definition passed to '${arg1}' registration`);\n            }\n            else if (arg1 === arg2.toString()) {\n                throw new Error(`Unable to register circular ${arg1} === ${arg1}`);\n            }\n            this.__internal__classes.set(arg1, arg2);\n        }\n        else {\n            this.__internal__registerObject(arg1);\n        }\n    }\n    // sets the chain properties\n    setChainProperties(properties) {\n        if (properties) {\n            this.__internal__chainProperties = properties;\n        }\n    }\n    setHasher(hasher) {\n        this.__internal__hasher = hasher || blake2AsU8a;\n    }\n    setKnownTypes(knownTypes) {\n        this.__internal__knownTypes = knownTypes;\n    }\n    setLookup(lookup) {\n        this.__internal__lookup = lookup;\n        // register all applicable types found\n        lookup.register();\n    }\n    // sets the metadata\n    setMetadata(metadata, signedExtensions, userExtensions, noInitWarn) {\n        this.__internal__metadata = metadata.asLatest;\n        this.__internal__metadataVersion = metadata.version;\n        this.__internal__firstCallIndex = null;\n        // attach the lookup at this point and register relevant types (before injecting)\n        this.__internal__registerLookup(this.__internal__metadata.lookup);\n        injectExtrinsics(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataCalls, this.__internal__moduleMap);\n        injectErrors(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataErrors);\n        injectEvents(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataEvents);\n        // set the default call index (the lowest section, the lowest method)\n        // in most chains this should be 0,0\n        const [defSection] = Object\n            .keys(this.__internal__metadataCalls)\n            .sort(sortDecimalStrings);\n        if (defSection) {\n            const [defMethod] = Object\n                .keys(this.__internal__metadataCalls[defSection])\n                .sort(sortDecimalStrings);\n            if (defMethod) {\n                this.__internal__firstCallIndex = new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]);\n            }\n        }\n        // setup the available extensions\n        this.setSignedExtensions(signedExtensions || (this.__internal__metadata.extrinsic.version.gt(BN_ZERO)\n            // FIXME Use the extension and their injected types\n            ? this.__internal__metadata.extrinsic.signedExtensions.map(({ identifier }) => identifier.toString())\n            : fallbackExtensions), userExtensions, noInitWarn);\n        // setup the chain properties with format overrides\n        this.setChainProperties(extractProperties(this, metadata));\n    }\n    // sets the available signed extensions\n    setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions, noInitWarn) {\n        this.__internal__signedExtensions = signedExtensions;\n        this.__internal__userExtensions = userExtensions;\n        if (!noInitWarn) {\n            const unknown = findUnknownExtensions(this.__internal__signedExtensions, this.__internal__userExtensions);\n            if (unknown.length) {\n                l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n            }\n        }\n    }\n}\n", "import { objectSpread } from '@polkadot/util';\nimport { polkadot } from './polkadot.js';\nimport { shell } from './shell.js';\nimport { statemint } from './statemint.js';\nimport { substrate } from './substrate.js';\nexport const allExtensions = objectSpread({}, substrate, polkadot, shell, statemint);\nexport const fallbackExtensions = [\n    'CheckVersion',\n    'CheckGenesis',\n    'CheckEra',\n    'CheckNonce',\n    'CheckWeight',\n    'ChargeTransactionPayment',\n    'CheckBlockGasLimit'\n];\nexport function findUnknownExtensions(extensions, userExtensions = {}) {\n    const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];\n    return extensions.filter((k) => !names.includes(k));\n}\nexport function expandExtensionTypes(extensions, type, userExtensions = {}) {\n    return extensions\n        // Always allow user extensions first - these should provide overrides\n        .map((k) => userExtensions[k] || allExtensions[k])\n        .filter((info) => !!info)\n        .reduce((result, info) => objectSpread(result, info[type]), {});\n}\n", "import { emptyCheck } from './emptyCheck.js';\nexport const polkadot = {\n    LimitParathreadCommits: emptyCheck,\n    OnlyStakingAndClaims: emptyCheck,\n    PrevalidateAttests: emptyCheck,\n    RestrictFunctionality: emptyCheck,\n    TransactionCallFilter: emptyCheck,\n    ValidateDoubleVoteReports: emptyCheck\n};\n", "export const emptyCheck = {\n    extrinsic: {},\n    payload: {}\n};\n", "import { emptyCheck } from './emptyCheck.js';\nexport const shell = {\n    DisallowSigned: emptyCheck\n};\n", "export const statemint = {\n    ChargeAssetTxPayment: {\n        extrinsic: {\n            tip: 'Compact<Balance>',\n            // eslint-disable-next-line sort-keys\n            assetId: 'Option<AssetId>'\n        },\n        payload: {}\n    }\n};\n", "import { emptyCheck } from './emptyCheck.js';\nconst CheckMortality = {\n    extrinsic: {\n        era: 'ExtrinsicEra'\n    },\n    payload: {\n        blockHash: 'Hash'\n    }\n};\nexport const substrate = {\n    ChargeTransactionPayment: {\n        extrinsic: {\n            tip: 'Compact<Balance>'\n        },\n        payload: {}\n    },\n    CheckBlockGasLimit: emptyCheck,\n    CheckEra: CheckMortality,\n    CheckGenesis: {\n        extrinsic: {},\n        payload: {\n            genesisHash: 'Hash'\n        }\n    },\n    CheckMortality,\n    CheckNonZeroSender: emptyCheck,\n    CheckNonce: {\n        extrinsic: {\n            nonce: 'Compact<Index>'\n        },\n        payload: {}\n    },\n    CheckSpecVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckTxVersion: {\n        extrinsic: {},\n        payload: {\n            transactionVersion: 'u32'\n        }\n    },\n    CheckVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckWeight: emptyCheck,\n    LockStakingStatus: emptyCheck,\n    ValidateEquivocationReport: emptyCheck\n};\n", "import { Null, Struct, Tuple } from '@polkadot/types-codec';\nimport { objectProperties, objectSpread } from '@polkadot/util';\n/** @internal */\nfunction decodeEvent(registry, value) {\n    if (!value || !value.length) {\n        return { DataType: Null };\n    }\n    const index = value.subarray(0, 2);\n    return {\n        DataType: registry.findMetaEvent(index),\n        value: {\n            data: value.subarray(2),\n            index\n        }\n    };\n}\n/**\n * @name GenericEventData\n * @description\n * Wrapper for the actual data that forms part of an [[Event]]\n */\nexport class GenericEventData extends Tuple {\n    constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {\n        const fields = meta?.fields || [];\n        super(registry, fields.map(({ type }) => registry.createLookupType(type)), value);\n        this.__internal__names = null;\n        this.__internal__meta = meta;\n        this.__internal__method = method;\n        this.__internal__section = section;\n        this.__internal__typeDef = fields.map(({ type }) => registry.lookup.getTypeDef(type));\n        const names = fields\n            .map(({ name }) => registry.lookup.sanitizeField(name)[0])\n            .filter((n) => !!n);\n        if (names.length === fields.length) {\n            this.__internal__names = names;\n            objectProperties(this, names, (_, i) => this[i]);\n        }\n    }\n    /**\n     * @description The wrapped [[EventMetadata]]\n     */\n    get meta() {\n        return this.__internal__meta;\n    }\n    /**\n     * @description The method as a string\n     */\n    get method() {\n        return this.__internal__method;\n    }\n    /**\n     * @description The field names (as available)\n     */\n    get names() {\n        return this.__internal__names;\n    }\n    /**\n     * @description The section as a string\n     */\n    get section() {\n        return this.__internal__section;\n    }\n    /**\n     * @description The [[TypeDef]] for this event\n     */\n    get typeDef() {\n        return this.__internal__typeDef;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        if (this.__internal__names !== null) {\n            const json = {};\n            for (let i = 0, count = this.__internal__names.length; i < count; i++) {\n                json[this.__internal__names[i]] = this[i].toHuman(isExtended);\n            }\n            return json;\n        }\n        return super.toHuman(isExtended);\n    }\n}\n/**\n * @name GenericEvent\n * @description\n * A representation of a system event. These are generated via the [[Metadata]] interfaces and\n * specific to a specific Substrate runtime\n */\nexport class GenericEvent extends Struct {\n    // Currently we _only_ decode from Uint8Array, since we expect it to\n    // be used via EventRecord\n    constructor(registry, _value) {\n        const { DataType, value } = decodeEvent(registry, _value);\n        super(registry, {\n            index: 'EventId',\n            // eslint-disable-next-line sort-keys\n            data: DataType\n        }, value);\n    }\n    /**\n     * @description The wrapped [[EventData]]\n     */\n    get data() {\n        return this.getT('data');\n    }\n    /**\n     * @description The [[EventId]], identifying the raw event\n     */\n    get index() {\n        return this.getT('index');\n    }\n    /**\n     * @description The [[EventMetadata]] with the documentation\n     */\n    get meta() {\n        return this.data.meta;\n    }\n    /**\n     * @description The method string identifying the event\n     */\n    get method() {\n        return this.data.method;\n    }\n    /**\n     * @description The section string identifying the event\n     */\n    get section() {\n        return this.data.section;\n    }\n    /**\n     * @description The [[TypeDef]] for the event\n     */\n    get typeDef() {\n        return this.data.typeDef;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded) {\n        return objectSpread({\n            method: this.method,\n            section: this.section\n        }, isExpanded\n            ? { docs: this.meta.docs.map((d) => d.toString()) }\n            : null, super.toHuman(isExpanded));\n    }\n}\n", "export * from './extrinsic/index.js';\nexport * from './generic/index.js';\nexport * from './primitive/index.js';\n", "export { GenericExtrinsic } from './Extrinsic.js';\nexport { GenericExtrinsicEra, ImmortalEra as GenericImmortalEra, MortalEra as GenericMortalEra } from './ExtrinsicEra.js';\nexport { GenericExtrinsicPayload } from './ExtrinsicPayload.js';\nexport { GenericExtrinsicPayloadUnknown } from './ExtrinsicPayloadUnknown.js';\nexport { GenericExtrinsicUnknown } from './ExtrinsicUnknown.js';\nexport { GenericSignerPayload } from './SignerPayload.js';\nexport * from './v4/index.js';\n", "import { AbstractBase } from '@polkadot/types-codec';\nimport { compactAddLength, compactFromU8a, compactToU8a, isHex, isU8a, objectProperty, objectSpread, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { EXTRINSIC_VERSION as LATEST_EXTRINSIC_VERSION } from './v4/Extrinsic.js';\nimport { BIT_SIGNED, BIT_UNSIGNED, DEFAULT_VERSION, UNMASK_VERSION } from './constants.js';\nconst VERSIONS = [\n    'ExtrinsicUnknown',\n    'ExtrinsicUnknown',\n    'ExtrinsicUnknown',\n    'ExtrinsicUnknown',\n    'ExtrinsicV4'\n];\nexport { LATEST_EXTRINSIC_VERSION };\n/** @internal */\nfunction newFromValue(registry, value, version) {\n    if (value instanceof GenericExtrinsic) {\n        return value.unwrap();\n    }\n    const isSigned = (version & BIT_SIGNED) === BIT_SIGNED;\n    const type = VERSIONS[version & UNMASK_VERSION] || VERSIONS[0];\n    // we cast here since the VERSION definition is incredibly broad - we don't have a\n    // slice for \"only add extrinsic types\", and more string definitions become unwieldy\n    return registry.createTypeUnsafe(type, [value, { isSigned, version }]);\n}\n/** @internal */\nfunction decodeExtrinsic(registry, value, version = DEFAULT_VERSION) {\n    if (isU8a(value) || Array.isArray(value) || isHex(value)) {\n        return decodeU8a(registry, u8aToU8a(value), version);\n    }\n    else if (value instanceof registry.createClassUnsafe('Call')) {\n        return newFromValue(registry, { method: value }, version);\n    }\n    return newFromValue(registry, value, version);\n}\n/** @internal */\nfunction decodeU8a(registry, value, version) {\n    if (!value.length) {\n        return newFromValue(registry, new Uint8Array(), version);\n    }\n    const [offset, length] = compactFromU8a(value);\n    const total = offset + length.toNumber();\n    if (total > value.length) {\n        throw new Error(`Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    const data = value.subarray(offset, total);\n    return newFromValue(registry, data.subarray(1), data[0]);\n}\nclass ExtrinsicBase extends AbstractBase {\n    constructor(registry, value, initialU8aLength) {\n        super(registry, value, initialU8aLength);\n        const signKeys = Object.keys(registry.getSignedExtensionTypes());\n        const getter = (key) => this.inner.signature[key];\n        // This is on the abstract class, ensuring that hasOwnProperty operates\n        // correctly, i.e. it needs to be on the base class exposing it\n        for (let i = 0, count = signKeys.length; i < count; i++) {\n            objectProperty(this, signKeys[i], getter);\n        }\n    }\n    /**\n     * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]\n     */\n    get args() {\n        return this.method.args;\n    }\n    /**\n     * @description The argument definitions, compatible with [[Call]]\n     */\n    get argsDef() {\n        return this.method.argsDef;\n    }\n    /**\n     * @description The actual `[sectionIndex, methodIndex]` as used in the Call\n     */\n    get callIndex() {\n        return this.method.callIndex;\n    }\n    /**\n     * @description The actual data for the Call\n     */\n    get data() {\n        return this.method.data;\n    }\n    /**\n     * @description The era for this extrinsic\n     */\n    get era() {\n        return this.inner.signature.era;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description `true` id the extrinsic is signed\n     */\n    get isSigned() {\n        return this.inner.signature.isSigned;\n    }\n    /**\n     * @description The length of the actual data, excluding prefix\n     */\n    get length() {\n        return this.toU8a(true).length;\n    }\n    /**\n     * @description The [[FunctionMetadataLatest]] that describes the extrinsic\n     */\n    get meta() {\n        return this.method.meta;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n    get method() {\n        return this.inner.method;\n    }\n    /**\n     * @description The nonce for this extrinsic\n     */\n    get nonce() {\n        return this.inner.signature.nonce;\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n    get signature() {\n        return this.inner.signature.signature;\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n    get signer() {\n        return this.inner.signature.signer;\n    }\n    /**\n     * @description Forwards compat\n     */\n    get tip() {\n        return this.inner.signature.tip;\n    }\n    /**\n     * @description Returns the raw transaction version (not flagged with signing information)\n    */\n    get type() {\n        return this.inner.version;\n    }\n    get inner() {\n        return this.unwrap();\n    }\n    /**\n     * @description Returns the encoded version flag\n    */\n    get version() {\n        return this.type | (this.isSigned ? BIT_SIGNED : BIT_UNSIGNED);\n    }\n    /**\n     * @description Checks if the source matches this in type\n     */\n    is(other) {\n        return this.method.is(other);\n    }\n    unwrap() {\n        return super.unwrap();\n    }\n}\n/**\n * @name GenericExtrinsic\n * @description\n * Representation of an Extrinsic in the system. It contains the actual call,\n * (optional) signature and encodes with an actual length prefix\n *\n * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.\n *\n * Can be:\n * - signed, to create a transaction\n * - left as is, to create an inherent\n */\nclass GenericExtrinsic extends ExtrinsicBase {\n    constructor(registry, value, { version } = {}) {\n        super(registry, decodeExtrinsic(registry, value, version));\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        if (!this.__internal__hashCache) {\n            this.__internal__hashCache = super.hash;\n        }\n        return this.__internal__hashCache;\n    }\n    /**\n     * @description Injects an already-generated signature into the extrinsic\n     */\n    addSignature(signer, signature, payload) {\n        this.inner.addSignature(signer, signature, payload);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const encoded = u8aConcat(...this.toU8aInner());\n        return {\n            inner: this.isSigned\n                ? this.inner.inspect().inner\n                : this.inner.method.inspect().inner,\n            outer: [compactToU8a(encoded.length), new Uint8Array([this.version])]\n        };\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n    sign(account, options) {\n        this.inner.sign(account, options);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n    signFake(signer, options) {\n        this.inner.signFake(signer, options);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isBare) {\n        return u8aToHex(this.toU8a(isBare));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded) {\n        return objectSpread({}, {\n            isSigned: this.isSigned,\n            method: this.method.toHuman(isExpanded)\n        }, this.isSigned\n            ? {\n                era: this.era.toHuman(isExpanded),\n                nonce: this.nonce.toHuman(isExpanded),\n                signature: this.signature.toHex(),\n                signer: this.signer.toHuman(isExpanded),\n                tip: this.tip.toHuman(isExpanded)\n            }\n            : null);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Extrinsic';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value is not length-prefixed\n     */\n    toU8a(isBare) {\n        const encoded = u8aConcat(...this.toU8aInner());\n        return isBare\n            ? encoded\n            : compactAddLength(encoded);\n    }\n    toU8aInner() {\n        // we do not apply bare to the internal values, rather this only determines out length addition,\n        // where we strip all lengths this creates an extrinsic that cannot be decoded\n        return [\n            new Uint8Array([this.version]),\n            this.inner.toU8a()\n        ];\n    }\n}\nGenericExtrinsic.LATEST_EXTRINSIC_VERSION = LATEST_EXTRINSIC_VERSION;\nexport { GenericExtrinsic };\n", "import { Struct } from '@polkadot/types-codec';\nimport { isU8a } from '@polkadot/util';\nexport const EXTRINSIC_VERSION = 4;\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n    constructor(registry, value, { isSigned } = {}) {\n        super(registry, {\n            signature: 'ExtrinsicSignatureV4',\n            // eslint-disable-next-line sort-keys\n            method: 'Call'\n        }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n    }\n    /** @internal */\n    static decodeExtrinsic(registry, value, isSigned = false) {\n        if (value instanceof GenericExtrinsicV4) {\n            return value;\n        }\n        else if (value instanceof registry.createClassUnsafe('Call')) {\n            return { method: value };\n        }\n        else if (isU8a(value)) {\n            // here we decode manually since we need to pull through the version information\n            const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, { isSigned }]);\n            const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);\n            return {\n                method,\n                signature\n            };\n        }\n        return value || {};\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n    get method() {\n        return this.getT('method');\n    }\n    /**\n     * @description The [[ExtrinsicSignatureV4]]\n     */\n    get signature() {\n        return this.getT('signature');\n    }\n    /**\n     * @description The version for the signature\n     */\n    get version() {\n        return EXTRINSIC_VERSION;\n    }\n    /**\n     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n     */\n    addSignature(signer, signature, payload) {\n        this.signature.addSignature(signer, signature, payload);\n        return this;\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n    sign(account, options) {\n        this.signature.sign(this.method, account, options);\n        return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n    signFake(signer, options) {\n        this.signature.signFake(this.method, signer, options);\n        return this;\n    }\n}\n", "export const BIT_SIGNED = 0b10000000;\nexport const BIT_UNSIGNED = 0;\nexport const EMPTY_U8A = new Uint8Array();\nexport const DEFAULT_VERSION = 4;\nexport const IMMORTAL_ERA = new Uint8Array([0]);\nexport const UNMASK_VERSION = 0b01111111;\n", "import { Enum, Raw, Tuple, U64 } from '@polkadot/types-codec';\nimport { bnToBn, formatNumber, hexToU8a, isHex, isObject, isU8a, u8aToBn, u8aToU8a } from '@polkadot/util';\nimport { IMMORTAL_ERA } from './constants.js';\nfunction getTrailingZeros(period) {\n    const binary = period.toString(2);\n    let index = 0;\n    while (binary[binary.length - 1 - index] === '0') {\n        index++;\n    }\n    return index;\n}\n/** @internal */\nfunction decodeMortalEra(registry, value) {\n    if (isU8a(value) || isHex(value) || Array.isArray(value)) {\n        return decodeMortalU8a(registry, u8aToU8a(value));\n    }\n    else if (!value) {\n        return [new U64(registry), new U64(registry)];\n    }\n    else if (isObject(value)) {\n        return decodeMortalObject(registry, value);\n    }\n    throw new Error('Invalid data passed to Mortal era');\n}\n/** @internal */\nfunction decodeMortalObject(registry, value) {\n    const { current, period } = value;\n    let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));\n    calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);\n    const phase = current % calPeriod;\n    const quantizeFactor = Math.max(calPeriod >> 12, 1);\n    const quantizedPhase = phase / quantizeFactor * quantizeFactor;\n    return [new U64(registry, calPeriod), new U64(registry, quantizedPhase)];\n}\n/** @internal */\nfunction decodeMortalU8a(registry, value) {\n    if (value.length === 0) {\n        return [new U64(registry), new U64(registry)];\n    }\n    const first = u8aToBn(value.subarray(0, 1)).toNumber();\n    const second = u8aToBn(value.subarray(1, 2)).toNumber();\n    const encoded = first + (second << 8);\n    const period = 2 << (encoded % (1 << 4));\n    const quantizeFactor = Math.max(period >> 12, 1);\n    const phase = (encoded >> 4) * quantizeFactor;\n    if (period < 4 || phase >= period) {\n        throw new Error('Invalid data passed to Mortal era');\n    }\n    return [new U64(registry, period), new U64(registry, phase)];\n}\n/** @internal */\nfunction decodeExtrinsicEra(value = new Uint8Array()) {\n    if (isU8a(value)) {\n        return (!value.length || value[0] === 0)\n            ? new Uint8Array([0])\n            : new Uint8Array([1, value[0], value[1]]);\n    }\n    else if (!value) {\n        return new Uint8Array([0]);\n    }\n    else if (value instanceof GenericExtrinsicEra) {\n        return decodeExtrinsicEra(value.toU8a());\n    }\n    else if (isHex(value)) {\n        return decodeExtrinsicEra(hexToU8a(value));\n    }\n    else if (isObject(value)) {\n        const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);\n        const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');\n        const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera');\n        // this is to de-serialize from JSON\n        return mortal\n            ? { MortalEra: mortal[1] }\n            : immortal\n                ? { ImmortalEra: immortal[1] }\n                : { MortalEra: value };\n    }\n    throw new Error('Invalid data passed to Era');\n}\n/**\n * @name ImmortalEra\n * @description\n * The ImmortalEra for an extrinsic\n */\nexport class ImmortalEra extends Raw {\n    constructor(registry, _value) {\n        // For immortals, we always provide the known value (i.e. treated as a\n        // constant no matter how it is constructed - it is a fixed structure)\n        super(registry, IMMORTAL_ERA);\n    }\n}\n/**\n * @name MortalEra\n * @description\n * The MortalEra for an extrinsic, indicating period and phase\n */\nexport class MortalEra extends Tuple {\n    constructor(registry, value) {\n        super(registry, {\n            period: U64,\n            phase: U64\n        }, decodeMortalEra(registry, value));\n    }\n    /**\n     * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`\n     */\n    get encodedLength() {\n        return 2;\n    }\n    /**\n     * @description The period of this Mortal wraps as a [[U64]]\n     */\n    get period() {\n        return this[0];\n    }\n    /**\n     * @description The phase of this Mortal wraps as a [[U64]]\n     */\n    get phase() {\n        return this[1];\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return {\n            period: formatNumber(this.period),\n            phase: formatNumber(this.phase)\n        };\n    }\n    /**\n     * @description Returns a JSON representation of the actual value\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     * Period and phase are encoded:\n     *   - The period of validity from the block hash found in the signing material.\n     *   - The phase in the period that this transaction's lifetime begins (and, importantly,\n     *     implies which block hash is included in the signature material). If the `period` is\n     *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n     *     `period` is.\n     */\n    toU8a(_isBare) {\n        const period = this.period.toNumber();\n        const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + ((this.phase.toNumber() / Math.max(period >> 12, 1)) << 4);\n        return new Uint8Array([\n            encoded & 0xff,\n            encoded >> 8\n        ]);\n    }\n    /**\n     * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.\n     */\n    birth(current) {\n        const phase = this.phase.toNumber();\n        const period = this.period.toNumber();\n        // FIXME No toNumber() here\n        return (~~((Math.max(bnToBn(current).toNumber(), phase) - phase) / period) * period) + phase;\n    }\n    /**\n     * @description Get the block number of the first block at which the era has ended.\n     */\n    death(current) {\n        // FIXME No toNumber() here\n        return this.birth(current) + this.period.toNumber();\n    }\n}\n/**\n * @name GenericExtrinsicEra\n * @description\n * The era for an extrinsic, indicating either a mortal or immortal extrinsic\n */\nexport class GenericExtrinsicEra extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            ImmortalEra,\n            MortalEra\n        }, decodeExtrinsicEra(value));\n    }\n    /**\n     * @description Override the encoded length method\n     */\n    get encodedLength() {\n        return this.isImmortalEra\n            ? this.asImmortalEra.encodedLength\n            : this.asMortalEra.encodedLength;\n    }\n    /**\n     * @description Returns the item as a [[ImmortalEra]]\n     */\n    get asImmortalEra() {\n        if (!this.isImmortalEra) {\n            throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);\n        }\n        return this.inner;\n    }\n    /**\n     * @description Returns the item as a [[MortalEra]]\n     */\n    get asMortalEra() {\n        if (!this.isMortalEra) {\n            throw new Error(`Cannot convert '${this.type}' via asMortalEra`);\n        }\n        return this.inner;\n    }\n    /**\n     * @description `true` if Immortal\n     */\n    get isImmortalEra() {\n        return this.index === 0;\n    }\n    /**\n     * @description `true` if Mortal\n     */\n    get isMortalEra() {\n        return this.index > 0;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.isMortalEra\n            ? this.asMortalEra.toU8a(isBare)\n            : this.asImmortalEra.toU8a(isBare);\n    }\n}\n", "import { AbstractBase } from '@polkadot/types-codec';\nimport { u8aToHex } from '@polkadot/util';\nimport { DEFAULT_VERSION } from './constants.js';\nconst VERSIONS = [\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadV4'\n];\n/** @internal */\nfunction decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n    if (value instanceof GenericExtrinsicPayload) {\n        return value.unwrap();\n    }\n    return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, { version }]);\n}\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\nexport class GenericExtrinsicPayload extends AbstractBase {\n    constructor(registry, value, { version } = {}) {\n        super(registry, decodeExtrinsicPayload(registry, value, version));\n    }\n    /**\n     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get blockHash() {\n        return this.inner.blockHash;\n    }\n    /**\n     * @description The [[ExtrinsicEra]]\n     */\n    get era() {\n        return this.inner.era;\n    }\n    /**\n     * @description The genesis block [[BlockHash]] the signature applies to\n     */\n    get genesisHash() {\n        // NOTE only v3+\n        return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);\n    }\n    /**\n     * @description The [[Bytes]] contained in the payload\n     */\n    get method() {\n        return this.inner.method;\n    }\n    /**\n     * @description The [[Index]]\n     */\n    get nonce() {\n        return this.inner.nonce;\n    }\n    /**\n     * @description The specVersion as a [[u32]] for this payload\n     */\n    get specVersion() {\n        // NOTE only v3+\n        return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);\n    }\n    /**\n     * @description The [[Balance]]\n     */\n    get tip() {\n        // NOTE from v2+\n        return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);\n    }\n    /**\n     * @description The transaction version as a [[u32]] for this payload\n     */\n    get transactionVersion() {\n        // NOTE only v4+\n        return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.inner.eq(other);\n    }\n    /**\n     * @description Sign the payload with the keypair\n     */\n    sign(signerPair) {\n        const signature = this.inner.sign(signerPair);\n        // This is extensible, so we could quite readily extend to send back extra\n        // information, such as for instance the payload, i.e. `payload: this.toHex()`\n        // For the case here we sign via the extrinsic, we ignore the return, so generally\n        // this is applicable for external signing\n        return {\n            signature: u8aToHex(signature)\n        };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return this.inner.toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'ExtrinsicPayload';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns a serialized u8a form\n     */\n    toU8a(isBare) {\n        // call our parent, with only the method stripped\n        return super.toU8a(isBare ? { method: true } : false);\n    }\n}\n", "import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericExtrinsicPayloadUnknown\n * @description\n * A default handler for payloads where the version is not known (default throw)\n */\nexport class GenericExtrinsicPayloadUnknown extends Struct {\n    constructor(registry, _value, { version = 0 } = {}) {\n        super(registry, {});\n        throw new Error(`Unsupported extrinsic payload version ${version}`);\n    }\n}\n", "import { Struct } from '@polkadot/types-codec';\nimport { UNMASK_VERSION } from './constants.js';\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\nexport class GenericExtrinsicUnknown extends Struct {\n    constructor(registry, _value, { isSigned = false, version = 0 } = {}) {\n        super(registry, {});\n        throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & UNMASK_VERSION}`);\n    }\n}\n", "import { Option, Struct } from '@polkadot/types-codec';\nimport { objectProperty, objectSpread, u8aToHex } from '@polkadot/util';\nconst knownTypes = {\n    address: 'Address',\n    blockHash: 'Hash',\n    blockNumber: 'BlockNumber',\n    era: 'ExtrinsicEra',\n    genesisHash: 'Hash',\n    method: 'Call',\n    nonce: 'Compact<Index>',\n    runtimeVersion: 'RuntimeVersion',\n    signedExtensions: 'Vec<Text>',\n    tip: 'Compact<Balance>',\n    version: 'u8'\n};\n/**\n * @name GenericSignerPayload\n * @description\n * A generic signer payload that can be used for serialization between API and signer\n */\nexport class GenericSignerPayload extends Struct {\n    constructor(registry, value) {\n        const extensionTypes = objectSpread({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());\n        super(registry, objectSpread({}, extensionTypes, knownTypes), value);\n        this.__internal__extraTypes = {};\n        const getter = (key) => this.get(key);\n        // add all extras that are not in the base types\n        for (const [key, type] of Object.entries(extensionTypes)) {\n            if (!knownTypes[key]) {\n                this.__internal__extraTypes[key] = type;\n            }\n            objectProperty(this, key, getter);\n        }\n    }\n    get address() {\n        return this.getT('address');\n    }\n    get blockHash() {\n        return this.getT('blockHash');\n    }\n    get blockNumber() {\n        return this.getT('blockNumber');\n    }\n    get era() {\n        return this.getT('era');\n    }\n    get genesisHash() {\n        return this.getT('genesisHash');\n    }\n    get method() {\n        return this.getT('method');\n    }\n    get nonce() {\n        return this.getT('nonce');\n    }\n    get runtimeVersion() {\n        return this.getT('runtimeVersion');\n    }\n    get signedExtensions() {\n        return this.getT('signedExtensions');\n    }\n    get tip() {\n        return this.getT('tip');\n    }\n    get version() {\n        return this.getT('version');\n    }\n    /**\n     * @description Creates an representation of the structure as an ISignerPayload JSON\n     */\n    toPayload() {\n        const result = {};\n        const keys = Object.keys(this.__internal__extraTypes);\n        // add any explicit overrides we may have\n        for (let i = 0, count = keys.length; i < count; i++) {\n            const key = keys[i];\n            const value = this.get(key);\n            const isOption = value instanceof Option;\n            // Don't include Option.isNone\n            if (!isOption || value.isSome) {\n                result[key] = value.toHex();\n            }\n        }\n        return objectSpread(result, {\n            // the known defaults as managed explicitly and has different\n            // formatting in cases, e.g. we mostly expose a hex format here\n            address: this.address.toString(),\n            blockHash: this.blockHash.toHex(),\n            blockNumber: this.blockNumber.toHex(),\n            era: this.era.toHex(),\n            genesisHash: this.genesisHash.toHex(),\n            method: this.method.toHex(),\n            nonce: this.nonce.toHex(),\n            signedExtensions: this.signedExtensions.map((e) => e.toString()),\n            specVersion: this.runtimeVersion.specVersion.toHex(),\n            tip: this.tip.toHex(),\n            transactionVersion: this.runtimeVersion.transactionVersion.toHex(),\n            version: this.version.toNumber()\n        });\n    }\n    /**\n     * @description Creates a representation of the payload in raw Exrinsic form\n     */\n    toRaw() {\n        const payload = this.toPayload();\n        const data = u8aToHex(this.registry\n            .createTypeUnsafe('ExtrinsicPayload', [payload, { version: payload.version }])\n            // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)\n            .toU8a({ method: true }));\n        return {\n            address: payload.address,\n            data,\n            type: 'payload'\n        };\n    }\n}\n", "export { GenericExtrinsicV4 } from './Extrinsic.js';\nexport { GenericExtrinsicPayloadV4 } from './ExtrinsicPayload.js';\nexport { GenericExtrinsicSignatureV4 } from './ExtrinsicSignature.js';\n", "import { Enum, Struct } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\nimport { sign } from '../util.js';\n/**\n * @name GenericExtrinsicPayloadV4\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is\n * variable length based on the contents included\n */\nexport class GenericExtrinsicPayloadV4 extends Struct {\n    constructor(registry, value) {\n        super(registry, objectSpread({ method: 'Bytes' }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value);\n        // Do detection for the type of extrinsic, in the case of MultiSignature\n        // this is an enum, in the case of AnySignature, this is a Hash only\n        // (which may be 64 or 65 bytes)\n        this.__internal__signOptions = {\n            withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof Enum\n        };\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return super.inspect({ method: true });\n    }\n    /**\n     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get blockHash() {\n        return this.getT('blockHash');\n    }\n    /**\n     * @description The [[ExtrinsicEra]]\n     */\n    get era() {\n        return this.getT('era');\n    }\n    /**\n     * @description The genesis [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get genesisHash() {\n        return this.getT('genesisHash');\n    }\n    /**\n     * @description The [[Bytes]] contained in the payload\n     */\n    get method() {\n        return this.getT('method');\n    }\n    /**\n     * @description The [[Index]]\n     */\n    get nonce() {\n        return this.getT('nonce');\n    }\n    /**\n     * @description The specVersion for this signature\n     */\n    get specVersion() {\n        return this.getT('specVersion');\n    }\n    /**\n     * @description The tip [[Balance]]\n     */\n    get tip() {\n        return this.getT('tip');\n    }\n    /**\n     * @description The transactionVersion for this signature\n     */\n    get transactionVersion() {\n        return this.getT('transactionVersion');\n    }\n    /**\n     * @description The (optional) asset id for this signature for chains that support transaction fees in assets\n     */\n    get assetId() {\n        return this.getT('assetId');\n    }\n    /**\n     * @description Sign the payload with the keypair\n     */\n    sign(signerPair) {\n        // NOTE The `toU8a({ method: true })` argument is absolutely critical, we\n        // don't want the method (Bytes) to have the length prefix included. This\n        // means that the data-as-signed is un-decodable, but is also doesn't need\n        // the extra information, only the pure data (and is not decoded) ...\n        // The same applies to V1..V3, if we have a V5, carry this comment\n        return sign(this.registry, signerPair, this.toU8a({ method: true }), this.__internal__signOptions);\n    }\n}\n", "export function sign(registry, signerPair, u8a, options) {\n    const encoded = u8a.length > 256\n        ? registry.hash(u8a)\n        : u8a;\n    return signerPair.sign(encoded, options);\n}\n", "import { Struct } from '@polkadot/types-codec';\nimport { isU8a, isUndefined, objectProperties, objectSpread, stringify, u8aToHex } from '@polkadot/util';\nimport { EMPTY_U8A, IMMORTAL_ERA } from '../constants.js';\nimport { GenericExtrinsicPayloadV4 } from './ExtrinsicPayload.js';\nconst FAKE_SIGNATURE = new Uint8Array(256).fill(1);\nfunction toAddress(registry, address) {\n    return registry.createTypeUnsafe('Address', [isU8a(address) ? u8aToHex(address) : address]);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\nexport class GenericExtrinsicSignatureV4 extends Struct {\n    constructor(registry, value, { isSigned } = {}) {\n        const signTypes = registry.getSignedExtensionTypes();\n        super(registry, objectSpread(\n        // eslint-disable-next-line sort-keys\n        { signer: 'Address', signature: 'ExtrinsicSignature' }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n        this.__internal__signKeys = Object.keys(signTypes);\n        objectProperties(this, this.__internal__signKeys, (k) => this.get(k));\n    }\n    /** @internal */\n    static decodeExtrinsicSignature(value, isSigned = false) {\n        if (!value) {\n            return EMPTY_U8A;\n        }\n        else if (value instanceof GenericExtrinsicSignatureV4) {\n            return value;\n        }\n        return isSigned\n            ? value\n            : EMPTY_U8A;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.isSigned\n            ? super.encodedLength\n            : 0;\n    }\n    /**\n     * @description `true` if the signature is valid\n     */\n    get isSigned() {\n        return !this.signature.isEmpty;\n    }\n    /**\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n     */\n    get era() {\n        return this.getT('era');\n    }\n    /**\n     * @description The [[Index]] for the signature\n     */\n    get nonce() {\n        return this.getT('nonce');\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n    get signature() {\n        // the second case here is when we don't have an enum signature, treat as raw\n        return (this.multiSignature.value || this.multiSignature);\n    }\n    /**\n     * @description The raw [[ExtrinsicSignature]]\n     */\n    get multiSignature() {\n        return this.getT('signature');\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n    get signer() {\n        return this.getT('signer');\n    }\n    /**\n     * @description The [[Balance]] tip\n     */\n    get tip() {\n        return this.getT('tip');\n    }\n    _injectSignature(signer, signature, payload) {\n        // use the fields exposed to guide the getters\n        for (let i = 0, count = this.__internal__signKeys.length; i < count; i++) {\n            const k = this.__internal__signKeys[i];\n            const v = payload.get(k);\n            if (!isUndefined(v)) {\n                this.set(k, v);\n            }\n        }\n        // additional fields (exposed in struct itself)\n        this.set('signer', signer);\n        this.set('signature', signature);\n        return this;\n    }\n    /**\n     * @description Adds a raw signature\n     */\n    addSignature(signer, signature, payload) {\n        return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new GenericExtrinsicPayloadV4(this.registry, payload));\n    }\n    /**\n     * @description Creates a payload from the supplied options\n     */\n    createPayload(method, options) {\n        const { era, runtimeVersion: { specVersion, transactionVersion } } = options;\n        return new GenericExtrinsicPayloadV4(this.registry, objectSpread({}, options, {\n            era: era || IMMORTAL_ERA,\n            method: method.toHex(),\n            specVersion,\n            transactionVersion\n        }));\n    }\n    /**\n     * @description Generate a payload and applies the signature from a keypair\n     */\n    sign(method, account, options) {\n        if (!account || !account.addressRaw) {\n            throw new Error(`Expected a valid keypair for signing, found ${stringify(account)}`);\n        }\n        const payload = this.createPayload(method, options);\n        return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);\n    }\n    /**\n     * @description Generate a payload and applies a fake signature\n     */\n    signFake(method, address, options) {\n        if (!address) {\n            throw new Error(`Expected a valid address for signing, found ${stringify(address)}`);\n        }\n        const payload = this.createPayload(method, options);\n        return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.isSigned\n            ? super.toU8a(isBare)\n            : EMPTY_U8A;\n    }\n}\n", "export { GenericAccountId, GenericAccountId as GenericAccountId32, GenericAccountId33 } from './AccountId.js';\nexport { GenericAccountIndex } from './AccountIndex.js';\nexport { GenericBlock } from './Block.js';\nexport { GenericCall } from './Call.js';\nexport { GenericChainProperties } from './ChainProperties.js';\nexport { GenericConsensusEngineId } from './ConsensusEngineId.js';\nexport { GenericEvent, GenericEventData } from './Event.js';\nexport { GenericLookupSource } from './LookupSource.js';\nexport { GenericMultiAddress as GenericAddress, GenericMultiAddress } from './MultiAddress.js';\nexport { GenericVote } from './Vote.js';\nexport * from '../ethereum/index.js';\n", "import { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n/** @internal */\nfunction decodeAccountId(value) {\n    if (isU8a(value) || Array.isArray(value)) {\n        return u8aToU8a(value);\n    }\n    else if (!value) {\n        return new Uint8Array();\n    }\n    else if (isHex(value)) {\n        return hexToU8a(value);\n    }\n    else if (isString(value)) {\n        return decodeAddress(value.toString());\n    }\n    throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);\n}\nclass BaseAccountId extends U8aFixed {\n    constructor(registry, allowedBits = 256 | 264, value) {\n        const decoded = decodeAccountId(value);\n        const decodedBits = decoded.length * 8;\n        // Part of stream containing >= 32 bytes or a all empty (defaults)\n        if (decodedBits < allowedBits && decoded.some((b) => b)) {\n            throw new Error(`Invalid AccountId provided, expected ${allowedBits >> 3} bytes, found ${decoded.length}`);\n        }\n        super(registry, decoded, allowedBits);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return super.eq(decodeAccountId(other));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return encodeAddress(this, this.registry.chainSS58);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountId';\n    }\n}\n/**\n * @name GenericAccountId\n * @description\n * A wrapper around an AccountId/PublicKey representation. Since we are dealing with\n * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\nexport class GenericAccountId extends BaseAccountId {\n    constructor(registry, value) {\n        super(registry, 256, value);\n    }\n}\nexport class GenericAccountId33 extends BaseAccountId {\n    constructor(registry, value) {\n        super(registry, 264, value);\n    }\n}\n", "import { u32 } from '@polkadot/types-codec';\nimport { BN, bnToBn, isBigInt, isBn, isHex, isNumber, isU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nconst PREFIX_1BYTE = 0xef;\nconst PREFIX_2BYTE = 0xfc;\nconst PREFIX_4BYTE = 0xfd;\nconst PREFIX_8BYTE = 0xfe;\nconst MAX_1BYTE = new BN(PREFIX_1BYTE);\nconst MAX_2BYTE = new BN(1).shln(16);\nconst MAX_4BYTE = new BN(1).shln(32);\n/** @internal */\nfunction decodeAccountIndex(value) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    if (value instanceof GenericAccountIndex) {\n        // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an\n        // AccountIndex), which has the initial `toString()` implementation.\n        return value.toBn();\n    }\n    else if (isBn(value) || isNumber(value) || isHex(value) || isU8a(value) || isBigInt(value)) {\n        return value;\n    }\n    return decodeAccountIndex(decodeAddress(value));\n}\n/**\n * @name GenericAccountIndex\n * @description\n * A wrapper around an AccountIndex, which is a shortened, variable-length encoding\n * for an Account. We extends from [[U32]] to provide the number-like properties.\n */\nexport class GenericAccountIndex extends u32 {\n    constructor(registry, value = new BN(0)) {\n        super(registry, decodeAccountIndex(value));\n    }\n    static calcLength(_value) {\n        const value = bnToBn(_value);\n        if (value.lte(MAX_1BYTE)) {\n            return 1;\n        }\n        else if (value.lt(MAX_2BYTE)) {\n            return 2;\n        }\n        else if (value.lt(MAX_4BYTE)) {\n            return 4;\n        }\n        return 8;\n    }\n    static readLength(input) {\n        const first = input[0];\n        if (first === PREFIX_2BYTE) {\n            return [1, 2];\n        }\n        else if (first === PREFIX_4BYTE) {\n            return [1, 4];\n        }\n        else if (first === PREFIX_8BYTE) {\n            return [1, 8];\n        }\n        return [0, 1];\n    }\n    static writeLength(input) {\n        switch (input.length) {\n            case 2: return new Uint8Array([PREFIX_2BYTE]);\n            case 4: return new Uint8Array([PREFIX_4BYTE]);\n            case 8: return new Uint8Array([PREFIX_8BYTE]);\n            default: return new Uint8Array([]);\n        }\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        // shortcut for BN or Number, don't create an object\n        if (isBn(other) || isNumber(other)) {\n            return super.eq(other);\n        }\n        // convert and compare\n        return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        const length = GenericAccountIndex.calcLength(this);\n        return encodeAddress(this.toU8a().subarray(0, length), this.registry.chainSS58);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountIndex';\n    }\n}\n", "import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n    constructor(registry, value) {\n        super(registry, {\n            header: 'Header',\n            // eslint-disable-next-line sort-keys\n            extrinsics: 'Vec<Extrinsic>'\n        }, value);\n    }\n    /**\n     * @description Encodes a content [[Hash]] for the block\n     */\n    get contentHash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description The [[Extrinsic]] contained in the block\n     */\n    get extrinsics() {\n        return this.getT('extrinsics');\n    }\n    /**\n     * @description Block/header [[Hash]]\n     */\n    get hash() {\n        return this.header.hash;\n    }\n    /**\n     * @description The [[Header]] of the block\n     */\n    get header() {\n        return this.getT('header');\n    }\n}\n", "import { Struct, U8aFixed } from '@polkadot/types-codec';\nimport { isHex, isObject, isU8a, objectSpread, u8aToU8a } from '@polkadot/util';\n/**\n * Get a mapping of `argument name -> argument type` for the function, from\n * its metadata.\n *\n * @param meta - The function metadata used to get the definition.\n * @internal\n */\nfunction getArgsDef(registry, meta) {\n    return meta.fields.reduce((result, { name, type }, index) => {\n        result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);\n        return result;\n    }, {});\n}\n/** @internal */\nfunction decodeCallViaObject(registry, value, _meta) {\n    // we only pass args/methodsIndex out\n    const { args, callIndex } = value;\n    // Get the correct lookupIndex\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const lookupIndex = callIndex instanceof GenericCallIndex\n        ? callIndex.toU8a()\n        : callIndex;\n    // Find metadata with callIndex\n    const meta = _meta || registry.findMetaCall(lookupIndex).meta;\n    return {\n        args,\n        argsDef: getArgsDef(registry, meta),\n        callIndex,\n        meta\n    };\n}\n/** @internal */\nfunction decodeCallViaU8a(registry, value, _meta) {\n    // We need 2 bytes for the callIndex\n    const callIndex = registry.firstCallIndex.slice();\n    callIndex.set(value.subarray(0, 2), 0);\n    // Find metadata with callIndex\n    const meta = _meta || registry.findMetaCall(callIndex).meta;\n    return {\n        args: value.subarray(2),\n        argsDef: getArgsDef(registry, meta),\n        callIndex,\n        meta\n    };\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param value - Value to decode, one of:\n * - hex\n * - Uint8Array\n * - {@see DecodeMethodInput}\n * @param _meta - Metadata to use, so that `injectMethods` lookup is not\n * necessary.\n * @internal\n */\nfunction decodeCall(registry, value = new Uint8Array(), _meta) {\n    if (isU8a(value) || isHex(value)) {\n        return decodeCallViaU8a(registry, u8aToU8a(value), _meta);\n    }\n    else if (isObject(value) && value.callIndex && value.args) {\n        return decodeCallViaObject(registry, value, _meta);\n    }\n    throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);\n}\n/**\n * @name GenericCallIndex\n * @description\n * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method\n */\nexport class GenericCallIndex extends U8aFixed {\n    constructor(registry, value) {\n        super(registry, value, 16);\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toHex();\n    }\n}\n/**\n * @name GenericCall\n * @description\n * Extrinsic function descriptor\n */\nexport class GenericCall extends Struct {\n    constructor(registry, value, meta) {\n        const decoded = decodeCall(registry, value, meta);\n        try {\n            super(registry, {\n                callIndex: GenericCallIndex,\n                // eslint-disable-next-line sort-keys\n                args: Struct.with(decoded.argsDef)\n            }, decoded);\n        }\n        catch (error) {\n            let method = 'unknown.unknown';\n            try {\n                const c = registry.findMetaCall(decoded.callIndex);\n                method = `${c.section}.${c.method}`;\n            }\n            catch {\n                // ignore\n            }\n            throw new Error(`Call: failed decoding ${method}:: ${error.message}`);\n        }\n        this._meta = decoded.meta;\n    }\n    /**\n     * @description The arguments for the function call\n     */\n    get args() {\n        return [...this.getT('args').values()];\n    }\n    /**\n     * @description The argument definitions\n     */\n    get argsDef() {\n        return getArgsDef(this.registry, this.meta);\n    }\n    /**\n     * @description The argument entries\n     */\n    get argsEntries() {\n        return [...this.getT('args').entries()];\n    }\n    /**\n     * @description The encoded `[sectionIndex, methodIndex]` identifier\n     */\n    get callIndex() {\n        return this.getT('callIndex').toU8a();\n    }\n    /**\n     * @description The encoded data\n     */\n    get data() {\n        return this.getT('args').toU8a();\n    }\n    /**\n     * @description The [[FunctionMetadata]]\n     */\n    get meta() {\n        return this._meta;\n    }\n    /**\n     * @description Returns the name of the method\n     */\n    get method() {\n        return this.registry.findMetaCall(this.callIndex).method;\n    }\n    /**\n     * @description Returns the module containing the method\n     */\n    get section() {\n        return this.registry.findMetaCall(this.callIndex).section;\n    }\n    /**\n     * @description Checks if the source matches this in type\n     */\n    is(other) {\n        return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded) {\n        let call;\n        try {\n            call = this.registry.findMetaCall(this.callIndex);\n        }\n        catch {\n            // swallow\n        }\n        return objectSpread({\n            args: this.argsEntries.reduce((args, [n, a]) => objectSpread(args, { [n]: a.toHuman(isExpanded) }), {}),\n            method: call?.method,\n            section: call?.section\n        }, isExpanded && call\n            ? { docs: call.meta.docs.map((d) => d.toString()) }\n            : null);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Call';\n    }\n}\n", "import { Json } from '@polkadot/types-codec';\nimport { isFunction, isNull, isUndefined } from '@polkadot/util';\nfunction createValue(registry, type, value, asArray = true) {\n    // We detect codec here as well - when found, generally this is constructed from itself\n    if (value && isFunction(value.unwrapOrDefault)) {\n        return value;\n    }\n    return registry.createTypeUnsafe(type, [\n        asArray\n            ? isNull(value) || isUndefined(value)\n                ? null\n                : Array.isArray(value)\n                    ? value\n                    : [value]\n            : value\n    ]);\n}\nfunction decodeValue(registry, key, value) {\n    return key === 'ss58Format'\n        ? createValue(registry, 'Option<u32>', value, false)\n        : key === 'tokenDecimals'\n            ? createValue(registry, 'Option<Vec<u32>>', value)\n            : key === 'tokenSymbol'\n                ? createValue(registry, 'Option<Vec<Text>>', value)\n                : value;\n}\nfunction decode(registry, value) {\n    return (\n    // allow decoding from a map as well (ourselves)\n    value && isFunction(value.entries)\n        ? [...value.entries()]\n        : Object.entries(value || {})).reduce((all, [key, value]) => {\n        all[key] = decodeValue(registry, key, value);\n        return all;\n    }, {\n        ss58Format: registry.createTypeUnsafe('Option<u32>', []),\n        tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),\n        tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])\n    });\n}\nexport class GenericChainProperties extends Json {\n    constructor(registry, value) {\n        super(registry, decode(registry, value));\n    }\n    /**\n     * @description The chain ss58Format\n     */\n    get ss58Format() {\n        return this.getT('ss58Format');\n    }\n    /**\n     * @description The decimals for each of the tokens\n     */\n    get tokenDecimals() {\n        return this.getT('tokenDecimals');\n    }\n    /**\n     * @description The symbols for the tokens\n     */\n    get tokenSymbol() {\n        return this.getT('tokenSymbol');\n    }\n}\n", "import { U8aFixed } from '@polkadot/types-codec';\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nexport const CID_AURA = /*#__PURE__*/ stringToU8a('aura');\nexport const CID_BABE = /*#__PURE__*/ stringToU8a('BABE');\nexport const CID_GRPA = /*#__PURE__*/ stringToU8a('FRNK');\nexport const CID_POW = /*#__PURE__*/ stringToU8a('pow_');\nexport const CID_NMBS = /*#__PURE__*/ stringToU8a('nmbs');\nfunction getAuraAuthor(registry, bytes, sessionValidators) {\n    return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)])\n        .slotNumber\n        .mod(new BN(sessionValidators.length))\n        .toNumber()];\n}\nfunction getBabeAuthor(registry, bytes, sessionValidators) {\n    const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);\n    return sessionValidators[digest.value.toNumber()];\n}\nfunction getBytesAsAuthor(registry, bytes) {\n    return registry.createTypeUnsafe('AccountId', [bytes]);\n}\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\nexport class GenericConsensusEngineId extends U8aFixed {\n    constructor(registry, value) {\n        super(registry, isNumber(value)\n            ? bnToU8a(value, { isLe: false })\n            : value, 32);\n    }\n    /**\n     * @description `true` if the engine matches aura\n     */\n    get isAura() {\n        return this.eq(CID_AURA);\n    }\n    /**\n     * @description `true` is the engine matches babe\n     */\n    get isBabe() {\n        return this.eq(CID_BABE);\n    }\n    /**\n     * @description `true` is the engine matches grandpa\n     */\n    get isGrandpa() {\n        return this.eq(CID_GRPA);\n    }\n    /**\n     * @description `true` is the engine matches pow\n     */\n    get isPow() {\n        return this.eq(CID_POW);\n    }\n    /**\n     * @description `true` is the engine matches nimbus\n     */\n    get isNimbus() {\n        return this.eq(CID_NMBS);\n    }\n    /**\n     * @description From the input bytes, decode into an author\n     */\n    extractAuthor(bytes, sessionValidators) {\n        if (sessionValidators?.length) {\n            if (this.isAura) {\n                return getAuraAuthor(this.registry, bytes, sessionValidators);\n            }\n            else if (this.isBabe) {\n                return getBabeAuthor(this.registry, bytes, sessionValidators);\n            }\n        }\n        // For pow & Nimbus, the bytes are the actual author\n        if (this.isPow || this.isNimbus) {\n            return getBytesAsAuthor(this.registry, bytes);\n        }\n        return undefined;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toString();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'ConsensusEngineId';\n    }\n    /**\n     * @description Override the default toString to return a 4-byte string\n     */\n    toString() {\n        return this.isAscii\n            ? u8aToString(this)\n            : u8aToHex(this);\n    }\n}\n", "import { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from './AccountId.js';\nimport { GenericAccountIndex } from './AccountIndex.js';\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\nfunction decodeString(registry, value) {\n    const decoded = decodeAddress(value);\n    return decoded.length === 32\n        ? registry.createTypeUnsafe('AccountId', [decoded])\n        : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded)]);\n}\n/** @internal */\nfunction decodeU8a(registry, value) {\n    // This allows us to instantiate an address with a raw publicKey. Do this first before\n    // we checking the first byte, otherwise we may split an already-existent valid address\n    if (value.length === 32) {\n        return registry.createTypeUnsafe('AccountId', [value]);\n    }\n    else if (value[0] === 0xff) {\n        return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);\n    }\n    const [offset, length] = GenericAccountIndex.readLength(value);\n    return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n/** @internal */\nfunction decodeAddressOrIndex(registry, value) {\n    return value instanceof GenericLookupSource\n        ? value.inner\n        : value instanceof GenericAccountId || value instanceof GenericAccountIndex\n            ? value\n            : isBn(value) || isNumber(value) || isBigInt(value)\n                ? registry.createTypeUnsafe('AccountIndex', [value])\n                : Array.isArray(value) || isHex(value) || isU8a(value)\n                    ? decodeU8a(registry, u8aToU8a(value))\n                    : decodeString(registry, value);\n}\n/**\n * @name LookupSource\n * @description\n * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\nexport class GenericLookupSource extends AbstractBase {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAddressOrIndex(registry, value));\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        const rawLength = this._rawLength;\n        return rawLength + (\n        // for 1 byte AccountIndexes, we are not adding a specific prefix\n        rawLength > 1\n            ? 1\n            : 0);\n    }\n    /**\n     * @description The length of the raw value, either AccountIndex or AccountId\n     */\n    get _rawLength() {\n        return this.inner instanceof GenericAccountIndex\n            ? GenericAccountIndex.calcLength(this.inner)\n            : this.inner.encodedLength;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const value = this.inner.toU8a().subarray(0, this._rawLength);\n        return {\n            outer: [\n                new Uint8Array(this.inner instanceof GenericAccountIndex\n                    ? GenericAccountIndex.writeLength(value)\n                    : ACCOUNT_ID_PREFIX),\n                value\n            ]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Address';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n        return isBare\n            ? encoded\n            : u8aConcat(this.inner instanceof GenericAccountIndex\n                ? GenericAccountIndex.writeLength(encoded)\n                : ACCOUNT_ID_PREFIX, encoded);\n    }\n}\n", "import { Enum } from '@polkadot/types-codec';\nimport { isBn, isNumber, isString, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from './AccountId.js';\nimport { GenericAccountIndex } from './AccountIndex.js';\nfunction decodeU8a(registry, u8a) {\n    if ([0, 32].includes(u8a.length)) {\n        return { Id: u8a };\n    }\n    else if (u8a.length === 20) {\n        return { Address20: u8a };\n    }\n    else if (u8a.length <= 8) {\n        return { Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber() };\n    }\n    return u8a;\n}\nfunction decodeMultiAny(registry, value) {\n    if (value instanceof GenericAccountId) {\n        return { Id: value };\n    }\n    else if (isU8a(value)) {\n        // NOTE This is after the AccountId check (which is U8a)\n        return decodeU8a(registry, value);\n    }\n    else if (value instanceof GenericMultiAddress) {\n        return value;\n    }\n    else if (value instanceof GenericAccountIndex || isBn(value) || isNumber(value)) {\n        return { Index: isNumber(value) ? value : value.toNumber() };\n    }\n    else if (isString(value)) {\n        return decodeU8a(registry, decodeAddress(value.toString()));\n    }\n    return value;\n}\nexport class GenericMultiAddress extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            Id: 'AccountId',\n            Index: 'Compact<AccountIndex>',\n            Raw: 'Bytes',\n            // eslint-disable-next-line sort-keys\n            Address32: 'H256',\n            // eslint-disable-next-line sort-keys\n            Address20: 'H160'\n        }, decodeMultiAny(registry, value));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const { inner, outer = [] } = this.inner.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([this.index]), ...outer]\n        };\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.value.toString();\n    }\n}\n", "import { Bool, U8aFixed } from '@polkadot/types-codec';\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n/** @internal */\nfunction decodeVoteBool(value) {\n    return value\n        ? new Uint8Array([AYE_BITS | DEF_CONV])\n        : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\nfunction decodeVoteU8a(value) {\n    return value.length\n        ? value.subarray(0, 1)\n        : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\nfunction decodeVoteType(registry, value) {\n    return new Uint8Array([\n        (new Bool(registry, value.aye).isTrue\n            ? AYE_BITS\n            : NAY_BITS) |\n            registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index\n    ]);\n}\n/** @internal */\nfunction decodeVote(registry, value) {\n    if (isU8a(value)) {\n        return decodeVoteU8a(value);\n    }\n    else if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n        return decodeVoteBool(new Bool(registry, value).isTrue);\n    }\n    else if (isNumber(value)) {\n        return decodeVoteBool(value < 0);\n    }\n    return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\nexport class GenericVote extends U8aFixed {\n    constructor(registry, value) {\n        // decoded is just 1 byte\n        // Aye: Most Significant Bit\n        // Conviction: 0000 - 0101\n        const decoded = decodeVote(registry, value);\n        super(registry, decoded, 8);\n        this.__internal__aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n        this.__internal__conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);\n    }\n    /**\n     * @description returns a V2 conviction\n     */\n    get conviction() {\n        return this.__internal__conviction;\n    }\n    /**\n     * @description true if the wrapped value is a positive vote\n     */\n    get isAye() {\n        return this.__internal__aye;\n    }\n    /**\n     * @description true if the wrapped value is a negative vote\n     */\n    get isNay() {\n        return !this.isAye;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded) {\n        return {\n            conviction: this.conviction.toHuman(isExpanded),\n            vote: this.isAye ? 'Aye' : 'Nay'\n        };\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return {\n            aye: this.isAye,\n            conviction: this.conviction.toPrimitive()\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Vote';\n    }\n}\n", "export { GenericEthereumAccountId } from './AccountId.js';\nexport { GenericEthereumLookupSource } from './LookupSource.js';\n", "import { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { ethereumEncode, isEthereumAddress } from '@polkadot/util-crypto';\n/** @internal */\nfunction decodeAccountId(value) {\n    if (isU8a(value) || Array.isArray(value)) {\n        return u8aToU8a(value);\n    }\n    else if (isHex(value) || isEthereumAddress(value.toString())) {\n        return hexToU8a(value.toString());\n    }\n    else if (isString(value)) {\n        return u8aToU8a(value);\n    }\n    return value;\n}\n/**\n * @name GenericEthereumAccountId\n * @description\n * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with\n * underlying addresses (20 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\nexport class GenericEthereumAccountId extends U8aFixed {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAccountId(value), 160);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return !!other && super.eq(decodeAccountId(other));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return ethereumEncode(this);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountId';\n    }\n}\n", "import { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountIndex } from '../generic/AccountIndex.js';\nimport { GenericEthereumAccountId } from './AccountId.js';\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\nfunction decodeString(registry, value) {\n    const decoded = decodeAddress(value);\n    return decoded.length === 20\n        ? registry.createTypeUnsafe('EthereumAccountId', [decoded])\n        : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded)]);\n}\n/** @internal */\nfunction decodeU8a(registry, value) {\n    // This allows us to instantiate an address with a raw publicKey. Do this first before\n    // we checking the first byte, otherwise we may split an already-existent valid address\n    if (value.length === 20) {\n        return registry.createTypeUnsafe('EthereumAccountId', [value]);\n    }\n    else if (value[0] === 0xff) {\n        return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);\n    }\n    const [offset, length] = GenericAccountIndex.readLength(value);\n    return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\nfunction decodeAddressOrIndex(registry, value) {\n    return value instanceof GenericEthereumLookupSource\n        ? value.inner\n        : value instanceof GenericEthereumAccountId || value instanceof GenericAccountIndex\n            ? value\n            : isU8a(value) || Array.isArray(value) || isHex(value)\n                ? decodeU8a(registry, u8aToU8a(value))\n                : isBn(value) || isNumber(value) || isBigInt(value)\n                    ? registry.createTypeUnsafe('AccountIndex', [value])\n                    : decodeString(registry, value);\n}\n/**\n * @name GenericEthereumLookupSource\n * @description\n * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\nexport class GenericEthereumLookupSource extends AbstractBase {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAddressOrIndex(registry, value));\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        const rawLength = this._rawLength;\n        return rawLength + (\n        // for 1 byte AccountIndexes, we are not adding a specific prefix\n        rawLength > 1\n            ? 1\n            : 0);\n    }\n    /**\n     * @description The length of the raw value, either AccountIndex or AccountId\n     */\n    get _rawLength() {\n        return this.inner instanceof GenericAccountIndex\n            ? GenericAccountIndex.calcLength(this.inner)\n            : this.inner.encodedLength;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Address';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n        return isBare\n            ? encoded\n            : u8aConcat(this.inner instanceof GenericAccountIndex\n                ? GenericAccountIndex.writeLength(encoded)\n                : ACCOUNT_ID_PREFIX, encoded);\n    }\n}\n", "/**\n * @summary Type definitions that are used in the system\n */\nexport { BitVec, Bool, bool, Bytes, F32, f32, F64, f64, I8, i8, I16, i16, I32, i32, I64, i64, I128, i128, I256, i256, ISize, isize, Null, OptionBool, Text, Type, U8, u8, U16, u16, U32, u32, U64, u64, U128, u128, U256, u256, USize, usize } from '@polkadot/types-codec';\nexport { Data } from './Data.js';\nexport { StorageKey } from './StorageKey.js';\n", "import { Enum } from '@polkadot/types-codec';\nimport { isString, isU8a, u8aToU8a } from '@polkadot/util';\n/** @internal */\nfunction decodeDataU8a(registry, value) {\n    const indicator = value[0];\n    if (!indicator) {\n        return [undefined, undefined];\n    }\n    else if (indicator >= 1 && indicator <= 33) {\n        const length = indicator - 1;\n        const data = value.subarray(1, length + 1);\n        // in this case, we are passing a Raw back (since we have no length)\n        return [registry.createTypeUnsafe('Raw', [data]), 1];\n    }\n    else if (indicator >= 34 && indicator <= 37) {\n        return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2\n    }\n    throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);\n}\n/** @internal */\nfunction decodeData(registry, value) {\n    if (isU8a(value) || isString(value)) {\n        return decodeDataU8a(registry, u8aToU8a(value));\n    }\n    else if (!value) {\n        return [undefined, undefined];\n    }\n    // assume we have an Enum or an  object input, handle this via the normal Enum decoding\n    return [value, undefined];\n}\n/**\n * @name Data\n * @description\n * A [[Data]] container with node, raw or hashed data\n */\nexport class Data extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            None: 'Null',\n            Raw: 'Bytes',\n            // eslint-disable-next-line sort-keys\n            BlakeTwo256: 'H256',\n            Sha256: 'H256',\n            // eslint-disable-next-line sort-keys\n            Keccak256: 'H256',\n            ShaThree256: 'H256' // 5\n        }, ...decodeData(registry, value));\n        if (this.isRaw && this.asRaw.length > 32) {\n            throw new Error('Data.Raw values are limited to a maximum length of 32 bytes');\n        }\n    }\n    get asBlakeTwo256() {\n        return this.value;\n    }\n    get asKeccak256() {\n        return this.value;\n    }\n    get asRaw() {\n        return this.value;\n    }\n    get asSha256() {\n        return this.value;\n    }\n    get asShaThree256() {\n        return this.value;\n    }\n    get isBlakeTwo256() {\n        return this.index === 2;\n    }\n    get isKeccak256() {\n        return this.index === 4;\n    }\n    get isNone() {\n        return this.index === 0;\n    }\n    get isRaw() {\n        return this.index === 1;\n    }\n    get isSha256() {\n        return this.index === 3;\n    }\n    get isShaThree256() {\n        return this.index === 5;\n    }\n    /**\n     * @description The encoded length\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a() {\n        if (this.index === 0) {\n            return new Uint8Array(1);\n        }\n        else if (this.index === 1) {\n            // don't add the length, just the data\n            const data = this.value.toU8a(true);\n            const length = Math.min(data.length, 32);\n            const u8a = new Uint8Array(length + 1);\n            u8a.set([length + 1], 0);\n            u8a.set(data.subarray(0, length), 1);\n            return u8a;\n        }\n        // otherwise we simply have a hash\n        const u8a = new Uint8Array(33);\n        u8a.set([this.index + 32], 0);\n        u8a.set(this.value.toU8a(), 1);\n        return u8a;\n    }\n}\n", "import { Bytes } from '@polkadot/types-codec';\nimport { isFunction, isString, isU8a } from '@polkadot/util';\nimport { getSiName } from '../metadata/util/index.js';\nimport { unwrapStorageType } from '../util/index.js';\nconst HASHER_MAP = {\n    // opaque\n    Blake2_128: [16, false],\n    Blake2_128Concat: [16, true],\n    Blake2_256: [32, false],\n    Identity: [0, true],\n    Twox128: [16, false],\n    Twox256: [32, false],\n    Twox64Concat: [8, true]\n};\n/** @internal */\nfunction decodeStorageKey(value) {\n    if (isU8a(value) || !value || isString(value)) {\n        // let Bytes handle these inputs\n        return { key: value };\n    }\n    else if (value instanceof StorageKey) {\n        return {\n            key: value,\n            method: value.method,\n            section: value.section\n        };\n    }\n    else if (isFunction(value)) {\n        return {\n            key: value(),\n            method: value.method,\n            section: value.section\n        };\n    }\n    else if (Array.isArray(value)) {\n        const [fn, args = []] = value;\n        if (!isFunction(fn)) {\n            throw new Error('Expected function input for key construction');\n        }\n        if (fn.meta && fn.meta.type.isMap) {\n            const map = fn.meta.type.asMap;\n            if (!Array.isArray(args) || args.length !== map.hashers.length) {\n                throw new Error(`Expected an array of ${map.hashers.length} values as params to a Map query`);\n            }\n        }\n        return {\n            key: fn(...args),\n            method: fn.method,\n            section: fn.section\n        };\n    }\n    throw new Error(`Unable to convert input ${value} to StorageKey`);\n}\n/** @internal */\nfunction decodeHashers(registry, value, hashers) {\n    // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total\n    let offset = 32;\n    const count = hashers.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const [hasher, type] = hashers[i];\n        const [hashLen, canDecode] = HASHER_MAP[hasher.type];\n        const decoded = canDecode\n            ? registry.createTypeUnsafe(getSiName(registry.lookup, type), [value.subarray(offset + hashLen)])\n            : registry.createTypeUnsafe('Raw', [value.subarray(offset, offset + hashLen)]);\n        offset += hashLen + (canDecode ? decoded.encodedLength : 0);\n        result[i] = decoded;\n    }\n    return result;\n}\n/** @internal */\nfunction decodeArgsFromMeta(registry, value, meta) {\n    if (!meta || !meta.type.isMap) {\n        return [];\n    }\n    const { hashers, key } = meta.type.asMap;\n    const keys = hashers.length === 1\n        ? [key]\n        : registry.lookup.getSiType(key).def.asTuple;\n    return decodeHashers(registry, value, hashers.map((h, i) => [h, keys[i]]));\n}\n/** @internal */\nfunction getMeta(value) {\n    if (value instanceof StorageKey) {\n        return value.meta;\n    }\n    else if (isFunction(value)) {\n        return value.meta;\n    }\n    else if (Array.isArray(value)) {\n        const [fn] = value;\n        return fn.meta;\n    }\n    return undefined;\n}\n/** @internal */\nfunction getType(registry, value) {\n    if (value instanceof StorageKey) {\n        return value.outputType;\n    }\n    else if (isFunction(value)) {\n        return unwrapStorageType(registry, value.meta.type);\n    }\n    else if (Array.isArray(value)) {\n        const [fn] = value;\n        if (fn.meta) {\n            return unwrapStorageType(registry, fn.meta.type);\n        }\n    }\n    // If we have no type set, default to Raw\n    return 'Raw';\n}\n/**\n * @name StorageKey\n * @description\n * A representation of a storage key (typically hashed) in the system. It can be\n * constructed by passing in a raw key or a StorageEntry with (optional) arguments.\n */\nexport class StorageKey extends Bytes {\n    constructor(registry, value, override = {}) {\n        const { key, method, section } = decodeStorageKey(value);\n        super(registry, key);\n        this.__internal__outputType = getType(registry, value);\n        // decode the args (as applicable based on the key and the hashers, after all init)\n        this.setMeta(getMeta(value), override.section || section, override.method || method);\n    }\n    /**\n     * @description Return the decoded arguments (applicable to map with decodable values)\n     */\n    get args() {\n        return this.__internal__args;\n    }\n    /**\n     * @description The metadata or `undefined` when not available\n     */\n    get meta() {\n        return this.__internal__meta;\n    }\n    /**\n     * @description The key method or `undefined` when not specified\n     */\n    get method() {\n        return this.__internal__method;\n    }\n    /**\n     * @description The output type\n     */\n    get outputType() {\n        return this.__internal__outputType;\n    }\n    /**\n     * @description The key section or `undefined` when not specified\n     */\n    get section() {\n        return this.__internal__section;\n    }\n    is(key) {\n        return key.section === this.section && key.method === this.method;\n    }\n    /**\n     * @description Sets the meta for this key\n     */\n    setMeta(meta, section, method) {\n        this.__internal__meta = meta;\n        this.__internal__method = method || this.__internal__method;\n        this.__internal__section = section || this.__internal__section;\n        if (meta) {\n            this.__internal__outputType = unwrapStorageType(this.registry, meta.type);\n        }\n        try {\n            this.__internal__args = decodeArgsFromMeta(this.registry, this.toU8a(true), meta);\n        }\n        catch {\n            // ignore...\n        }\n        return this;\n    }\n    /**\n     * @description Returns the Human representation for this type\n     */\n    toHuman() {\n        return this.__internal__args.length\n            ? this.__internal__args.map((a) => a.toHuman())\n            : super.toHuman();\n    }\n    /**\n     * @description Returns the raw type for this\n     */\n    toRawType() {\n        return 'StorageKey';\n    }\n}\n", "import { lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { getSiName } from '../../util/index.js';\nimport { objectNameToCamel } from '../util.js';\nimport { createUnchecked } from './createUnchecked.js';\nexport function filterCallsSome({ calls }) {\n    return calls.isSome;\n}\nexport function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {\n    const { fields, index } = variant;\n    const count = fields.length;\n    const args = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const { name, type, typeName } = fields[i];\n        args[i] = objectSpread({\n            name: stringCamelCase(name.unwrapOr(`param${i}`)),\n            type: getSiName(lookup, type)\n        }, typeName.isSome\n            ? { typeName: typeName.unwrap() }\n            : null);\n    }\n    return createUnchecked(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createTypeUnsafe('FunctionMetadataLatest', [objectSpread({ args }, variant)]));\n}\n/** @internal */\nexport function decorateExtrinsics(registry, { lookup, pallets }, version) {\n    const result = {};\n    const filtered = pallets.filter(filterCallsSome);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { calls, index, name } = filtered[i];\n        const sectionName = stringCamelCase(name);\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        lazyMethod(result, sectionName, () => lazyVariants(lookup, calls.unwrap(), objectNameToCamel, (variant) => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));\n    }\n    return result;\n}\n", "import { stringCamelCase } from '@polkadot/util';\nfunction convert(fn) {\n    return ({ name }) => fn(name);\n}\nexport const objectNameToCamel = /*#__PURE__*/ convert(stringCamelCase);\nexport const objectNameToString = /*#__PURE__*/ convert((n) => n.toString());\n", "import { stringCamelCase } from '@polkadot/util';\nfunction isTx(tx, callIndex) {\n    return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n    const expectedArgs = callMetadata.fields;\n    const funcName = stringCamelCase(callMetadata.name);\n    const extrinsicFn = (...args) => {\n        if (expectedArgs.length !== args.length) {\n            throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);\n        }\n        return registry.createTypeUnsafe('Call', [{ args, callIndex }, callMetadata]);\n    };\n    extrinsicFn.is = (tx) => isTx(tx, callIndex);\n    extrinsicFn.callIndex = callIndex;\n    extrinsicFn.meta = callMetadata;\n    extrinsicFn.method = funcName;\n    extrinsicFn.section = section;\n    extrinsicFn.toJSON = () => callMetadata.toJSON();\n    return extrinsicFn;\n}\n", "import { Metadata } from '../Metadata.js';\nimport { decorateConstants } from './constants/index.js';\nimport { decorateErrors } from './errors/index.js';\nimport { decorateEvents, filterEventsSome } from './events/index.js';\nimport { decorateExtrinsics, filterCallsSome } from './extrinsics/index.js';\nimport { decorateStorage } from './storage/index.js';\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\nexport function expandMetadata(registry, metadata) {\n    if (!(metadata instanceof Metadata)) {\n        throw new Error('You need to pass a valid Metadata instance to Decorated');\n    }\n    const latest = metadata.asLatest;\n    const version = metadata.version;\n    return {\n        consts: decorateConstants(registry, latest, version),\n        errors: decorateErrors(registry, latest, version),\n        events: decorateEvents(registry, latest, version),\n        query: decorateStorage(registry, latest, version),\n        registry,\n        tx: decorateExtrinsics(registry, latest, version)\n    };\n}\nexport { decorateConstants, decorateErrors, decorateEvents, decorateExtrinsics, decorateStorage, filterCallsSome, filterEventsSome };\n", "import { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from './MetadataVersioned.js';\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nconst VERSION_IDX = EMPTY_METADATA.length - 1;\n/** @internal */\nfunction decodeU8a(registry, u8a) {\n    if (u8a.length === 0) {\n        return EMPTY_METADATA;\n    }\n    else if (u8a[VERSION_IDX] === 9) {\n        // This is an f-ing hack as a follow-up to another ugly hack\n        // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n        // when we fail on V9, try to re-parse it as v10...\n        try {\n            return new MetadataVersioned(registry, u8a);\n        }\n        catch {\n            u8a[VERSION_IDX] = 10;\n        }\n    }\n    return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class Metadata extends MetadataVersioned {\n    constructor(registry, value) {\n        // const timeStart = performance.now()\n        super(registry, isU8a(value) || isString(value)\n            ? decodeU8a(registry, u8aToU8a(value))\n            : value);\n        // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n}\n", "import { Struct } from '@polkadot/types-codec';\nimport { getUniqTypes, toCallsOnly } from './util/index.js';\nimport { toV10 } from './v9/toV10.js';\nimport { toV11 } from './v10/toV11.js';\nimport { toV12 } from './v11/toV12.js';\nimport { toV13 } from './v12/toV13.js';\nimport { toV14 } from './v13/toV14.js';\nimport { toV15 } from './v14/toV15.js';\nimport { toLatest } from './v15/toLatest.js';\nimport { MagicNumber } from './MagicNumber.js';\nimport { LATEST_VERSION, TO_CALLS_VERSION } from './versions.js';\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class MetadataVersioned extends Struct {\n    constructor(registry, value) {\n        // const timeStart = performance.now()\n        super(registry, {\n            magicNumber: MagicNumber,\n            metadata: 'MetadataAll'\n        }, value);\n        this.__internal__converted = new Map();\n        this.__internal__assertVersion = (version) => {\n            if (this.version > version) {\n                throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);\n            }\n            return this.version === version;\n        };\n        this.__internal__getVersion = (version, fromPrev) => {\n            if (version !== 'latest' && this.__internal__assertVersion(version)) {\n                const asCurr = `asV${version}`;\n                return this.__internal__metadata()[asCurr];\n            }\n            if (!this.__internal__converted.has(version)) {\n                const asPrev = version === 'latest'\n                    ? `asV${LATEST_VERSION}`\n                    : `asV${(version - 1)}`;\n                this.__internal__converted.set(version, fromPrev(this.registry, this[asPrev], this.version));\n            }\n            return this.__internal__converted.get(version);\n        };\n        /**\n         * @description the metadata wrapped\n         */\n        this.__internal__metadata = () => {\n            return this.getT('metadata');\n        };\n        // console.log('MetadataVersioned', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n    /**\n     * @description Returns the wrapped metadata as a limited calls-only (latest) version\n     */\n    get asCallsOnly() {\n        return new MetadataVersioned(this.registry, {\n            magicNumber: this.magicNumber,\n            metadata: this.registry.createTypeUnsafe('MetadataAll', [toCallsOnly(this.registry, this.asLatest), TO_CALLS_VERSION])\n        });\n    }\n    /**\n     * @description Returns the wrapped metadata as a V9 object\n     */\n    get asV9() {\n        this.__internal__assertVersion(9);\n        return this.__internal__metadata().asV9;\n    }\n    /**\n     * @description Returns the wrapped values as a V10 object\n     */\n    get asV10() {\n        return this.__internal__getVersion(10, toV10);\n    }\n    /**\n     * @description Returns the wrapped values as a V11 object\n     */\n    get asV11() {\n        return this.__internal__getVersion(11, toV11);\n    }\n    /**\n     * @description Returns the wrapped values as a V12 object\n     */\n    get asV12() {\n        return this.__internal__getVersion(12, toV12);\n    }\n    /**\n     * @description Returns the wrapped values as a V13 object\n     */\n    get asV13() {\n        return this.__internal__getVersion(13, toV13);\n    }\n    /**\n     * @description Returns the wrapped values as a V14 object\n     */\n    get asV14() {\n        return this.__internal__getVersion(14, toV14);\n    }\n    /**\n     * @description Returns the wrapped values as a V14 object\n     */\n    get asV15() {\n        return this.__internal__getVersion(15, toV15);\n    }\n    /**\n     * @description Returns the wrapped values as a latest version object\n     */\n    get asLatest() {\n        return this.__internal__getVersion('latest', toLatest);\n    }\n    /**\n     * @description The magicNumber for the Metadata (known constant)\n     */\n    get magicNumber() {\n        return this.getT('magicNumber');\n    }\n    /**\n     * @description the metadata version this structure represents\n     */\n    get version() {\n        return this.__internal__metadata().index;\n    }\n    getUniqTypes(throwError) {\n        return getUniqTypes(this.registry, this.asLatest, throwError);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n        // needed to ensure we have the correct overrides (which is only applied in toLatest)\n        // eslint-disable-next-line no-unused-expressions\n        this.asLatest;\n        return super.toJSON();\n    }\n}\n", "import { objectSpread } from '@polkadot/util';\n/** @internal */\nfunction createStorageHasher(registry, hasher) {\n    // Blake2_128_Concat has been added at index 2, so we increment all the\n    // indexes greater than 2\n    if (hasher.toNumber() >= 2) {\n        return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);\n    }\n    return registry.createTypeUnsafe('StorageHasherV10', [hasher]);\n}\n/** @internal */\nfunction createStorageType(registry, entryType) {\n    if (entryType.isMap) {\n        return [objectSpread({}, entryType.asMap, {\n                hasher: createStorageHasher(registry, entryType.asMap.hasher)\n            }), 1];\n    }\n    if (entryType.isDoubleMap) {\n        return [objectSpread({}, entryType.asDoubleMap, {\n                hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),\n                key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)\n            }), 2];\n    }\n    return [entryType.asPlain, 0];\n}\n/** @internal */\nfunction convertModule(registry, mod) {\n    const storage = mod.storage.unwrapOr(null);\n    return registry.createTypeUnsafe('ModuleMetadataV10', [objectSpread({}, mod, {\n            storage: storage\n                ? objectSpread({}, storage, {\n                    items: storage.items.map((item) => objectSpread({}, item, {\n                        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))\n                    }))\n                })\n                : null\n        })]);\n}\n/** @internal */\nexport function toV10(registry, { modules }) {\n    return registry.createTypeUnsafe('MetadataV10', [{\n            modules: modules.map((mod) => convertModule(registry, mod))\n        }]);\n}\n", "/** @internal */\nexport function toV11(registry, { modules }) {\n    return registry.createTypeUnsafe('MetadataV11', [{\n            // This is new in V11, pass V0 here - something non-existing, telling the API to use\n            // the fallback for this information (on-chain detection)\n            extrinsic: {\n                signedExtensions: [],\n                version: 0\n            },\n            modules\n        }]);\n}\n", "import { objectSpread } from '@polkadot/util';\n/**\n * @internal\n **/\nexport function toV12(registry, { extrinsic, modules }) {\n    return registry.createTypeUnsafe('MetadataV12', [{\n            extrinsic,\n            modules: modules.map((mod) => registry.createTypeUnsafe('ModuleMetadataV12', [objectSpread({}, mod, { index: 255 })]))\n        }]);\n}\n", "/**\n * @internal\n **/\nexport function toV13(registry, v12) {\n    return registry.createTypeUnsafe('MetadataV13', [v12]);\n}\n", "import { stringCamelCase } from '@polkadot/util';\nimport { getAliasTypes } from '../../interfaces/alias.js';\nimport { knownOrigins } from '../../interfaces/runtime/definitions.js';\nconst BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];\n/**\n * Creates a compatible type mapping\n * @internal\n **/\nfunction compatType(specs, _type) {\n    const type = _type.toString();\n    const index = specs.findIndex(({ def }) => def.HistoricMetaCompat === type);\n    if (index !== -1) {\n        return index;\n    }\n    return specs.push({\n        def: {\n            HistoricMetaCompat: type\n        }\n    }) - 1;\n}\nfunction compatTypes(specs, ...types) {\n    for (let i = 0, count = types.length; i < count; i++) {\n        compatType(specs, types[i]);\n    }\n}\nfunction makeTupleType(specs, entries) {\n    return specs.push({\n        def: {\n            Tuple: entries\n        }\n    }) - 1;\n}\nfunction makeVariantType(modName, variantType, specs, variants) {\n    return specs.push({\n        def: {\n            Variant: { variants }\n        },\n        path: [`pallet_${modName.toString()}`, 'pallet', variantType]\n    }) - 1;\n}\n/**\n * @internal\n * generate & register the OriginCaller type\n **/\nfunction registerOriginCaller(registry, modules, metaVersion) {\n    registry.register({\n        OriginCaller: {\n            _enum: modules\n                .map((mod, index) => [\n                mod.name.toString(),\n                metaVersion >= 12\n                    ? mod.index.toNumber()\n                    : index\n            ])\n                .sort((a, b) => a[1] - b[1])\n                .reduce((result, [name, index]) => {\n                for (let i = Object.keys(result).length; i < index; i++) {\n                    result[`Empty${i}`] = 'Null';\n                }\n                result[name] = knownOrigins[name] || 'Null';\n                return result;\n            }, {})\n        }\n    });\n}\n/**\n * Find and apply the correct type override\n * @internal\n **/\nfunction setTypeOverride(sectionTypes, types) {\n    types.forEach((type) => {\n        const override = Object.keys(sectionTypes).find((aliased) => type.eq(aliased));\n        if (override) {\n            type.setOverride(sectionTypes[override]);\n        }\n        else {\n            // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)\n            const orig = type.toString();\n            const alias = Object\n                .entries(sectionTypes)\n                .reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);\n            if (orig !== alias) {\n                type.setOverride(alias);\n            }\n        }\n    });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\nfunction convertCalls(specs, registry, modName, calls, sectionTypes) {\n    const variants = calls.map(({ args, docs, name }, index) => {\n        setTypeOverride(sectionTypes, args.map(({ type }) => type));\n        return registry.createTypeUnsafe('SiVariant', [{\n                docs,\n                fields: args.map(({ name, type }) => registry.createTypeUnsafe('SiField', [{ name, type: compatType(specs, type) }])),\n                index,\n                name\n            }]);\n    });\n    return registry.createTypeUnsafe('PalletCallMetadataV14', [{\n            type: makeVariantType(modName, 'Call', specs, variants)\n        }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\nfunction convertConstants(specs, registry, constants, sectionTypes) {\n    return constants.map(({ docs, name, type, value }) => {\n        setTypeOverride(sectionTypes, [type]);\n        return registry.createTypeUnsafe('PalletConstantMetadataV14', [{\n                docs,\n                name,\n                type: compatType(specs, type),\n                value\n            }]);\n    });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\nfunction convertErrors(specs, registry, modName, errors, _sectionTypes) {\n    const variants = errors.map(({ docs, name }, index) => registry.createTypeUnsafe('SiVariant', [{\n            docs,\n            fields: [],\n            index,\n            name\n        }]));\n    return registry.createTypeUnsafe('PalletErrorMetadataV14', [{\n            type: makeVariantType(modName, 'Error', specs, variants)\n        }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\nfunction convertEvents(specs, registry, modName, events, sectionTypes) {\n    const variants = events.map(({ args, docs, name }, index) => {\n        setTypeOverride(sectionTypes, args);\n        return registry.createTypeUnsafe('SiVariant', [{\n                docs,\n                fields: args.map((t) => registry.createTypeUnsafe('SiField', [{ type: compatType(specs, t) }])),\n                index,\n                name\n            }]);\n    });\n    return registry.createTypeUnsafe('PalletEventMetadataV14', [{\n            type: makeVariantType(modName, 'Event', specs, variants)\n        }]);\n}\nfunction createMapEntry(specs, registry, sectionTypes, { hashers, isLinked, isOptional, keys, value }) {\n    setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);\n    return registry.createTypeUnsafe('StorageEntryTypeV14', [{\n            Map: {\n                hashers,\n                key: hashers.length === 1\n                    ? compatType(specs, keys[0])\n                    : makeTupleType(specs, keys.map((t) => compatType(specs, t))),\n                value: isLinked\n                    // For previous-generation linked-map support, the actual storage result\n                    // is a Tuple with the value and the Linkage (Option appears in teh value-part only)\n                    ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`)\n                    : compatType(specs, value)\n            }\n        }]);\n}\n/**\n * Apply module-specific storage type overrides (always part of toV14)\n * @internal\n **/\nfunction convertStorage(specs, registry, { items, prefix }, sectionTypes) {\n    return registry.createTypeUnsafe('PalletStorageMetadataV14', [{\n            items: items.map(({ docs, fallback, modifier, name, type }) => {\n                let entryType;\n                if (type.isPlain) {\n                    const plain = type.asPlain;\n                    setTypeOverride(sectionTypes, [plain]);\n                    entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{\n                            Plain: compatType(specs, plain)\n                        }]);\n                }\n                else if (type.isMap) {\n                    const map = type.asMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: [map.hasher],\n                        isLinked: map.linked.isTrue,\n                        isOptional: modifier.isOptional,\n                        keys: [map.key],\n                        value: map.value\n                    });\n                }\n                else if (type.isDoubleMap) {\n                    const dm = type.asDoubleMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: [dm.hasher, dm.key2Hasher],\n                        isLinked: false,\n                        isOptional: modifier.isOptional,\n                        keys: [dm.key1, dm.key2],\n                        value: dm.value\n                    });\n                }\n                else {\n                    const nm = type.asNMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: nm.hashers,\n                        isLinked: false,\n                        isOptional: modifier.isOptional,\n                        keys: nm.keyVec,\n                        value: nm.value\n                    });\n                }\n                return registry.createTypeUnsafe('StorageEntryMetadataV14', [{\n                        docs,\n                        fallback,\n                        modifier,\n                        name,\n                        type: entryType\n                    }]);\n            }),\n            prefix\n        }]);\n}\n/** @internal */\nfunction convertExtrinsic(registry, { signedExtensions, version }) {\n    return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{\n            signedExtensions: signedExtensions.map((identifier) => ({\n                identifier,\n                type: 0 // we don't map the fields at all\n            })),\n            type: 0,\n            version\n        }]);\n}\n/** @internal */\nfunction createPallet(specs, registry, mod, { calls, constants, errors, events, storage }) {\n    const sectionTypes = getAliasTypes(registry, stringCamelCase(mod.name));\n    return registry.createTypeUnsafe('PalletMetadataV14', [{\n            calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),\n            constants: convertConstants(specs, registry, constants, sectionTypes),\n            errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),\n            events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),\n            index: mod.index,\n            name: mod.name,\n            storage: storage && convertStorage(specs, registry, storage, sectionTypes)\n        }]);\n}\n/**\n * Convert the Metadata to v14\n * @internal\n **/\nexport function toV14(registry, v13, metaVersion) {\n    const specs = [];\n    // position 0 always has Null, additionally add internal defaults\n    compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');\n    registerOriginCaller(registry, v13.modules, metaVersion);\n    const extrinsic = convertExtrinsic(registry, v13.extrinsic);\n    const pallets = v13.modules.map((mod) => createPallet(specs, registry, mod, {\n        calls: mod.calls.unwrapOr(null),\n        constants: mod.constants,\n        errors: mod.errors.length ? mod.errors : null,\n        events: mod.events.unwrapOr(null),\n        storage: mod.storage.unwrapOr(null)\n    }));\n    return registry.createTypeUnsafe('MetadataV14', [{\n            extrinsic,\n            lookup: {\n                types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{ id, type }]))\n            },\n            pallets\n        }]);\n}\n", "const typesAlias = {\n    assets: {\n        Approval: 'AssetApproval',\n        ApprovalKey: 'AssetApprovalKey',\n        Balance: 'TAssetBalance',\n        DestroyWitness: 'AssetDestroyWitness'\n    },\n    babe: {\n        EquivocationProof: 'BabeEquivocationProof'\n    },\n    balances: {\n        Status: 'BalanceStatus'\n    },\n    beefy: {\n        AuthorityId: 'BeefyId'\n    },\n    contracts: {\n        StorageKey: 'ContractStorageKey'\n    },\n    electionProviderMultiPhase: {\n        Phase: 'ElectionPhase'\n    },\n    ethereum: {\n        Block: 'EthBlock',\n        Header: 'EthHeader',\n        Receipt: 'EthReceipt',\n        Transaction: 'EthTransaction',\n        TransactionStatus: 'EthTransactionStatus'\n    },\n    evm: {\n        Account: 'EvmAccount',\n        Log: 'EvmLog',\n        Vicinity: 'EvmVicinity'\n    },\n    grandpa: {\n        Equivocation: 'GrandpaEquivocation',\n        EquivocationProof: 'GrandpaEquivocationProof'\n    },\n    identity: {\n        Judgement: 'IdentityJudgement'\n    },\n    inclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraDisputes: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraInclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraScheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraShared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parachains: {\n        Id: 'ParaId'\n    },\n    parasDisputes: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasInclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasScheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasShared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    proposeParachain: {\n        Proposal: 'ParachainProposal'\n    },\n    proxy: {\n        Announcement: 'ProxyAnnouncement'\n    },\n    scheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    shared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    society: {\n        Judgement: 'SocietyJudgement',\n        Vote: 'SocietyVote'\n    },\n    staking: {\n        Compact: 'CompactAssignments'\n    },\n    treasury: {\n        Proposal: 'TreasuryProposal'\n    },\n    xcm: {\n        AssetId: 'XcmAssetId'\n    },\n    xcmPallet: {\n        AssetId: 'XcmAssetId'\n    }\n};\n/**\n * @description Get types for specific modules (metadata override)\n */\nexport function getAliasTypes({ knownTypes }, section) {\n    return {\n        ...(typesAlias[section] ?? {}),\n        ...(knownTypes.typesAlias?.[section] ?? {})\n    };\n}\n", "/**\n * Convert the Metadata to v15\n * @internal\n **/\nexport function toV15(registry, v14, _) {\n    // V15 is mostly equivalent to v14 however it does add\n    //\n    // 1. The top-level apis entry - it is assumed that in usage we would\n    //    just check for all-empty (like this would construct)\n    // 2. A docs param on the pallet itself\n    //\n    // A straight conversion with createTypeUndafe magic fills in details\n    return registry.createTypeUnsafe('MetadataV15', [v14]);\n}\n", "/**\n * Convert the Metadata (which is an alias) to latest\n * @internal\n **/\nexport function toLatest(_registry, v15, _metaVersion) {\n    return v15;\n}\n", "import { U32 } from '@polkadot/types-codec';\nexport const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding\nexport class MagicNumber extends U32 {\n    constructor(registry, value) {\n        super(registry, value);\n        if (!this.isEmpty && !this.eq(MAGIC_NUMBER)) {\n            throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);\n        }\n    }\n}\n", "export const KNOWN_VERSIONS = [15, 14, 13, 12, 11, 10, 9];\nexport const LATEST_VERSION = KNOWN_VERSIONS[0];\nexport const TO_CALLS_VERSION = 14; // LATEST_VERSION;\n", "import { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\n/** @internal */\nexport function decorateConstants(registry, { pallets }, _version) {\n    const result = {};\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { constants, name } = pallets[i];\n        if (!constants.isEmpty) {\n            lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, (constant) => {\n                const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n                // We are casting here since we are assigning to a read-only property\n                codec.meta = constant;\n                return codec;\n            }, objectNameToCamel));\n        }\n    }\n    return result;\n}\n", "import { isCodec, isU8a, lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { objectNameToString } from '../util.js';\nexport function variantToMeta(lookup, variant) {\n    return objectSpread({ args: variant.fields.map(({ type }) => lookup.getTypeDef(type).type) }, variant);\n}\n/** @internal */\nexport function decorateErrors(registry, { lookup, pallets }, version) {\n    const result = {};\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { errors, index, name } = pallets[i];\n        if (errors.isSome) {\n            const sectionIndex = version >= 12 ? index.toNumber() : i;\n            lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, errors.unwrap(), objectNameToString, (variant) => ({\n                // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n                is: (errorMod) => isCodec(errorMod) &&\n                    isCodec(errorMod.index) &&\n                    errorMod.index.eq(sectionIndex) && (isU8a(errorMod.error)\n                    ? errorMod.error[0] === variant.index.toNumber()\n                    : isCodec(errorMod.error) && errorMod.error.eq(variant.index)),\n                meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])\n            })));\n        }\n    }\n    return result;\n}\n", "import { isCodec, isU8a, lazyMethod, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { variantToMeta } from '../errors/index.js';\nimport { objectNameToString } from '../util.js';\nexport function filterEventsSome({ events }) {\n    return events.isSome;\n}\n/** @internal */\nexport function decorateEvents(registry, { lookup, pallets }, version) {\n    const result = {};\n    const filtered = pallets.filter(filterEventsSome);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { events, index, name } = filtered[i];\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, events.unwrap(), objectNameToString, (variant) => ({\n            // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n            is: (eventRecord) => isCodec(eventRecord) &&\n                isU8a(eventRecord.index) &&\n                sectionIndex === eventRecord.index[0] &&\n                variant.index.eq(eventRecord.index[1]),\n            meta: registry.createTypeUnsafe('EventMetadataLatest', [variantToMeta(lookup, variant)])\n        })));\n    }\n    return result;\n}\n", "import { lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\nimport { createFunction, createKeyRaw, NO_RAW_ARGS } from './createFunction.js';\nimport { getStorage } from './getStorage.js';\nimport { createRuntimeFunction } from './util.js';\nconst VERSION_NAME = 'palletVersion';\nconst VERSION_KEY = ':__STORAGE_VERSION__:';\nconst VERSION_DOCS = { docs: 'Returns the current pallet version from storage', type: 'u16' };\n/** @internal */\nexport function decorateStorage(registry, { pallets }, _metaVersion) {\n    const result = getStorage(registry);\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { name, storage } = pallets[i];\n        if (storage.isSome) {\n            const section = stringCamelCase(name);\n            const { items, prefix: _prefix } = storage.unwrap();\n            const prefix = _prefix.toString();\n            lazyMethod(result, section, () => lazyMethods({\n                palletVersion: createRuntimeFunction({ method: VERSION_NAME, prefix, section }, createKeyRaw(registry, { method: VERSION_KEY, prefix: name.toString() }, NO_RAW_ARGS), VERSION_DOCS)(registry)\n            }, items, (meta) => createFunction(registry, { meta, method: meta.name.toString(), prefix, section }, {}), objectNameToCamel));\n        }\n    }\n    return result;\n}\n", "import { Raw } from '@polkadot/types-codec';\nimport { compactAddLength, compactStripLength, isUndefined, objectSpread, stringCamelCase, u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { xxhashAsU8a } from '@polkadot/util-crypto';\nimport { getSiName } from '../../util/index.js';\nimport { getHasher } from './getHasher.js';\nexport const NO_RAW_ARGS = {\n    args: [],\n    hashers: [],\n    keys: []\n};\n/** @internal */\nfunction filterDefined(a) {\n    return !isUndefined(a);\n}\n/** @internal */\nfunction assertArgs({ method, section }, { args, keys }) {\n    if (!Array.isArray(args)) {\n        throw new Error(`Call to ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs ${keys.length} arguments`);\n    }\n    else if (args.filter(filterDefined).length !== keys.length) {\n        throw new Error(`Call to ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs ${keys.length} arguments, found [${args.join(', ')}]`);\n    }\n}\n/** @internal */\nexport function createKeyRawParts(registry, itemFn, { args, hashers, keys }) {\n    const count = keys.length;\n    const extra = new Array(count);\n    for (let i = 0; i < count; i++) {\n        extra[i] = getHasher(hashers[i])(registry.createTypeUnsafe(registry.createLookupType(keys[i]), [args[i]]).toU8a());\n    }\n    return [\n        [\n            xxhashAsU8a(itemFn.prefix, 128),\n            xxhashAsU8a(itemFn.method, 128)\n        ],\n        extra\n    ];\n}\n/** @internal */\nexport function createKeyInspect(registry, itemFn, args) {\n    assertArgs(itemFn, args);\n    const { meta } = itemFn;\n    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);\n    let types = [];\n    if (meta.type.isMap) {\n        const { hashers, key } = meta.type.asMap;\n        types = hashers.length === 1\n            ? [`${hashers[0].type}(${getSiName(registry.lookup, key)})`]\n            : registry.lookup.getSiType(key).def.asTuple.map((k, i) => `${hashers[i].type}(${getSiName(registry.lookup, k)})`);\n    }\n    const names = ['module', 'method'].concat(...args.args.map((_, i) => types[i]));\n    return {\n        inner: prefix\n            .concat(...extra)\n            .map((v, i) => ({ name: names[i], outer: [v] }))\n    };\n}\n/** @internal */\nexport function createKeyRaw(registry, itemFn, args) {\n    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);\n    return u8aConcat(...prefix, ...extra);\n}\n/** @internal */\nfunction createKey(registry, itemFn, args) {\n    assertArgs(itemFn, args);\n    // always add the length prefix (underlying it is Bytes)\n    return compactAddLength(createKeyRaw(registry, itemFn, args));\n}\n/** @internal */\nfunction createStorageInspect(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    return (...args) => {\n        if (type.isPlain) {\n            return options.skipHashing\n                ? { inner: [], name: 'wellKnown', outer: [u8aToU8a(options.key)] }\n                : createKeyInspect(registry, itemFn, NO_RAW_ARGS);\n        }\n        const { hashers, key } = type.asMap;\n        return hashers.length === 1\n            ? createKeyInspect(registry, itemFn, { args, hashers, keys: [key] })\n            : createKeyInspect(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });\n    };\n}\n/** @internal */\nfunction createStorageFn(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    let cacheKey = null;\n    // Can only have zero or one argument:\n    //   - storage.system.account(address)\n    //   - storage.timestamp.blockPeriod()\n    // For higher-map queries the params are passed in as an tuple, [key1, key2]\n    return (...args) => {\n        if (type.isPlain) {\n            if (!cacheKey) {\n                cacheKey = options.skipHashing\n                    ? compactAddLength(u8aToU8a(options.key))\n                    : createKey(registry, itemFn, NO_RAW_ARGS);\n            }\n            return cacheKey;\n        }\n        const { hashers, key } = type.asMap;\n        return hashers.length === 1\n            ? createKey(registry, itemFn, { args, hashers, keys: [key] })\n            : createKey(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });\n    };\n}\n/** @internal */\nfunction createWithMeta(registry, itemFn, options) {\n    const { meta, method, prefix, section } = itemFn;\n    const storageFn = createStorageFn(registry, itemFn, options);\n    storageFn.inspect = createStorageInspect(registry, itemFn, options);\n    storageFn.meta = meta;\n    storageFn.method = stringCamelCase(method);\n    storageFn.prefix = prefix;\n    storageFn.section = section;\n    // explicitly add the actual method in the toJSON, this gets used to determine caching and without it\n    // instances (e.g. collective) will not work since it is only matched on param meta\n    storageFn.toJSON = () => objectSpread({ storage: { method, prefix, section } }, meta.toJSON());\n    return storageFn;\n}\n/** @internal */\nfunction extendHeadMeta(registry, { meta: { docs, name, type }, section }, { method }, iterFn) {\n    // metadata with a fallback value using the type of the key, the normal\n    // meta fallback only applies to actual entry values, create one for head\n    const meta = registry.createTypeUnsafe('StorageEntryMetadataLatest', [{\n            docs,\n            fallback: registry.createTypeUnsafe('Bytes', []),\n            modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [1]),\n            name,\n            type: registry.createTypeUnsafe('StorageEntryTypeLatest', [type.asMap.key, 0])\n        }]);\n    iterFn.meta = meta;\n    const fn = (...args) => registry.createTypeUnsafe('StorageKey', [iterFn(...args), { method, section }]);\n    fn.meta = meta;\n    return fn;\n}\n/** @internal */\nfunction extendPrefixedMap(registry, itemFn, storageFn) {\n    const { meta: { type }, method, section } = itemFn;\n    storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, (...args) => {\n        if (args.length && (type.isPlain || (args.length >= type.asMap.hashers.length))) {\n            throw new Error(`Iteration of ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs arguments to be at least one less than the full arguments, found [${args.join(', ')}]`);\n        }\n        if (args.length) {\n            if (type.isMap) {\n                const { hashers, key } = type.asMap;\n                const keysVec = hashers.length === 1\n                    ? [key]\n                    : registry.lookup.getSiType(key).def.asTuple;\n                return new Raw(registry, createKeyRaw(registry, itemFn, { args, hashers: hashers.slice(0, args.length), keys: keysVec.slice(0, args.length) }));\n            }\n        }\n        return new Raw(registry, createKeyRaw(registry, itemFn, NO_RAW_ARGS));\n    });\n    return storageFn;\n}\n/** @internal */\nexport function createFunction(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    const storageFn = createWithMeta(registry, itemFn, options);\n    if (type.isMap) {\n        extendPrefixedMap(registry, itemFn, storageFn);\n    }\n    storageFn.keyPrefix = (...args) => (storageFn.iterKey && storageFn.iterKey(...args)) ||\n        compactStripLength(storageFn())[1];\n    return storageFn;\n}\n", "import { u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, xxhashAsU8a } from '@polkadot/util-crypto';\nconst DEFAULT_FN = (data) => xxhashAsU8a(data, 128);\nconst HASHERS = {\n    Blake2_128: (data) => // eslint-disable-line camelcase\n     blake2AsU8a(data, 128),\n    Blake2_128Concat: (data) => // eslint-disable-line camelcase\n     u8aConcat(blake2AsU8a(data, 128), u8aToU8a(data)),\n    Blake2_256: (data) => // eslint-disable-line camelcase\n     blake2AsU8a(data, 256),\n    Identity: (data) => u8aToU8a(data),\n    Twox128: (data) => xxhashAsU8a(data, 128),\n    Twox256: (data) => xxhashAsU8a(data, 256),\n    Twox64Concat: (data) => u8aConcat(xxhashAsU8a(data, 64), u8aToU8a(data))\n};\n/** @internal */\nexport function getHasher(hasher) {\n    return HASHERS[hasher.type] || DEFAULT_FN;\n}\n", "import { substrate } from './substrate.js';\n/** @internal */\nexport function getStorage(registry) {\n    const storage = {};\n    const entries = Object.entries(substrate);\n    for (let e = 0, count = entries.length; e < count; e++) {\n        storage[entries[e][0]] = entries[e][1](registry);\n    }\n    return { substrate: storage };\n}\n", "import { createRuntimeFunction } from './util.js';\nconst prefix = 'Substrate';\nconst section = 'substrate';\nfunction createSubstrateFn(method, key, meta) {\n    return createRuntimeFunction({ method, prefix, section }, key, meta);\n}\nexport const substrate = {\n    changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {\n        docs: 'Changes trie configuration is stored under this key.',\n        type: 'u32'\n    }),\n    childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {\n        docs: 'Prefix of child storage keys.',\n        type: 'u32'\n    }),\n    code: createSubstrateFn('code', ':code', {\n        docs: 'Wasm code of the runtime.',\n        type: 'Bytes'\n    }),\n    extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {\n        docs: 'Current extrinsic index (u32) is stored under this key.',\n        type: 'u32'\n    }),\n    heapPages: createSubstrateFn('heapPages', ':heappages', {\n        docs: 'Number of wasm linear memory pages required for execution of the runtime.',\n        type: 'u64'\n    })\n};\n", "import { createFunction } from './createFunction.js';\nfunction findSiPrimitive(registry, _prim) {\n    const prim = _prim.toLowerCase();\n    return registry.lookup.types.find((t) => (t.type.def.isPrimitive &&\n        t.type.def.asPrimitive.toString().toLowerCase() === prim) || (t.type.def.isHistoricMetaCompat &&\n        t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim));\n}\nfunction findSiType(registry, orig) {\n    let portable = findSiPrimitive(registry, orig);\n    if (!portable && orig === 'Bytes') {\n        const u8 = findSiPrimitive(registry, 'u8');\n        if (u8) {\n            portable = registry.lookup.types.find((t) => (t.type.def.isSequence &&\n                t.type.def.asSequence.type.eq(u8.id)) || (t.type.def.isHistoricMetaCompat &&\n                t.type.def.asHistoricMetaCompat.eq(orig)));\n        }\n    }\n    if (!portable) {\n        console.warn(`Unable to map ${orig} to a lookup index`);\n    }\n    return portable;\n}\n/** @internal */\nexport function createRuntimeFunction({ method, prefix, section }, key, { docs, type }) {\n    return (registry) => createFunction(registry, {\n        meta: registry.createTypeUnsafe('StorageEntryMetadataLatest', [{\n                docs: registry.createTypeUnsafe('Vec<Text>', [[docs]]),\n                modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', ['Required']),\n                name: registry.createTypeUnsafe('Text', [method]),\n                toJSON: () => key,\n                type: registry.createTypeUnsafe('StorageEntryTypeLatest', [{ Plain: findSiType(registry, type)?.id || 0 }])\n            }]),\n        method,\n        prefix,\n        section\n    }, { key, skipHashing: true });\n}\n", "export { decorateConstants, decorateExtrinsics, decorateStorage, expandMetadata } from './decorate/index.js';\nexport { Metadata } from './Metadata.js';\nexport { PortableRegistry } from './PortableRegistry/index.js';\n", "export * from './drr.js';\nexport * from './memo.js';\nexport * from './refCountDelay.js';\n", "import { catchError, distinctUntilChanged, publishReplay, refCount, tap } from 'rxjs';\nimport { stringify } from '@polkadot/util';\nimport { refCountDelay } from './refCountDelay.js';\nfunction CMP(a, b) {\n    return stringify({ t: a }) === stringify({ t: b });\n}\nfunction ERR(error) {\n    throw error;\n}\nfunction NOOP() {\n    // empty\n}\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\nexport function drr({ delay, skipChange = false, skipTimeout = false } = {}) {\n    return (source$) => source$.pipe(catchError(ERR), skipChange\n        ? tap(NOOP)\n        : distinctUntilChanged(CMP), \n    // eslint-disable-next-line deprecation/deprecation\n    publishReplay(1), skipTimeout\n        // eslint-disable-next-line deprecation/deprecation\n        ? refCount()\n        : refCountDelay(delay));\n}\n", "import { asapScheduler, Observable, Subscription } from 'rxjs';\n/** @internal */\nexport function refCountDelay(delay = 1750) {\n    return (source) => {\n        // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n        let [state, refCount, connection, scheduler] = [0, 0, Subscription.EMPTY, Subscription.EMPTY];\n        return new Observable((ob) => {\n            source.subscribe(ob);\n            if (refCount++ === 0) {\n                if (state === 1) {\n                    scheduler.unsubscribe();\n                }\n                else {\n                    // eslint-disable-next-line deprecation/deprecation\n                    connection = source.connect();\n                }\n                state = 3;\n            }\n            return () => {\n                if (--refCount === 0) {\n                    if (state === 2) {\n                        state = 0;\n                        scheduler.unsubscribe();\n                    }\n                    else {\n                        // state === 3\n                        state = 1;\n                        scheduler = asapScheduler.schedule(() => {\n                            state = 0;\n                            connection.unsubscribe();\n                        }, delay);\n                    }\n                }\n            };\n        });\n    };\n}\n", "import { Observable } from 'rxjs';\nimport { memoize } from '@polkadot/util';\nimport { drr } from './drr.js';\n/** @internal */\nexport function memo(instanceId, inner) {\n    const options = { getInstanceId: () => instanceId };\n    const cached = memoize((...params) => new Observable((observer) => {\n        const subscription = inner(...params).subscribe(observer);\n        return () => {\n            cached.unmemoize(...params);\n            subscription.unsubscribe();\n        };\n    }).pipe(drr()), options);\n    return cached;\n}\n", "/** @internal */\nexport function approvalFlagsToBools(flags) {\n    const bools = [];\n    for (let i = 0, count = flags.length; i < count; i++) {\n        const str = flags[i].toString(2);\n        // read from lowest bit to highest\n        for (const bit of str.split('').reverse()) {\n            bools.push(!!parseInt(bit, 10));\n        }\n    }\n    // slice off trailing \"false\" values, as in substrate\n    const lastApproval = bools.lastIndexOf(true);\n    return lastApproval >= 0\n        ? bools.slice(0, lastApproval + 1)\n        : [];\n}\n", "import { isCompact } from '@polkadot/util';\nexport function unwrapBlockNumber(hdr) {\n    return isCompact(hdr.number)\n        ? hdr.number.unwrap()\n        : hdr.number;\n}\n", "import { deriveNoopCache } from './cacheImpl.js';\nconst CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);\nlet deriveCache;\nfunction wrapCache(keyStart, cache) {\n    return {\n        del: (partial) => cache.del(`${keyStart}${partial}`),\n        forEach: cache.forEach,\n        get: (partial) => {\n            const key = `${keyStart}${partial}`;\n            const cached = cache.get(key);\n            if (cached) {\n                cached.x = Date.now();\n                cache.set(key, cached);\n                return cached.v;\n            }\n            return undefined;\n        },\n        set: (partial, v) => {\n            cache.set(`${keyStart}${partial}`, { v, x: Date.now() });\n        }\n    };\n}\nfunction clearCache(cache) {\n    // clear all expired values\n    const now = Date.now();\n    const all = [];\n    cache.forEach((key, { x }) => {\n        ((now - x) > CHACHE_EXPIRY) && all.push(key);\n    });\n    // don't do delete inside loop, just in-case\n    all.forEach((key) => cache.del(key));\n}\nexport function setDeriveCache(prefix = '', cache) {\n    deriveCache = cache\n        ? wrapCache(`derive:${prefix}:`, cache)\n        : deriveNoopCache;\n    if (cache) {\n        clearCache(cache);\n    }\n}\nsetDeriveCache();\nexport { deriveCache };\n", "const mapCache = new Map();\nexport const deriveMapCache = {\n    del: (key) => {\n        mapCache.delete(key);\n    },\n    forEach: (cb) => {\n        for (const [k, v] of mapCache.entries()) {\n            cb(k, v);\n        }\n    },\n    get: (key) => {\n        return mapCache.get(key);\n    },\n    set: (key, value) => {\n        mapCache.set(key, value);\n    }\n};\nexport const deriveNoopCache = {\n    del: () => undefined,\n    forEach: () => undefined,\n    get: () => undefined,\n    set: (_, value) => value\n};\n", "import { map } from 'rxjs';\nimport { memo } from '@polkadot/rpc-core';\nexport function firstObservable(obs) {\n    return obs.pipe(map(([a]) => a));\n}\nexport function firstMemo(fn) {\n    return (instanceId, api) => memo(instanceId, (...args) => firstObservable(fn(api, ...args)));\n}\n", "import { lazyMethod, lazyMethods } from '@polkadot/util';\nexport function lazyDeriveSection(result, section, getKeys, creator) {\n    lazyMethod(result, section, () => lazyMethods({}, getKeys(section), (method) => creator(section, method)));\n}\n", "import * as accounts from './accounts/index.js';\nimport * as alliance from './alliance/index.js';\nimport * as bagsList from './bagsList/index.js';\nimport * as balances from './balances/index.js';\nimport * as bounties from './bounties/index.js';\nimport * as chain from './chain/index.js';\nimport * as contracts from './contracts/index.js';\nimport * as council from './council/index.js';\nimport * as crowdloan from './crowdloan/index.js';\nimport * as democracy from './democracy/index.js';\nimport * as elections from './elections/index.js';\nimport * as imOnline from './imOnline/index.js';\nimport * as membership from './membership/index.js';\nimport * as parachains from './parachains/index.js';\nimport * as session from './session/index.js';\nimport * as society from './society/index.js';\nimport * as staking from './staking/index.js';\nimport * as technicalCommittee from './technicalCommittee/index.js';\nimport * as treasury from './treasury/index.js';\nimport * as tx from './tx/index.js';\nexport const derive = { accounts, alliance, bagsList, balances, bounties, chain, contracts, council, crowdloan, democracy, elections, imOnline, membership, parachains, session, society, staking, technicalCommittee, treasury, tx };\n", "export * from './accountId.js';\nexport * from './flags.js';\nexport * from './idAndIndex.js';\nexport * from './identity.js';\nexport * from './idToIndex.js';\nexport * from './indexes.js';\nexport * from './indexToId.js';\nexport * from './info.js';\n", "import { map, of } from 'rxjs';\nimport { assertReturn, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { memo } from '../util/index.js';\n/**\n * @name accountId\n * @param {(Address | AccountId | AccountIndex | string | null)} address - An accounts address in various formats.\n * @description  An [[AccountId]]\n */\nexport function accountId(instanceId, api) {\n    return memo(instanceId, (address) => {\n        const decoded = isU8a(address)\n            ? address\n            : decodeAddress((address || '').toString());\n        if (decoded.length > 8) {\n            return of(api.registry.createType('AccountId', decoded));\n        }\n        const accountIndex = api.registry.createType('AccountIndex', decoded);\n        return api.derive.accounts.indexToId(accountIndex.toString()).pipe(map((a) => assertReturn(a, 'Unable to retrieve accountId')));\n    });\n}\n", "import { map, of } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction parseFlags(address, [electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey]) {\n    const addrStr = address && address.toString();\n    const isIncluded = (id) => id.toString() === addrStr;\n    return {\n        isCouncil: (electionsMembers?.map((r) => Array.isArray(r) ? r[0] : r.who) || councilMembers || []).some(isIncluded),\n        isSociety: (societyMembers || []).some(isIncluded),\n        isSudo: sudoKey?.toString() === addrStr,\n        isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)\n    };\n}\nexport function _flags(instanceId, api) {\n    return memo(instanceId, () => {\n        const results = [undefined, [], [], [], undefined];\n        const calls = [\n            (api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'])?.members,\n            api.query.council?.members,\n            api.query.technicalCommittee?.members,\n            api.query.society?.members,\n            api.query.sudo?.key\n        ];\n        const filtered = calls.filter((c) => c);\n        if (!filtered.length) {\n            return of(results);\n        }\n        return api.queryMulti(filtered).pipe(map((values) => {\n            let resultIndex = -1;\n            for (let i = 0, count = calls.length; i < count; i++) {\n                if (isFunction(calls[i])) {\n                    results[i] = values[++resultIndex];\n                }\n            }\n            return results;\n        }));\n    });\n}\n/**\n * @name info\n * @description Returns account membership flags\n */\nexport function flags(instanceId, api) {\n    return memo(instanceId, (address) => api.derive.accounts._flags().pipe(map((r) => parseFlags(address, r))));\n}\n", "import { map, of } from 'rxjs';\nimport { isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { memo } from '../util/index.js';\n/**\n * @name idAndIndex\n * @param {(Address | AccountId | AccountIndex | Uint8Array | string | null)} address - An accounts address in various formats.\n * @description  An array containing the [[AccountId]] and [[AccountIndex]] as optional values.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.idAndIndex('F7Hs', ([id, ix]) => {\n *   console.log(`AccountId #${id} with corresponding AccountIndex ${ix}`);\n * });\n * ```\n */\nexport function idAndIndex(instanceId, api) {\n    return memo(instanceId, (address) => {\n        try {\n            // yes, this can fail, don't care too much, catch will catch it\n            const decoded = isU8a(address)\n                ? address\n                : decodeAddress((address || '').toString());\n            if (decoded.length > 8) {\n                const accountId = api.registry.createType('AccountId', decoded);\n                return api.derive.accounts.idToIndex(accountId).pipe(map((accountIndex) => [accountId, accountIndex]));\n            }\n            const accountIndex = api.registry.createType('AccountIndex', decoded);\n            return api.derive.accounts.indexToId(accountIndex.toString()).pipe(map((accountId) => [accountId, accountIndex]));\n        }\n        catch {\n            return of([undefined, undefined]);\n        }\n    });\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst UNDEF_HEX = { toHex: () => undefined };\nfunction dataAsString(data) {\n    return data.isRaw\n        ? u8aToString(data.asRaw.toU8a(true))\n        : data.isNone\n            ? undefined\n            : data.toHex();\n}\nfunction extractOther(additional) {\n    return additional.reduce((other, [_key, _value]) => {\n        const key = dataAsString(_key);\n        const value = dataAsString(_value);\n        if (key && value) {\n            other[key] = value;\n        }\n        return other;\n    }, {});\n}\nfunction extractIdentity(identityOfOpt, superOf) {\n    if (!identityOfOpt?.isSome) {\n        return { judgements: [] };\n    }\n    const { info, judgements } = identityOfOpt.unwrap();\n    const topDisplay = dataAsString(info.display);\n    return {\n        display: (superOf && dataAsString(superOf[1])) || topDisplay,\n        displayParent: superOf && topDisplay,\n        email: dataAsString(info.email),\n        image: dataAsString(info.image),\n        judgements,\n        legal: dataAsString(info.legal),\n        other: extractOther(info.additional),\n        parent: superOf && superOf[0],\n        pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n        riot: dataAsString(info.riot),\n        twitter: dataAsString(info.twitter),\n        web: dataAsString(info.web)\n    };\n}\nfunction getParent(api, identityOfOpt, superOfOpt) {\n    if (identityOfOpt?.isSome) {\n        // this identity has something set\n        return of([identityOfOpt, undefined]);\n    }\n    else if (superOfOpt?.isSome) {\n        const superOf = superOfOpt.unwrap();\n        return combineLatest([\n            api.derive.accounts._identity(superOf[0]).pipe(map(([info]) => info)),\n            of(superOf)\n        ]);\n    }\n    // nothing of value returned\n    return of([undefined, undefined]);\n}\nexport function _identity(instanceId, api) {\n    return memo(instanceId, (accountId) => accountId && api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf(accountId),\n            api.query.identity.superOf(accountId)\n        ])\n        : of([undefined, undefined]));\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\nexport function identity(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.accounts._identity(accountId).pipe(switchMap(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), map(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));\n}\nexport const hasIdentity = /*#__PURE__*/ firstMemo((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));\nexport function hasIdentityMulti(instanceId, api) {\n    return memo(instanceId, (accountIds) => api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf.multi(accountIds),\n            api.query.identity.superOf.multi(accountIds)\n        ]).pipe(map(([identities, supers]) => identities.map((identityOfOpt, index) => {\n            const superOfOpt = supers[index];\n            const parentId = superOfOpt && superOfOpt.isSome\n                ? superOfOpt.unwrap()[0].toString()\n                : undefined;\n            let display;\n            if (identityOfOpt && identityOfOpt.isSome) {\n                const value = dataAsString(identityOfOpt.unwrap().info.display);\n                if (value && !isHex(value)) {\n                    display = value;\n                }\n            }\n            return { display, hasIdentity: !!(display || parentId), parentId };\n        })))\n        : of(accountIds.map(() => ({ hasIdentity: false }))));\n}\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @name idToIndex\n * @param {( AccountId | string )} accountId - An accounts Id in different formats.\n * @returns Returns the corresponding AccountIndex.\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\n * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {\n *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);\n * });\n * ```\n */\nexport function idToIndex(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.accounts.indexes().pipe(map((indexes) => (indexes || {})[accountId.toString()])));\n}\n", "import { map, of, startWith } from 'rxjs';\nimport { memo } from '../util/index.js';\nlet indicesCache = null;\nfunction queryAccounts(api) {\n    return api.query.indices.accounts.entries().pipe(map((entries) => entries.reduce((indexes, [key, idOpt]) => {\n        if (idOpt.isSome) {\n            indexes[idOpt.unwrap()[0].toString()] = api.registry.createType('AccountIndex', key.args[0]);\n        }\n        return indexes;\n    }, {})));\n}\n/**\n * @name indexes\n * @returns Returns all the indexes on the system.\n * @description This is an unwieldly query since it loops through\n * all of the enumsets and returns all of the values found. This could be up to 32k depending\n * on the number of active accounts in the system\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexes((indexes) => {\n *   console.log('All existing AccountIndexes', indexes);\n * });\n * ```\n */\nexport function indexes(instanceId, api) {\n    return memo(instanceId, () => indicesCache\n        ? of(indicesCache)\n        : (api.query.indices\n            ? queryAccounts(api).pipe(startWith({}))\n            : of({})).pipe(map((indices) => {\n            indicesCache = indices;\n            return indices;\n        })));\n}\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @name indexToId\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\n * @returns Returns the corresponding AccountId.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\n * });\n * ```\n */\nexport function indexToId(instanceId, api) {\n    return memo(instanceId, (accountIndex) => api.query.indices\n        ? api.query.indices.accounts(accountIndex).pipe(map((optResult) => optResult.unwrapOr([])[0]))\n        : of(undefined));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction retrieveNick(api, accountId) {\n    return (accountId && api.query['nicks']?.['nameOf']\n        ? api.query['nicks']['nameOf'](accountId)\n        : of(undefined)).pipe(map((nameOf) => nameOf?.isSome\n        ? u8aToString(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber())\n        : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, (address) => api.derive.accounts.idAndIndex(address).pipe(switchMap(([accountId, accountIndex]) => combineLatest([\n        of({ accountId, accountIndex }),\n        api.derive.accounts.identity(accountId),\n        retrieveNick(api, accountId)\n    ])), map(([{ accountId, accountIndex }, identity, nickname]) => ({\n        accountId, accountIndex, identity, nickname\n    }))));\n}\n", "import { hasProposals as collectiveHasProposals, members as collectiveMembers, prime as collectivePrime, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from '../collective/index.js';\nexport const members = /*#__PURE__*/ collectiveMembers('allianceMotion');\nexport const hasProposals = /*#__PURE__*/ collectiveHasProposals('allianceMotion');\nexport const proposal = /*#__PURE__*/ collectiveProposal('allianceMotion');\nexport const proposalCount = /*#__PURE__*/ collectiveProposalCount('allianceMotion');\nexport const proposalHashes = /*#__PURE__*/ collectiveProposalHashes('allianceMotion');\nexport const proposals = /*#__PURE__*/ collectiveProposals('allianceMotion');\nexport const prime = /*#__PURE__*/ collectivePrime('allianceMotion');\n", "export * from './members.js';\nexport * from './prime.js';\nexport * from './proposals.js';\n", "import { callMethod } from './helpers.js';\nexport const members = /*#__PURE__*/ callMethod('members', []);\n", "import { of } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nexport function getInstance(api, section) {\n    const instances = api.registry.getModuleInstances(api.runtimeVersion.specName, section);\n    const name = instances && instances.length\n        ? instances[0]\n        : section;\n    return api.query[name];\n}\nexport function withSection(section, fn) {\n    return (instanceId, api) => memo(instanceId, fn(getInstance(api, section), api, instanceId));\n}\nexport function callMethod(method, empty) {\n    return (section) => withSection(section, (query) => () => isFunction(query?.[method])\n        ? query[method]()\n        : of(empty));\n}\n", "import { map, of } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { withSection } from './helpers.js';\nexport function prime(section) {\n    return withSection(section, (query) => () => isFunction(query?.prime)\n        ? query.prime().pipe(map((o) => o.unwrapOr(null)))\n        : of(null));\n}\n", "import { catchError, combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { firstObservable } from '../util/index.js';\nimport { callMethod, withSection } from './helpers.js';\nfunction parse(api, [hashes, proposals, votes]) {\n    return proposals.map((o, index) => ({\n        hash: api.registry.createType('Hash', hashes[index]),\n        proposal: o && o.isSome\n            ? o.unwrap()\n            : null,\n        votes: votes[index].unwrapOr(null)\n    }));\n}\nfunction _proposalsFrom(api, query, hashes) {\n    return (isFunction(query?.proposals) && hashes.length\n        ? combineLatest([\n            of(hashes),\n            // this should simply be api.query[section].proposalOf.multi<Option<Proposal>>(hashes),\n            // however we have had cases on Edgeware where the indices have moved around after an\n            // upgrade, which results in invalid on-chain data\n            query.proposalOf.multi(hashes).pipe(catchError(() => of(hashes.map(() => null)))),\n            query.voting.multi(hashes)\n        ])\n        : of([[], [], []])).pipe(map((r) => parse(api, r)));\n}\nexport function hasProposals(section) {\n    return withSection(section, (query) => () => of(isFunction(query?.proposals)));\n}\nexport function proposals(section) {\n    return withSection(section, (query, api) => () => api.derive[section].proposalHashes().pipe(switchMap((all) => _proposalsFrom(api, query, all))));\n}\nexport function proposal(section) {\n    return withSection(section, (query, api) => (hash) => isFunction(query?.proposals)\n        ? firstObservable(_proposalsFrom(api, query, [hash]))\n        : of(null));\n}\nexport const proposalCount = /*#__PURE__*/ callMethod('proposalCount', null);\nexport const proposalHashes = /*#__PURE__*/ callMethod('proposals', []);\n", "export * from './get.js';\nexport * from './getExpanded.js';\nexport * from './listNodes.js';\n", "import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, bnToBn, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getQueryInterface } from './util.js';\nfunction orderBags(ids, bags) {\n    const sorted = ids\n        .map((id, index) => ({\n        bag: bags[index].unwrapOr(null),\n        id,\n        key: id.toString()\n    }))\n        .sort((a, b) => b.id.cmp(a.id));\n    const max = sorted.length - 1;\n    return sorted.map((entry, index) => objectSpread(entry, {\n        bagLower: index === max\n            ? BN_ZERO\n            : sorted[index + 1].id,\n        bagUpper: entry.id,\n        index\n    }));\n}\nexport function _getIds(instanceId, api) {\n    const query = getQueryInterface(api);\n    return memo(instanceId, (_ids) => {\n        const ids = _ids.map((id) => bnToBn(id));\n        return ids.length\n            ? query.listBags.multi(ids).pipe(map((bags) => orderBags(ids, bags)))\n            : of([]);\n    });\n}\nexport function all(instanceId, api) {\n    const query = getQueryInterface(api);\n    return memo(instanceId, () => query.listBags.keys().pipe(switchMap((keys) => api.derive.bagsList._getIds(keys.map(({ args: [id] }) => id))), map((list) => list.filter(({ bag }) => bag))));\n}\nexport function get(instanceId, api) {\n    return memo(instanceId, (id) => api.derive.bagsList._getIds([bnToBn(id)]).pipe(map((bags) => bags[0])));\n}\n", "export function getQueryInterface(api) {\n    return (\n    // latest substrate & polkadot\n    api.query.voterList ||\n        // previous substrate\n        api.query['voterBagsList'] ||\n        api.query['bagsList']);\n}\n", "import { map, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nexport function expand(instanceId, api) {\n    return memo(instanceId, (bag) => api.derive.bagsList.listNodes(bag.bag).pipe(map((nodes) => objectSpread({ nodes }, bag))));\n}\nexport function getExpanded(instanceId, api) {\n    return memo(instanceId, (id) => api.derive.bagsList.get(id).pipe(switchMap((bag) => api.derive.bagsList.expand(bag))));\n}\n", "import { BehaviorSubject, map, of, switchMap, tap, toArray } from 'rxjs';\nimport { nextTick } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getQueryInterface } from './util.js';\nfunction traverseLinks(api, head) {\n    const subject = new BehaviorSubject(head);\n    const query = getQueryInterface(api);\n    return subject.pipe(switchMap((account) => query.listNodes(account)), tap((node) => {\n        nextTick(() => {\n            node.isSome && node.value.next.isSome\n                ? subject.next(node.unwrap().next.unwrap())\n                : subject.complete();\n        });\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map((all) => all.map((o) => o.unwrap())));\n}\nexport function listNodes(instanceId, api) {\n    return memo(instanceId, (bag) => bag && bag.head.isSome\n        ? traverseLinks(api, bag.head.unwrap())\n        : of([]));\n}\n", "import { all } from './all.js';\nexport * from './account.js';\nexport * from './votingBalances.js';\nconst votingBalance = all;\nexport { all, votingBalance };\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { BN, BN_ZERO, bnMax, bnMin, isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nconst VESTING_ID = '0x76657374696e6720';\nfunction calcLocked(api, bestNumber, locks) {\n    let lockedBalance = api.registry.createType('Balance');\n    let lockedBreakdown = [];\n    let vestingLocked = api.registry.createType('Balance');\n    let allLocked = false;\n    if (Array.isArray(locks)) {\n        // only get the locks that are valid until passed the current block\n        lockedBreakdown = locks.filter(({ until }) => !until || (bestNumber && until.gt(bestNumber)));\n        allLocked = lockedBreakdown.some(({ amount }) => amount && amount.isMax());\n        vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(({ id }) => id.eq(VESTING_ID)).reduce((result, { amount }) => result.iadd(amount), new BN(0)));\n        // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699\n        const notAll = lockedBreakdown.filter(({ amount }) => amount && !amount.isMax());\n        if (notAll.length) {\n            lockedBalance = api.registry.createType('Balance', bnMax(...notAll.map(({ amount }) => amount)));\n        }\n    }\n    return { allLocked, lockedBalance, lockedBreakdown, vestingLocked };\n}\nfunction calcShared(api, bestNumber, data, locks) {\n    const { allLocked, lockedBalance, lockedBreakdown, vestingLocked } = calcLocked(api, bestNumber, locks);\n    return objectSpread({}, data, {\n        availableBalance: api.registry.createType('Balance', allLocked ? 0 : bnMax(new BN(0), data?.freeBalance ? data.freeBalance.sub(lockedBalance) : new BN(0))),\n        lockedBalance,\n        lockedBreakdown,\n        vestingLocked\n    });\n}\nfunction calcVesting(bestNumber, shared, _vesting) {\n    // Calculate the vesting balances,\n    //  - offset = balance locked at startingBlock\n    //  - perBlock is the unlock amount\n    const vesting = _vesting || [];\n    const isVesting = !shared.vestingLocked.isZero();\n    const vestedBalances = vesting.map(({ locked, perBlock, startingBlock }) => bestNumber.gt(startingBlock)\n        ? bnMin(locked, perBlock.mul(bestNumber.sub(startingBlock)))\n        : BN_ZERO);\n    const vestedBalance = vestedBalances.reduce((all, value) => all.iadd(value), new BN(0));\n    const vestingTotal = vesting.reduce((all, { locked }) => all.iadd(locked), new BN(0));\n    return {\n        isVesting,\n        vestedBalance,\n        vestedClaimable: isVesting\n            ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance))\n            : BN_ZERO,\n        vesting: vesting\n            .map(({ locked, perBlock, startingBlock }, index) => ({\n            endBlock: locked.div(perBlock).iadd(startingBlock),\n            locked,\n            perBlock,\n            startingBlock,\n            vested: vestedBalances[index]\n        }))\n            .filter(({ locked }) => !locked.isZero()),\n        vestingTotal\n    };\n}\nfunction calcBalances(api, result) {\n    const [data, [vesting, allLocks, namedReserves], bestNumber] = result;\n    const shared = calcShared(api, bestNumber, data, allLocks[0]);\n    return objectSpread(shared, calcVesting(bestNumber, shared, vesting), {\n        accountId: data.accountId,\n        accountNonce: data.accountNonce,\n        additional: allLocks\n            .slice(1)\n            .map((l, index) => calcShared(api, bestNumber, data.additional[index], l)),\n        namedReserves\n    });\n}\nfunction queryOld(api, accountId) {\n    return combineLatest([\n        api.query.balances.locks(accountId),\n        api.query.balances['vesting'](accountId)\n    ]).pipe(map(([locks, optVesting]) => {\n        let vestingNew = null;\n        if (optVesting.isSome) {\n            const { offset: locked, perBlock, startingBlock } = optVesting.unwrap();\n            vestingNew = api.registry.createType('VestingInfo', { locked, perBlock, startingBlock });\n        }\n        return [\n            vestingNew\n                ? [vestingNew]\n                : null,\n            [locks],\n            []\n        ];\n    }));\n}\nconst isNonNullable = (nullable) => !!nullable;\nfunction createCalls(calls) {\n    return [\n        calls.map((c) => !c),\n        calls.filter(isNonNullable)\n    ];\n}\nfunction queryCurrent(api, accountId, balanceInstances = ['balances']) {\n    const [lockEmpty, lockQueries] = createCalls(balanceInstances.map((m) => api.derive[m]?.customLocks || api.query[m]?.locks));\n    const [reserveEmpty, reserveQueries] = createCalls(balanceInstances.map((m) => api.query[m]?.reserves));\n    return combineLatest([\n        api.query.vesting?.vesting\n            ? api.query.vesting.vesting(accountId)\n            : of(api.registry.createType('Option<VestingInfo>')),\n        lockQueries.length\n            ? combineLatest(lockQueries.map((c) => c(accountId)))\n            : of([]),\n        reserveQueries.length\n            ? combineLatest(reserveQueries.map((c) => c(accountId)))\n            : of([])\n    ]).pipe(map(([opt, locks, reserves]) => {\n        let offsetLock = -1;\n        let offsetReserve = -1;\n        const vesting = opt.unwrapOr(null);\n        return [\n            vesting\n                ? Array.isArray(vesting)\n                    ? vesting\n                    : [vesting]\n                : null,\n            lockEmpty.map((e) => e ? api.registry.createType('Vec<BalanceLock>') : locks[++offsetLock]),\n            reserveEmpty.map((e) => e ? api.registry.createType('Vec<PalletBalancesReserveData>') : reserves[++offsetReserve])\n        ];\n    }));\n}\n/**\n * @name all\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\nexport function all(instanceId, api) {\n    const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName, 'balances');\n    return memo(instanceId, (address) => combineLatest([\n        api.derive.balances.account(address),\n        isFunction(api.query.system?.account) || isFunction(api.query.balances?.account)\n            ? queryCurrent(api, address, balanceInstances)\n            : queryOld(api, address)\n    ]).pipe(switchMap(([account, locks]) => combineLatest([\n        of(account),\n        of(locks),\n        api.derive.chain.bestNumber()\n    ])), map((result) => calcBalances(api, result))));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction zeroBalance(api) {\n    return api.registry.createType('Balance');\n}\nfunction getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {\n    const votingBalance = api.registry.createType('Balance', freeBalance.toBn());\n    return {\n        freeBalance,\n        frozenFee,\n        frozenMisc,\n        reservedBalance,\n        votingBalance\n    };\n}\nfunction calcBalances(api, [accountId, [accountNonce, [primary, ...additional]]]) {\n    return objectSpread({\n        accountId,\n        accountNonce,\n        additional: additional.map((b) => getBalance(api, b))\n    }, getBalance(api, primary));\n}\nfunction queryBalancesFree(api, accountId) {\n    return combineLatest([\n        api.query.balances['freeBalance'](accountId),\n        api.query.balances['reservedBalance'](accountId),\n        api.query.system['accountNonce'](accountId)\n    ]).pipe(map(([freeBalance, reservedBalance, accountNonce]) => [\n        accountNonce,\n        [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]\n    ]));\n}\nfunction queryNonceOnly(api, accountId) {\n    const fill = (nonce) => [\n        nonce,\n        [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]\n    ];\n    return isFunction(api.query.system.account)\n        ? api.query.system.account(accountId).pipe(map(({ nonce }) => fill(nonce)))\n        : isFunction(api.query.system['accountNonce'])\n            ? api.query.system['accountNonce'](accountId).pipe(map((nonce) => fill(nonce)))\n            : of(fill(api.registry.createType('Index')));\n}\nfunction queryBalancesAccount(api, accountId, modules = ['balances']) {\n    const balances = modules\n        .map((m) => api.derive[m]?.customAccount || api.query[m]?.account)\n        .filter((q) => isFunction(q));\n    const extract = (nonce, data) => [\n        nonce,\n        data.map(({ feeFrozen, free, miscFrozen, reserved }) => [free, reserved, feeFrozen, miscFrozen])\n    ];\n    // NOTE this is for the first case where we do have instances specified\n    return balances.length\n        ? isFunction(api.query.system.account)\n            ? combineLatest([\n                api.query.system.account(accountId),\n                ...balances.map((c) => c(accountId))\n            ]).pipe(map(([{ nonce }, ...balances]) => extract(nonce, balances)))\n            : combineLatest([\n                api.query.system['accountNonce'](accountId),\n                ...balances.map((c) => c(accountId))\n            ]).pipe(map(([nonce, ...balances]) => extract(nonce, balances)))\n        : queryNonceOnly(api, accountId);\n}\nfunction querySystemAccount(api, accountId) {\n    // AccountInfo is current, support old, eg. Edgeware\n    return api.query.system.account(accountId).pipe(map((infoOrTuple) => {\n        const data = infoOrTuple.nonce\n            ? infoOrTuple.data\n            : infoOrTuple[1];\n        const nonce = infoOrTuple.nonce || infoOrTuple[0];\n        if (!data || data.isEmpty) {\n            return [\n                nonce,\n                [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]\n            ];\n        }\n        const { feeFrozen, free, miscFrozen, reserved } = data;\n        return [\n            nonce,\n            [[free, reserved, feeFrozen, miscFrozen]]\n        ];\n    }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\nexport function account(instanceId, api) {\n    const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName, 'balances');\n    const nonDefaultBalances = balanceInstances && balanceInstances[0] !== 'balances';\n    return memo(instanceId, (address) => api.derive.accounts.accountId(address).pipe(switchMap((accountId) => (accountId\n        ? combineLatest([\n            of(accountId),\n            nonDefaultBalances\n                ? queryBalancesAccount(api, accountId, balanceInstances)\n                : isFunction(api.query.system?.account)\n                    ? querySystemAccount(api, accountId)\n                    : isFunction(api.query.balances?.account)\n                        ? queryBalancesAccount(api, accountId)\n                        : isFunction(api.query.balances?.['freeBalance'])\n                            ? queryBalancesFree(api, accountId)\n                            : queryNonceOnly(api, accountId)\n        ])\n        : of([api.registry.createType('AccountId'), [\n                api.registry.createType('Index'),\n                [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]\n            ]]))), map((result) => calcBalances(api, result))));\n}\n", "import { combineLatest, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function votingBalances(instanceId, api) {\n    return memo(instanceId, (addresses) => !addresses || !addresses.length\n        ? of([])\n        : combineLatest(addresses.map((accountId) => api.derive.balances.account(accountId))));\n}\n", "export * from './bounties.js';\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { filterBountiesProposals } from './helpers/filterBountyProposals.js';\nfunction parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {\n    const bounties = [];\n    maybeBounties.forEach((bounty, index) => {\n        if (bounty.isSome) {\n            bounties.push({\n                bounty: bounty.unwrap(),\n                description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),\n                index: ids[index],\n                proposals: bountyProposals.filter((bountyProposal) => bountyProposal.proposal && ids[index].eq(bountyProposal.proposal.args[0]))\n            });\n        }\n    });\n    return bounties;\n}\nexport function bounties(instanceId, api) {\n    const bountyBase = api.query.bounties || api.query.treasury;\n    return memo(instanceId, () => bountyBase.bounties\n        ? combineLatest([\n            bountyBase.bountyCount(),\n            api.query.council\n                ? api.query.council.proposalCount()\n                : of(0)\n        ]).pipe(switchMap(() => combineLatest([\n            bountyBase.bounties.keys(),\n            api.derive.council\n                ? api.derive.council.proposals()\n                : of([])\n        ])), switchMap(([keys, proposals]) => {\n            const ids = keys.map(({ args: [id] }) => id);\n            return combineLatest([\n                bountyBase.bounties.multi(ids),\n                bountyBase.bountyDescriptions.multi(ids),\n                of(ids),\n                of(filterBountiesProposals(api, proposals))\n            ]);\n        }), map(parseResult))\n        : of(parseResult([[], [], [], []])));\n}\n", "export function filterBountiesProposals(api, allProposals) {\n    const bountyTxBase = api.tx.bounties ? api.tx.bounties : api.tx.treasury;\n    const bountyProposalCalls = [bountyTxBase.approveBounty, bountyTxBase.closeBounty, bountyTxBase.proposeCurator, bountyTxBase.unassignCurator];\n    return allProposals.filter((proposal) => bountyProposalCalls.find((bountyCall) => proposal.proposal && bountyCall.is(proposal.proposal)));\n}\n", "export * from './bestNumber.js';\nexport * from './bestNumberFinalized.js';\nexport * from './bestNumberLag.js';\nexport * from './getBlock.js';\nexport * from './getBlockByNumber.js';\nexport * from './getHeader.js';\nexport * from './subscribeFinalizedHeads.js';\nexport * from './subscribeNewBlocks.js';\nexport * from './subscribeNewHeads.js';\n", "import { createBlockNumberDerive } from './util.js';\n/**\n * @name bestNumber\n * @returns The latest block number.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumber((blockNumber) => {\n *   console.log(`the current best block is #${blockNumber}`);\n * });\n * ```\n */\nexport const bestNumber = /*#__PURE__*/ createBlockNumberDerive((api) => api.rpc.chain.subscribeNewHeads());\n", "import { combineLatest, map, mergeMap, of, switchMap } from 'rxjs';\nimport { memo, unwrapBlockNumber } from '../util/index.js';\nexport function createBlockNumberDerive(fn) {\n    return (instanceId, api) => memo(instanceId, () => fn(api).pipe(map(unwrapBlockNumber)));\n}\n/** @internal */\nfunction getAuthorDetailsWithAt(header, queryAt) {\n    const validators = queryAt.session?.validators\n        ? queryAt.session.validators()\n        : of(null);\n    // nimbus consensus stores the session key of the block author in header logs\n    const { logs: [log] } = header.digest;\n    const loggedAuthor = (log && ((log.isConsensus && log.asConsensus[0].isNimbus && log.asConsensus[1]) ||\n        (log.isPreRuntime && log.asPreRuntime[0].isNimbus && log.asPreRuntime[1])));\n    if (loggedAuthor) {\n        // use the author mapping pallet, if available (ie: moonbeam, moonriver), to map session (nimbus) key to author (collator/validator) key\n        if (queryAt['authorMapping']?.['mappingWithDeposit']) {\n            return combineLatest([\n                of(header),\n                validators,\n                queryAt['authorMapping']['mappingWithDeposit'](loggedAuthor).pipe(map((o) => o.unwrapOr({ account: null }).account))\n            ]);\n        }\n        // fall back to session and parachain staking pallets, if available (ie: manta, calamari), to map session (nimbus) key to author (collator) key\n        if (queryAt['parachainStaking']?.['selectedCandidates'] && queryAt.session?.nextKeys) {\n            const loggedHex = loggedAuthor.toHex();\n            return combineLatest([\n                of(header),\n                validators,\n                queryAt['parachainStaking']['selectedCandidates']().pipe(mergeMap((selectedCandidates) => combineLatest([\n                    of(selectedCandidates),\n                    queryAt.session.nextKeys.multi(selectedCandidates).pipe(map((nextKeys) => nextKeys.findIndex((o) => o.unwrapOrDefault().nimbus.toHex() === loggedHex)))\n                ])), map(([selectedCandidates, index]) => index === -1\n                    ? null\n                    : selectedCandidates[index]))\n            ]);\n        }\n    }\n    // normal operation, non-mapping\n    return combineLatest([\n        of(header),\n        validators,\n        of(null)\n    ]);\n}\nexport function getAuthorDetails(api, header, blockHash) {\n    // For on-chain state, we need to retrieve it as per the start\n    // of the block being constructed, i.e. session validators would\n    // be at the point of the block construction, not when all operations\n    // has been supplied.\n    //\n    // However for the first block (no parentHash available), we would\n    // just use the as-is\n    return api.queryAt(header.parentHash.isEmpty\n        ? blockHash || header.hash\n        : header.parentHash).pipe(switchMap((queryAt) => getAuthorDetailsWithAt(header, queryAt)));\n}\n", "import { createBlockNumberDerive } from './util.js';\n/**\n * @name bestNumberFinalized\n * @returns A BlockNumber\n * @description Get the latest finalized block number.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberFinalized((blockNumber) => {\n *   console.log(`the current finalized block is #${blockNumber}`);\n * });\n * ```\n */\nexport const bestNumberFinalized = /*#__PURE__*/ createBlockNumberDerive((api) => api.rpc.chain.subscribeFinalizedHeads());\n", "import { combineLatest, map } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @name bestNumberLag\n * @returns A number of blocks\n * @description Calculates the lag between finalized head and best head\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberLag((lag) => {\n *   console.log(`finalized is ${lag} blocks behind head`);\n * });\n * ```\n */\nexport function bestNumberLag(instanceId, api) {\n    return memo(instanceId, () => combineLatest([\n        api.derive.chain.bestNumber(),\n        api.derive.chain.bestNumberFinalized()\n    ]).pipe(map(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { createSignedBlockExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getBlock\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, block } = await api.derive.chain.getBlock('0x123...456');\n *\n * console.log(`block #${block.header.number} was authored by ${author}`);\n * ```\n */\nexport function getBlock(instanceId, api) {\n    return memo(instanceId, (blockHash) => combineLatest([\n        api.rpc.chain.getBlock(blockHash),\n        api.queryAt(blockHash)\n    ]).pipe(switchMap(([signedBlock, queryAt]) => combineLatest([\n        of(signedBlock),\n        queryAt.system.events(),\n        getAuthorDetails(api, signedBlock.block.header, blockHash)\n    ])), map(([signedBlock, events, [, validators, author]]) => createSignedBlockExtended(events.registry, signedBlock, events, validators, author))));\n}\n", "export { createHeaderExtended } from './HeaderExtended.js';\nexport { createSignedBlockExtended } from './SignedBlockExtended.js';\n", "import { extractAuthor } from './util.js';\nexport function createHeaderExtended(registry, header, validators, author) {\n    // an instance of the base extrinsic for us to extend\n    const HeaderBase = registry.createClass('Header');\n    class Implementation extends HeaderBase {\n        constructor(registry, header, validators, author) {\n            super(registry, header);\n            this.__internal__author = author || extractAuthor(this.digest, validators || []);\n            this.createdAtHash = header?.createdAtHash;\n        }\n        /**\n         * @description Convenience method, returns the author for the block\n         */\n        get author() {\n            return this.__internal__author;\n        }\n    }\n    return new Implementation(registry, header, validators, author);\n}\n", "export function extractAuthor(digest, sessionValidators) {\n    const [citem] = digest.logs.filter((e) => e.isConsensus);\n    const [pitem] = digest.logs.filter((e) => e.isPreRuntime);\n    const [sitem] = digest.logs.filter((e) => e.isSeal);\n    let accountId;\n    try {\n        // This is critical to be first for BABE (before Consensus)\n        // If not first, we end up dropping the author at session-end\n        if (pitem) {\n            const [engine, data] = pitem.asPreRuntime;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n        if (!accountId && citem) {\n            const [engine, data] = citem.asConsensus;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n        // SEAL, still used in e.g. Kulupu for pow\n        if (!accountId && sitem) {\n            const [engine, data] = sitem.asSeal;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n    }\n    catch {\n        // ignore\n    }\n    return accountId;\n}\n", "import { extractAuthor } from './util.js';\nfunction mapExtrinsics(extrinsics, records) {\n    return extrinsics.map((extrinsic, index) => {\n        let dispatchError;\n        let dispatchInfo;\n        const events = records\n            .filter(({ phase }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index))\n            .map(({ event }) => {\n            if (event.section === 'system') {\n                if (event.method === 'ExtrinsicSuccess') {\n                    dispatchInfo = event.data[0];\n                }\n                else if (event.method === 'ExtrinsicFailed') {\n                    dispatchError = event.data[0];\n                    dispatchInfo = event.data[1];\n                }\n            }\n            return event;\n        });\n        return { dispatchError, dispatchInfo, events, extrinsic };\n    });\n}\nexport function createSignedBlockExtended(registry, block, events, validators, author) {\n    // an instance of the base extrinsic for us to extend\n    const SignedBlockBase = registry.createClass('SignedBlock');\n    class Implementation extends SignedBlockBase {\n        constructor(registry, block, events, validators, author) {\n            super(registry, block);\n            this.__internal__author = author || extractAuthor(this.block.header.digest, validators || []);\n            this.__internal__events = events || [];\n            this.__internal__extrinsics = mapExtrinsics(this.block.extrinsics, this.__internal__events);\n            this.createdAtHash = block?.createdAtHash;\n        }\n        /**\n         * @description Convenience method, returns the author for the block\n         */\n        get author() {\n            return this.__internal__author;\n        }\n        /**\n         * @description Convenience method, returns the events associated with the block\n         */\n        get events() {\n            return this.__internal__events;\n        }\n        /**\n         * @description Returns the extrinsics and their events, mapped\n         */\n        get extrinsics() {\n            return this.__internal__extrinsics;\n        }\n    }\n    return new Implementation(registry, block, events, validators, author);\n}\n", "import { switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function getBlockByNumber(instanceId, api) {\n    return memo(instanceId, (blockNumber) => api.rpc.chain.getBlockHash(blockNumber).pipe(switchMap((h) => api.derive.chain.getBlock(h))));\n}\n", "import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getHeader\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @returns An array containing the block header and the block author\n * @description Get a specific block header and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, number } = await api.derive.chain.getHeader('0x123...456');\n *\n * console.log(`block #${number} was authored by ${author}`);\n * ```\n */\nexport function getHeader(instanceId, api) {\n    return memo(instanceId, (blockHash) => api.rpc.chain.getHeader(blockHash).pipe(switchMap((header) => getAuthorDetails(api, header, blockHash)), map(([header, validators, author]) => createHeaderExtended((validators || header).registry, header, validators, author))));\n}\n", "import { from, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * Returns a header range from startHash to to (not including) endHash, i.e. lastBlock.parentHash === endHash\n */\nexport function _getHeaderRange(instanceId, api) {\n    return memo(instanceId, (startHash, endHash, prev = []) => api.rpc.chain.getHeader(startHash).pipe(switchMap((header) => header.parentHash.eq(endHash)\n        ? of([header, ...prev])\n        : api.derive.chain._getHeaderRange(header.parentHash, endHash, [header, ...prev]))));\n}\n/**\n * @name subscribeFinalizedHeads\n * @description An observable of the finalized block headers. Unlike the base\n * chain.subscribeFinalizedHeads this does not skip any headers. Since finalization\n * may skip specific blocks (finalization happens in terms of chains), this version\n * of the derive tracks missing headers (since last  retrieved) and provides them\n * to the caller\n */\nexport function subscribeFinalizedHeads(instanceId, api) {\n    return memo(instanceId, () => {\n        let prevHash = null;\n        return api.rpc.chain.subscribeFinalizedHeads().pipe(switchMap((header) => {\n            const endHash = prevHash;\n            const startHash = header.parentHash;\n            prevHash = header.createdAtHash = header.hash;\n            return endHash === null || startHash.eq(endHash)\n                ? of(header)\n                : api.derive.chain._getHeaderRange(startHash, endHash, [header]).pipe(switchMap((headers) => from(headers)));\n        }));\n    });\n}\n", "import { switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\nexport function subscribeNewBlocks(instanceId, api) {\n    return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap((header) => api.derive.chain.getBlock(header.createdAtHash || header.hash))));\n}\n", "import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\nexport function subscribeNewHeads(instanceId, api) {\n    return memo(instanceId, () => api.rpc.chain.subscribeNewHeads().pipe(switchMap((header) => getAuthorDetails(api, header)), map(([header, validators, author]) => {\n        header.createdAtHash = header.hash;\n        return createHeaderExtended(header.registry, header, validators, author);\n    })));\n}\n", "export * from './fees.js';\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction queryConstants(api) {\n    return of([\n        // deprecated\n        api.consts.contracts['callBaseFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['contractFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['creationFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['transactionBaseFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['transactionByteFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['transferFee'] || api.registry.createType('Balance'),\n        // current\n        api.consts.contracts['rentByteFee'] || api.registry.createType('Balance'),\n        api.consts.contracts['rentDepositOffset'] || api.registry.createType('Balance'),\n        api.consts.contracts['surchargeReward'] || api.registry.createType('Balance'),\n        api.consts.contracts['tombstoneDeposit'] || api.registry.createType('Balance')\n    ]);\n}\n/**\n * @name fees\n * @returns An object containing the combined results of the queries for\n * all relevant contract fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.contracts.fees(([creationFee, transferFee]) => {\n *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);\n * });\n * ```\n */\nexport function fees(instanceId, api) {\n    return memo(instanceId, () => {\n        return queryConstants(api).pipe(map(([callBaseFee, contractFee, creationFee, transactionBaseFee, transactionByteFee, transferFee, rentByteFee, rentDepositOffset, surchargeReward, tombstoneDeposit]) => ({\n            callBaseFee,\n            contractFee,\n            creationFee,\n            rentByteFee,\n            rentDepositOffset,\n            surchargeReward,\n            tombstoneDeposit,\n            transactionBaseFee,\n            transactionByteFee,\n            transferFee\n        })));\n    });\n}\n", "import { hasProposals as collectiveHasProposals, members as collectiveMembers, prime as collectivePrime, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from '../collective/index.js';\nexport * from './votes.js';\nexport * from './votesOf.js';\nexport const members = /*#__PURE__*/ collectiveMembers('council');\nexport const hasProposals = /*#__PURE__*/ collectiveHasProposals('council');\nexport const proposal = /*#__PURE__*/ collectiveProposal('council');\nexport const proposalCount = /*#__PURE__*/ collectiveProposalCount('council');\nexport const proposalHashes = /*#__PURE__*/ collectiveProposalHashes('council');\nexport const proposals = /*#__PURE__*/ collectiveProposals('council');\nexport const prime = /*#__PURE__*/ collectivePrime('council');\n", "import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction isVoter(value) {\n    return !Array.isArray(value);\n}\nfunction retrieveStakeOf(elections) {\n    return elections['stakeOf'].entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, stake]) => [accountId, stake])));\n}\nfunction retrieveVoteOf(elections) {\n    return elections['votesOf'].entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, votes]) => [accountId, votes])));\n}\nfunction retrievePrev(api, elections) {\n    return combineLatest([\n        retrieveStakeOf(elections),\n        retrieveVoteOf(elections)\n    ]).pipe(map(([stakes, votes]) => {\n        const result = [];\n        votes.forEach(([voter, votes]) => {\n            result.push([voter, { stake: api.registry.createType('Balance'), votes }]);\n        });\n        stakes.forEach(([staker, stake]) => {\n            const entry = result.find(([voter]) => voter.eq(staker));\n            if (entry) {\n                entry[1].stake = stake;\n            }\n            else {\n                result.push([staker, { stake, votes: [] }]);\n            }\n        });\n        return result;\n    }));\n}\nfunction retrieveCurrent(elections) {\n    return elections.voting.entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, value]) => [\n        accountId,\n        isVoter(value)\n            ? { stake: value.stake, votes: value.votes }\n            : { stake: value[0], votes: value[1] }\n    ])));\n}\nexport function votes(instanceId, api) {\n    const elections = api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'];\n    return memo(instanceId, () => elections\n        ? elections['stakeOf']\n            ? retrievePrev(api, elections)\n            : retrieveCurrent(elections)\n        : of([]));\n}\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function votesOf(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.council.votes().pipe(map((votes) => (votes.find(([from]) => from.eq(accountId)) ||\n        [null, { stake: api.registry.createType('Balance'), votes: [] }])[1])));\n}\n", "export * from './childKey.js';\nexport * from './contributions.js';\nexport * from './ownContributions.js';\n", "import { map } from 'rxjs';\nimport { u8aConcat, u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { memo } from '../util/index.js';\nfunction createChildKey(info) {\n    return u8aToHex(u8aConcat(':child_storage:default:', blake2AsU8a(u8aConcat('crowdloan', (info.fundIndex || info.trieIndex).toU8a()))));\n}\nexport function childKey(instanceId, api) {\n    return memo(instanceId, (paraId) => api.query['crowdloan']['funds'](paraId).pipe(map((optInfo) => optInfo.isSome\n        ? createChildKey(optInfo.unwrap())\n        : null)));\n}\n", "import { BehaviorSubject, combineLatest, EMPTY, map, of, startWith, switchMap, tap, toArray } from 'rxjs';\nimport { arrayFlatten, isFunction, nextTick } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { extractContributed } from './util.js';\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\nfunction _getUpdates(api, paraId) {\n    let added = [];\n    let removed = [];\n    return api.query.system.events().pipe(switchMap((events) => {\n        const changes = extractContributed(paraId, events);\n        if (changes.added.length || changes.removed.length) {\n            added = added.concat(...changes.added);\n            removed = removed.concat(...changes.removed);\n            return of({ added, addedDelta: changes.added, blockHash: events.createdAtHash?.toHex() || '-', removed, removedDelta: changes.removed });\n        }\n        return EMPTY;\n    }), startWith({ added, addedDelta: [], blockHash: '-', removed, removedDelta: [] }));\n}\nfunction _eventTriggerAll(api, paraId) {\n    return api.query.system.events().pipe(switchMap((events) => {\n        const items = events.filter(({ event: { data: [eventParaId], method, section } }) => section === 'crowdloan' &&\n            ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) &&\n            eventParaId.eq(paraId));\n        return items.length\n            ? of(events.createdAtHash?.toHex() || '-')\n            : EMPTY;\n    }), startWith('-'));\n}\nfunction _getKeysPaged(api, childKey) {\n    const subject = new BehaviorSubject(undefined);\n    return subject.pipe(switchMap((startKey) => api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey)), tap((keys) => {\n        nextTick(() => {\n            keys.length === PAGE_SIZE_K\n                ? subject.next(keys[PAGE_SIZE_K - 1].toHex())\n                : subject.complete();\n        });\n    }), toArray(), // toArray since we want to startSubject to be completed\n    map((keyArr) => arrayFlatten(keyArr)));\n}\nfunction _getAll(api, paraId, childKey) {\n    return _eventTriggerAll(api, paraId).pipe(switchMap(() => isFunction(api.rpc.childstate.getKeysPaged)\n        ? _getKeysPaged(api, childKey)\n        : api.rpc.childstate.getKeys(childKey, '0x')), map((keys) => keys.map((k) => k.toHex())));\n}\nfunction _contributions(api, paraId, childKey) {\n    return combineLatest([\n        _getAll(api, paraId, childKey),\n        _getUpdates(api, paraId)\n    ]).pipe(map(([keys, { added, blockHash, removed }]) => {\n        const contributorsMap = {};\n        keys.forEach((k) => {\n            contributorsMap[k] = true;\n        });\n        added.forEach((k) => {\n            contributorsMap[k] = true;\n        });\n        removed.forEach((k) => {\n            delete contributorsMap[k];\n        });\n        return {\n            blockHash,\n            contributorsHex: Object.keys(contributorsMap)\n        };\n    }));\n}\nexport function contributions(instanceId, api) {\n    return memo(instanceId, (paraId) => api.derive.crowdloan.childKey(paraId).pipe(switchMap((childKey) => childKey\n        ? _contributions(api, paraId, childKey)\n        : of({ blockHash: '-', contributorsHex: [] }))));\n}\n", "export function extractContributed(paraId, events) {\n    const added = [];\n    const removed = [];\n    return events\n        .filter(({ event: { data: [, eventParaId], method, section } }) => section === 'crowdloan' &&\n        ['Contributed', 'Withdrew'].includes(method) &&\n        eventParaId.eq(paraId))\n        .reduce((result, { event: { data: [accountId], method } }) => {\n        if (method === 'Contributed') {\n            result.added.push(accountId.toHex());\n        }\n        else {\n            result.removed.push(accountId.toHex());\n        }\n        return result;\n    }, { added, blockHash: events.createdAtHash?.toHex() || '-', removed });\n}\n", "import { combineLatest, EMPTY, map, of, startWith, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { extractContributed } from './util.js';\nfunction _getValues(api, childKey, keys) {\n    // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203\n    return combineLatest(keys.map((k) => api.rpc.childstate.getStorage(childKey, k))).pipe(map((values) => values\n        .map((v) => api.registry.createType('Option<StorageData>', v))\n        .map((o) => o.isSome\n        ? api.registry.createType('Balance', o.unwrap())\n        : api.registry.createType('Balance'))\n        .reduce((all, b, index) => objectSpread(all, { [keys[index]]: b }), {})));\n}\nfunction _watchOwnChanges(api, paraId, childkey, keys) {\n    return api.query.system.events().pipe(switchMap((events) => {\n        const changes = extractContributed(paraId, events);\n        const filtered = keys.filter((k) => changes.added.includes(k) ||\n            changes.removed.includes(k));\n        return filtered.length\n            ? _getValues(api, childkey, filtered)\n            : EMPTY;\n    }), startWith({}));\n}\nfunction _contributions(api, paraId, childKey, keys) {\n    return combineLatest([\n        _getValues(api, childKey, keys),\n        _watchOwnChanges(api, paraId, childKey, keys)\n    ]).pipe(map(([all, latest]) => objectSpread({}, all, latest)));\n}\nexport function ownContributions(instanceId, api) {\n    return memo(instanceId, (paraId, keys) => api.derive.crowdloan.childKey(paraId).pipe(switchMap((childKey) => childKey && keys.length\n        ? _contributions(api, paraId, childKey, keys)\n        : of({}))));\n}\n", "export * from './dispatchQueue.js';\nexport * from './locks.js';\nexport * from './nextExternal.js';\nexport * from './preimages.js';\nexport * from './proposals.js';\nexport * from './referendumIds.js';\nexport * from './referendums.js';\nexport * from './referendumsActive.js';\nexport * from './referendumsFinished.js';\nexport * from './referendumsInfo.js';\nexport * from './sqrtElectorate.js';\n", "import { catchError, combineLatest, map, of, switchMap } from 'rxjs';\nimport { Enum } from '@polkadot/types';\nimport { isFunction, objectSpread, stringToHex } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nconst DEMOCRACY_ID = stringToHex('democrac');\nfunction isMaybeHashedOrBounded(call) {\n    // check for enum\n    return call instanceof Enum;\n}\nfunction isBounded(call) {\n    // check for type\n    return call.isInline || call.isLegacy || call.isLookup;\n}\nfunction queryQueue(api) {\n    return api.query.democracy['dispatchQueue']().pipe(switchMap((dispatches) => combineLatest([\n        of(dispatches),\n        api.derive.democracy.preimages(dispatches.map(([, hash]) => hash))\n    ])), map(([dispatches, images]) => dispatches.map(([at, imageHash, index], dispatchIndex) => ({\n        at,\n        image: images[dispatchIndex],\n        imageHash: getImageHashBounded(imageHash),\n        index\n    }))));\n}\nfunction schedulerEntries(api) {\n    // We don't get entries, but rather we get the keys (triggered via finished referendums) and\n    // the subscribe to those keys - this means we pickup when the schedulers actually executes\n    // at a block, the entry for that block will become empty\n    return api.derive.democracy.referendumsFinished().pipe(switchMap(() => api.query.scheduler.agenda.keys()), switchMap((keys) => {\n        const blockNumbers = keys.map(({ args: [blockNumber] }) => blockNumber);\n        return blockNumbers.length\n            ? combineLatest([\n                of(blockNumbers),\n                // this should simply be api.query.scheduler.agenda.multi,\n                // however we have had cases on Darwinia where the indices have moved around after an\n                // upgrade, which results in invalid on-chain data\n                api.query.scheduler.agenda.multi(blockNumbers).pipe(catchError(() => of(blockNumbers.map(() => []))))\n            ])\n            : of([[], []]);\n    }));\n}\nfunction queryScheduler(api) {\n    return schedulerEntries(api).pipe(switchMap(([blockNumbers, agendas]) => {\n        const result = [];\n        blockNumbers.forEach((at, index) => {\n            (agendas[index] || []).filter((o) => o.isSome).forEach((o) => {\n                const scheduled = o.unwrap();\n                if (scheduled.maybeId.isSome) {\n                    const id = scheduled.maybeId.unwrap().toHex();\n                    if (id.startsWith(DEMOCRACY_ID)) {\n                        const imageHash = isMaybeHashedOrBounded(scheduled.call)\n                            ? isBounded(scheduled.call)\n                                ? getImageHashBounded(scheduled.call)\n                                : scheduled.call.isHash\n                                    ? scheduled.call.asHash.toHex()\n                                    : scheduled.call.asValue.args[0].toHex()\n                            : scheduled.call.args[0].toHex();\n                        result.push({ at, imageHash, index: api.registry.createType('(u64, ReferendumIndex)', id)[1] });\n                    }\n                }\n            });\n        });\n        return combineLatest([\n            of(result),\n            result.length\n                ? api.derive.democracy.preimages(result.map(({ imageHash }) => imageHash))\n                : of([])\n        ]);\n    }), map(([infos, images]) => infos.map((info, index) => objectSpread({ image: images[index] }, info))));\n}\nexport function dispatchQueue(instanceId, api) {\n    return memo(instanceId, () => isFunction(api.query.scheduler?.agenda)\n        ? queryScheduler(api)\n        : api.query.democracy['dispatchQueue']\n            ? queryQueue(api)\n            : of([]));\n}\n", "import { BN, bnSqrt, isHex, isString, isU8a, objectSpread, stringToHex, u8aToHex } from '@polkadot/util';\nfunction isOldInfo(info) {\n    return !!info.proposalHash;\n}\nfunction isCurrentStatus(status) {\n    return !!status.tally;\n}\nexport function compareRationals(n1, d1, n2, d2) {\n    while (true) {\n        const q1 = n1.div(d1);\n        const q2 = n2.div(d2);\n        if (q1.lt(q2)) {\n            return true;\n        }\n        else if (q2.lt(q1)) {\n            return false;\n        }\n        const r1 = n1.mod(d1);\n        const r2 = n2.mod(d2);\n        if (r2.isZero()) {\n            return false;\n        }\n        else if (r1.isZero()) {\n            return true;\n        }\n        n1 = d2;\n        n2 = d1;\n        d1 = r2;\n        d2 = r1;\n    }\n}\nfunction calcPassingOther(threshold, sqrtElectorate, { votedAye, votedNay, votedTotal }) {\n    const sqrtVoters = bnSqrt(votedTotal);\n    return sqrtVoters.isZero()\n        ? false\n        : threshold.isSuperMajorityApprove\n            ? compareRationals(votedNay, sqrtVoters, votedAye, sqrtElectorate)\n            : compareRationals(votedNay, sqrtElectorate, votedAye, sqrtVoters);\n}\nexport function calcPassing(threshold, sqrtElectorate, state) {\n    return threshold.isSimpleMajority\n        ? state.votedAye.gt(state.votedNay)\n        : calcPassingOther(threshold, sqrtElectorate, state);\n}\nfunction calcVotesPrev(votesFor) {\n    return votesFor.reduce((state, derived) => {\n        const { balance, vote } = derived;\n        const isDefault = vote.conviction.index === 0;\n        const counted = balance\n            .muln(isDefault ? 1 : vote.conviction.index)\n            .divn(isDefault ? 10 : 1);\n        if (vote.isAye) {\n            state.allAye.push(derived);\n            state.voteCountAye++;\n            state.votedAye.iadd(counted);\n        }\n        else {\n            state.allNay.push(derived);\n            state.voteCountNay++;\n            state.votedNay.iadd(counted);\n        }\n        state.voteCount++;\n        state.votedTotal.iadd(counted);\n        return state;\n    }, { allAye: [], allNay: [], voteCount: 0, voteCountAye: 0, voteCountNay: 0, votedAye: new BN(0), votedNay: new BN(0), votedTotal: new BN(0) });\n}\nfunction calcVotesCurrent(tally, votes) {\n    const allAye = [];\n    const allNay = [];\n    votes.forEach((derived) => {\n        if (derived.vote.isAye) {\n            allAye.push(derived);\n        }\n        else {\n            allNay.push(derived);\n        }\n    });\n    return {\n        allAye,\n        allNay,\n        voteCount: allAye.length + allNay.length,\n        voteCountAye: allAye.length,\n        voteCountNay: allNay.length,\n        votedAye: tally.ayes,\n        votedNay: tally.nays,\n        votedTotal: tally.turnout\n    };\n}\nexport function calcVotes(sqrtElectorate, referendum, votes) {\n    const state = isCurrentStatus(referendum.status)\n        ? calcVotesCurrent(referendum.status.tally, votes)\n        : calcVotesPrev(votes);\n    return objectSpread({}, state, {\n        isPassing: calcPassing(referendum.status.threshold, sqrtElectorate, state),\n        votes\n    });\n}\nexport function getStatus(info) {\n    if (info.isNone) {\n        return null;\n    }\n    const unwrapped = info.unwrap();\n    return isOldInfo(unwrapped)\n        ? unwrapped\n        : unwrapped.isOngoing\n            ? unwrapped.asOngoing\n            // done, we don't include it here... only currently active\n            : null;\n}\nexport function getImageHashBounded(hash) {\n    return hash.isLegacy\n        ? hash.asLegacy.hash_.toHex()\n        : hash.isLookup\n            ? hash.asLookup.hash_.toHex()\n            // for inline, use the actual Bytes hash\n            : hash.isInline\n                ? hash.asInline.hash.toHex()\n                : isString(hash)\n                    ? isHex(hash)\n                        ? hash\n                        : stringToHex(hash)\n                    : isU8a(hash)\n                        ? u8aToHex(hash)\n                        : hash.toHex();\n}\nexport function getImageHash(status) {\n    return getImageHashBounded(status.proposal ||\n        status.proposalHash);\n}\n", "import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isUndefined } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nconst LOCKUPS = [0, 1, 2, 4, 8, 16, 32];\nfunction parseEnd(api, vote, { approved, end }) {\n    return [\n        end,\n        (approved.isTrue && vote.isAye) || (approved.isFalse && vote.isNay)\n            ? end.add((api.consts.democracy.voteLockingPeriod ||\n                api.consts.democracy.enactmentPeriod).muln(LOCKUPS[vote.conviction.index]))\n            : BN_ZERO\n    ];\n}\nfunction parseLock(api, [referendumId, accountVote], referendum) {\n    const { balance, vote } = accountVote.asStandard;\n    const [referendumEnd, unlockAt] = referendum.isFinished\n        ? parseEnd(api, vote, referendum.asFinished)\n        : [BN_ZERO, BN_ZERO];\n    return { balance, isDelegated: false, isFinished: referendum.isFinished, referendumEnd, referendumId, unlockAt, vote };\n}\nfunction delegateLocks(api, { balance, conviction, target }) {\n    return api.derive.democracy.locks(target).pipe(map((available) => available.map(({ isFinished, referendumEnd, referendumId, unlockAt, vote }) => ({\n        balance,\n        isDelegated: true,\n        isFinished,\n        referendumEnd,\n        referendumId,\n        unlockAt: unlockAt.isZero()\n            ? unlockAt\n            : referendumEnd.add((api.consts.democracy.voteLockingPeriod ||\n                api.consts.democracy.enactmentPeriod).muln(LOCKUPS[conviction.index])),\n        vote: api.registry.createType('Vote', { aye: vote.isAye, conviction })\n    }))));\n}\nfunction directLocks(api, { votes }) {\n    if (!votes.length) {\n        return of([]);\n    }\n    return api.query.democracy.referendumInfoOf.multi(votes.map(([referendumId]) => referendumId)).pipe(map((referendums) => votes\n        .map((vote, index) => [vote, referendums[index].unwrapOr(null)])\n        .filter((item) => !!item[1] && isUndefined(item[1].end) && item[0][1].isStandard)\n        .map(([directVote, referendum]) => parseLock(api, directVote, referendum))));\n}\nexport function locks(instanceId, api) {\n    return memo(instanceId, (accountId) => api.query.democracy.votingOf\n        ? api.query.democracy.votingOf(accountId).pipe(switchMap((voting) => voting.isDirect\n            ? directLocks(api, voting.asDirect)\n            : voting.isDelegating\n                ? delegateLocks(api, voting.asDelegating)\n                : of([])))\n        : of([]));\n}\n", "import { map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction withImage(api, nextOpt) {\n    if (nextOpt.isNone) {\n        return of(null);\n    }\n    const [hash, threshold] = nextOpt.unwrap();\n    return api.derive.democracy.preimage(hash).pipe(map((image) => ({\n        image,\n        imageHash: getImageHashBounded(hash),\n        threshold\n    })));\n}\nexport function nextExternal(instanceId, api) {\n    return memo(instanceId, () => api.query.democracy?.nextExternal\n        ? api.query.democracy.nextExternal().pipe(switchMap((nextOpt) => withImage(api, nextOpt)))\n        : of(null));\n}\n", "import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isFunction } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isDemocracyPreimage(api, imageOpt) {\n    return !!imageOpt && !api.query.democracy['dispatchQueue'];\n}\nfunction constructProposal(api, [bytes, proposer, balance, at]) {\n    let proposal;\n    try {\n        proposal = api.registry.createType('Call', bytes.toU8a(true));\n    }\n    catch (error) {\n        console.error(error);\n    }\n    return { at, balance, proposal, proposer };\n}\nfunction parseDemocracy(api, imageOpt) {\n    if (imageOpt.isNone) {\n        return;\n    }\n    if (isDemocracyPreimage(api, imageOpt)) {\n        const status = imageOpt.unwrap();\n        if (status.isMissing) {\n            return;\n        }\n        const { data, deposit, provider, since } = status.asAvailable;\n        return constructProposal(api, [data, provider, deposit, since]);\n    }\n    return constructProposal(api, imageOpt.unwrap());\n}\nfunction parseImage(api, [proposalHash, status, bytes]) {\n    if (!status) {\n        return undefined;\n    }\n    const [proposer, balance] = status.isUnrequested\n        ? status.asUnrequested.deposit\n        : status.asRequested.deposit.unwrapOrDefault();\n    let proposal;\n    if (bytes) {\n        try {\n            proposal = api.registry.createType('Call', bytes.toU8a(true));\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    return { at: BN_ZERO, balance, proposal, proposalHash, proposer };\n}\nfunction getDemocracyImages(api, bounded) {\n    const hashes = bounded.map((b) => getImageHashBounded(b));\n    return api.query.democracy['preimages'].multi(hashes).pipe(map((images) => images.map((imageOpt) => parseDemocracy(api, imageOpt))));\n}\nfunction getImages(api, bounded) {\n    const hashes = bounded.map((b) => getImageHashBounded(b));\n    const bytesType = api.registry.lookup.getTypeDef(api.query.preimage.preimageFor.creator.meta.type.asMap.key).type;\n    return api.query.preimage.statusFor.multi(hashes).pipe(switchMap((optStatus) => {\n        const statuses = optStatus.map((o) => o.unwrapOr(null));\n        const keys = statuses\n            .map((s, i) => s\n            ? bytesType === 'H256'\n                // first generation\n                ? hashes[i]\n                // current generation (H256,u32)\n                : s.isRequested\n                    ? [hashes[i], s.asRequested.len.unwrapOr(0)]\n                    : [hashes[i], s.asUnrequested.len]\n            : null)\n            .filter((p) => !!p);\n        return api.query.preimage.preimageFor.multi(keys).pipe(map((optBytes) => {\n            let ptr = -1;\n            return statuses\n                .map((s, i) => s\n                ? [hashes[i], s, optBytes[++ptr].unwrapOr(null)]\n                : [hashes[i], null, null])\n                .map((v) => parseImage(api, v));\n        }));\n    }));\n}\nexport function preimages(instanceId, api) {\n    return memo(instanceId, (hashes) => hashes.length\n        ? isFunction(api.query.democracy['preimages'])\n            ? getDemocracyImages(api, hashes)\n            : isFunction(api.query.preimage.preimageFor)\n                ? getImages(api, hashes)\n                : of([])\n        : of([]));\n}\nexport const preimage = /*#__PURE__*/ firstMemo((api, hash) => api.derive.democracy.preimages([hash]));\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isNewDepositors(depositors) {\n    // Detect balance...\n    return isFunction(depositors[1].mul);\n}\nfunction parse([proposals, images, optDepositors]) {\n    return proposals\n        .filter(([, , proposer], index) => !!(optDepositors[index]?.isSome) && !proposer.isEmpty)\n        .map(([index, hash, proposer], proposalIndex) => {\n        const depositors = optDepositors[proposalIndex].unwrap();\n        return objectSpread({\n            image: images[proposalIndex],\n            imageHash: getImageHashBounded(hash),\n            index,\n            proposer\n        }, isNewDepositors(depositors)\n            ? { balance: depositors[1], seconds: depositors[0] }\n            : { balance: depositors[0], seconds: depositors[1] });\n    });\n}\nexport function proposals(instanceId, api) {\n    return memo(instanceId, () => isFunction(api.query.democracy?.publicProps)\n        ? api.query.democracy.publicProps().pipe(switchMap((proposals) => proposals.length\n            ? combineLatest([\n                of(proposals),\n                api.derive.democracy.preimages(proposals.map(([, hash]) => hash)),\n                api.query.democracy.depositOf.multi(proposals.map(([index]) => index))\n            ])\n            : of([[], [], []])), map(parse))\n        : of([]));\n}\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function referendumIds(instanceId, api) {\n    return memo(instanceId, () => api.query.democracy?.lowestUnbaked\n        ? api.queryMulti([\n            api.query.democracy.lowestUnbaked,\n            api.query.democracy.referendumCount\n        ]).pipe(map(([first, total]) => total.gt(first)\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            ? [...Array(total.sub(first).toNumber())].map((_, i) => first.addn(i))\n            : []))\n        : of([]));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nexport function referendums(instanceId, api) {\n    return memo(instanceId, () => api.derive.democracy.referendumsActive().pipe(switchMap((referendums) => referendums.length\n        ? combineLatest([\n            of(referendums),\n            api.derive.democracy._referendumsVotes(referendums)\n        ])\n        : of([[], []])), map(([referendums, votes]) => referendums.map((referendum, index) => objectSpread({}, referendum, votes[index])))));\n}\n", "import { of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function referendumsActive(instanceId, api) {\n    return memo(instanceId, () => api.derive.democracy.referendumIds().pipe(switchMap((ids) => ids.length\n        ? api.derive.democracy.referendumsInfo(ids)\n        : of([]))));\n}\n", "import { map, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function referendumsFinished(instanceId, api) {\n    return memo(instanceId, () => api.derive.democracy.referendumIds().pipe(switchMap((ids) => api.query.democracy.referendumInfoOf.multi(ids)), map((infos) => infos\n        .map((o) => o.unwrapOr(null))\n        .filter((info) => !!info && info.isFinished)\n        .map((info) => info.asFinished))));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { calcVotes, getImageHash, getStatus } from './util.js';\nfunction votesPrev(api, referendumId) {\n    return api.query.democracy['votersFor'](referendumId).pipe(switchMap((votersFor) => combineLatest([\n        of(votersFor),\n        votersFor.length\n            ? api.query.democracy['voteOf'].multi(votersFor.map((accountId) => [referendumId, accountId]))\n            : of([]),\n        api.derive.balances.votingBalances(votersFor)\n    ])), map(([votersFor, votes, balances]) => votersFor.map((accountId, index) => ({\n        accountId,\n        balance: balances[index].votingBalance || api.registry.createType('Balance'),\n        isDelegating: false,\n        vote: votes[index] || api.registry.createType('Vote')\n    }))));\n}\nfunction extractVotes(mapped, referendumId) {\n    return mapped\n        .filter(([, voting]) => voting.isDirect)\n        .map(([accountId, voting]) => [\n        accountId,\n        voting.asDirect.votes.filter(([idx]) => idx.eq(referendumId))\n    ])\n        .filter(([, directVotes]) => !!directVotes.length)\n        .reduce((result, [accountId, votes]) => \n    // FIXME We are ignoring split votes\n    votes.reduce((result, [, vote]) => {\n        if (vote.isStandard) {\n            result.push(objectSpread({\n                accountId,\n                isDelegating: false\n            }, vote.asStandard));\n        }\n        return result;\n    }, result), []);\n}\nfunction votesCurr(api, referendumId) {\n    return api.query.democracy.votingOf.entries().pipe(map((allVoting) => {\n        const mapped = allVoting.map(([{ args: [accountId] }, voting]) => [accountId, voting]);\n        const votes = extractVotes(mapped, referendumId);\n        const delegations = mapped\n            .filter(([, voting]) => voting.isDelegating)\n            .map(([accountId, voting]) => [accountId, voting.asDelegating]);\n        // add delegations\n        delegations.forEach(([accountId, { balance, conviction, target }]) => {\n            // Are we delegating to a delegator\n            const toDelegator = delegations.find(([accountId]) => accountId.eq(target));\n            const to = votes.find(({ accountId }) => accountId.eq(toDelegator ? toDelegator[0] : target));\n            // this delegation has a target\n            if (to) {\n                votes.push({\n                    accountId,\n                    balance,\n                    isDelegating: true,\n                    vote: api.registry.createType('Vote', { aye: to.vote.isAye, conviction })\n                });\n            }\n        });\n        return votes;\n    }));\n}\nexport function _referendumVotes(instanceId, api) {\n    return memo(instanceId, (referendum) => combineLatest([\n        api.derive.democracy.sqrtElectorate(),\n        isFunction(api.query.democracy.votingOf)\n            ? votesCurr(api, referendum.index)\n            : votesPrev(api, referendum.index)\n    ]).pipe(map(([sqrtElectorate, votes]) => calcVotes(sqrtElectorate, referendum, votes))));\n}\nexport function _referendumsVotes(instanceId, api) {\n    return memo(instanceId, (referendums) => referendums.length\n        ? combineLatest(referendums.map((referendum) => api.derive.democracy._referendumVotes(referendum)))\n        : of([]));\n}\nexport function _referendumInfo(instanceId, api) {\n    return memo(instanceId, (index, info) => {\n        const status = getStatus(info);\n        return status\n            ? api.derive.democracy.preimage(status.proposal ||\n                status.proposalHash).pipe(map((image) => ({\n                image,\n                imageHash: getImageHash(status),\n                index: api.registry.createType('ReferendumIndex', index),\n                status\n            })))\n            : of(null);\n    });\n}\nexport function referendumsInfo(instanceId, api) {\n    return memo(instanceId, (ids) => ids.length\n        ? api.query.democracy.referendumInfoOf.multi(ids).pipe(switchMap((infos) => combineLatest(ids.map((id, index) => api.derive.democracy._referendumInfo(id, infos[index])))), map((infos) => infos.filter((r) => !!r)))\n        : of([]));\n}\n", "import { map } from 'rxjs';\nimport { bnSqrt } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nexport function sqrtElectorate(instanceId, api) {\n    return memo(instanceId, () => api.query.balances.totalIssuance().pipe(map(bnSqrt)));\n}\n", "export * from './info.js';\n", "import { combineLatest, map, of } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction isSeatHolder(value) {\n    return !Array.isArray(value);\n}\nfunction isCandidateTuple(value) {\n    return Array.isArray(value);\n}\nfunction getAccountTuple(value) {\n    return isSeatHolder(value)\n        ? [value.who, value.stake]\n        : value;\n}\nfunction getCandidate(value) {\n    return isCandidateTuple(value)\n        ? value[0]\n        : value;\n}\nfunction sortAccounts([, balanceA], [, balanceB]) {\n    return balanceB.cmp(balanceA);\n}\nfunction getConstants(api, elections) {\n    return elections\n        ? {\n            candidacyBond: api.consts[elections].candidacyBond,\n            desiredRunnersUp: api.consts[elections].desiredRunnersUp,\n            desiredSeats: api.consts[elections].desiredMembers,\n            termDuration: api.consts[elections].termDuration,\n            votingBond: api.consts[elections]['votingBond'],\n            votingBondBase: api.consts[elections].votingBondBase,\n            votingBondFactor: api.consts[elections].votingBondFactor\n        }\n        : {};\n}\nfunction getModules(api) {\n    const [council] = api.registry.getModuleInstances(api.runtimeVersion.specName, 'council') || ['council'];\n    const elections = api.query['phragmenElection']\n        ? 'phragmenElection'\n        : api.query['electionsPhragmen']\n            ? 'electionsPhragmen'\n            : api.query.elections\n                ? 'elections'\n                : null;\n    return [council, elections];\n}\nfunction queryAll(api, council, elections) {\n    return api.queryMulti([\n        api.query[council].members,\n        api.query[elections].candidates,\n        api.query[elections].members,\n        api.query[elections].runnersUp\n    ]);\n}\nfunction queryCouncil(api, council) {\n    return combineLatest([\n        api.query[council].members(),\n        of([]),\n        of([]),\n        of([])\n    ]);\n}\n/**\n * @name info\n * @returns An object containing the combined results of the storage queries for\n * all relevant election module properties.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.info(({ members, candidates }) => {\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\n * });\n * ```\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, () => {\n        const [council, elections] = getModules(api);\n        return (elections\n            ? queryAll(api, council, elections)\n            : queryCouncil(api, council)).pipe(map(([councilMembers, candidates, members, runnersUp]) => objectSpread({}, getConstants(api, elections), {\n            candidateCount: api.registry.createType('u32', candidates.length),\n            candidates: candidates.map(getCandidate),\n            members: members.length\n                ? members.map(getAccountTuple).sort(sortAccounts)\n                : councilMembers.map((a) => [a, api.registry.createType('Balance')]),\n            runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)\n        })));\n    });\n}\n", "export * from './receivedHeartbeats.js';\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { BN_ZERO } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction mapResult([result, validators, heartbeats, numBlocks]) {\n    validators.forEach((validator, index) => {\n        const validatorId = validator.toString();\n        const blockCount = numBlocks[index];\n        const hasMessage = !heartbeats[index].isEmpty;\n        const prev = result[validatorId];\n        if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {\n            result[validatorId] = {\n                blockCount,\n                hasMessage,\n                isOnline: hasMessage || blockCount.gt(BN_ZERO)\n            };\n        }\n    });\n    return result;\n}\n/**\n * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session\n */\nexport function receivedHeartbeats(instanceId, api) {\n    return memo(instanceId, () => api.query.imOnline?.receivedHeartbeats\n        ? api.derive.staking.overview().pipe(switchMap(({ currentIndex, validators }) => combineLatest([\n            of({}),\n            of(validators),\n            api.query.imOnline.receivedHeartbeats.multi(validators.map((_address, index) => [currentIndex, index])),\n            api.query.imOnline.authoredBlocks.multi(validators.map((address) => [currentIndex, address]))\n        ])), map(mapResult))\n        : of({}));\n}\n", "import { hasProposals as collectiveHasProposals, members as collectiveMembers, prime as collectivePrime, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from '../collective/index.js';\nexport const members = /*#__PURE__*/ collectiveMembers('membership');\nexport const hasProposals = /*#__PURE__*/ collectiveHasProposals('membership');\nexport const proposal = /*#__PURE__*/ collectiveProposal('membership');\nexport const proposalCount = /*#__PURE__*/ collectiveProposalCount('membership');\nexport const proposalHashes = /*#__PURE__*/ collectiveProposalHashes('membership');\nexport const proposals = /*#__PURE__*/ collectiveProposals('membership');\nexport const prime = /*#__PURE__*/ collectivePrime('membership');\n", "export * from './info.js';\nexport * from './overview.js';\n", "import { map, of } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { didUpdateToBool } from './util.js';\nfunction parseActive(id, active) {\n    const found = active.find(([paraId]) => paraId === id);\n    if (found && found[1].isSome) {\n        const [collatorId, retriable] = found[1].unwrap();\n        return objectSpread({ collatorId }, retriable.isWithRetries\n            ? {\n                isRetriable: true,\n                retries: retriable.asWithRetries.toNumber()\n            }\n            : {\n                isRetriable: false,\n                retries: 0\n            });\n    }\n    return null;\n}\nfunction parseCollators(id, collatorQueue) {\n    return collatorQueue.map((queue) => {\n        const found = queue.find(([paraId]) => paraId === id);\n        return found ? found[1] : null;\n    });\n}\nfunction parse(id, [active, retryQueue, selectedThreads, didUpdate, info, pendingSwap, heads, relayDispatchQueue]) {\n    if (info.isNone) {\n        return null;\n    }\n    return {\n        active: parseActive(id, active),\n        didUpdate: didUpdateToBool(didUpdate, id),\n        heads,\n        id,\n        info: objectSpread({ id }, info.unwrap()),\n        pendingSwapId: pendingSwap.unwrapOr(null),\n        relayDispatchQueue,\n        retryCollators: parseCollators(id, retryQueue),\n        selectedCollators: parseCollators(id, selectedThreads)\n    };\n}\nexport function info(instanceId, api) {\n    return memo(instanceId, (id) => api.query['registrar'] && api.query['parachains']\n        ? api.queryMulti([\n            api.query['registrar']['active'],\n            api.query['registrar']['retryQueue'],\n            api.query['registrar']['selectedThreads'],\n            api.query['parachains']['didUpdate'],\n            [api.query['registrar']['paras'], id],\n            [api.query['registrar']['pendingSwap'], id],\n            [api.query['parachains']['heads'], id],\n            [api.query['parachains']['relayDispatchQueue'], id]\n        ])\n            .pipe(map((result) => parse(api.registry.createType('ParaId', id), result)))\n        : of(null));\n}\n", "export function didUpdateToBool(didUpdate, id) {\n    return didUpdate.isSome\n        ? didUpdate.unwrap().some((paraId) => paraId.eq(id))\n        : false;\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { didUpdateToBool } from './util.js';\nfunction parse([ids, didUpdate, relayDispatchQueueSizes, infos, pendingSwaps]) {\n    return ids.map((id, index) => ({\n        didUpdate: didUpdateToBool(didUpdate, id),\n        id,\n        info: objectSpread({ id }, infos[index].unwrapOr(null)),\n        pendingSwapId: pendingSwaps[index].unwrapOr(null),\n        relayDispatchQueueSize: relayDispatchQueueSizes[index][0].toNumber()\n    }));\n}\nexport function overview(instanceId, api) {\n    return memo(instanceId, () => api.query['registrar']?.['parachains'] && api.query['parachains']\n        ? api.query['registrar']['parachains']().pipe(switchMap((paraIds) => combineLatest([\n            of(paraIds),\n            api.query['parachains']['didUpdate'](),\n            api.query['parachains']['relayDispatchQueueSize'].multi(paraIds),\n            api.query['registrar']['paras'].multi(paraIds),\n            api.query['registrar']['pendingSwap'].multi(paraIds)\n        ])), map(parse))\n        : of([]));\n}\n", "export * from './indexes.js';\nexport * from './info.js';\nexport * from './progress.js';\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {\n    return {\n        activeEra,\n        activeEraStart,\n        currentEra,\n        currentIndex,\n        validatorCount\n    };\n}\nfunction queryStaking(api) {\n    return api.queryMulti([\n        api.query.session.currentIndex,\n        api.query.staking.activeEra,\n        api.query.staking.currentEra,\n        api.query.staking.validatorCount\n    ]).pipe(map(([currentIndex, activeOpt, currentEra, validatorCount]) => {\n        const { index, start } = activeOpt.unwrapOrDefault();\n        return parse([\n            currentIndex,\n            index,\n            start,\n            currentEra.unwrapOrDefault(),\n            validatorCount\n        ]);\n    }));\n}\nfunction querySession(api) {\n    return api.query.session.currentIndex().pipe(map((currentIndex) => parse([\n        currentIndex,\n        api.registry.createType('EraIndex'),\n        api.registry.createType('Option<Moment>'),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('u32')\n    ])));\n}\nfunction empty(api) {\n    return of(parse([\n        api.registry.createType('SessionIndex', 1),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('Option<Moment>'),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('u32')\n    ]));\n}\nexport function indexes(instanceId, api) {\n    return memo(instanceId, () => api.query.session\n        ? api.query.staking\n            ? queryStaking(api)\n            : querySession(api)\n        : empty(api));\n}\n", "import { map } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, () => api.derive.session.indexes().pipe(map((indexes) => {\n        const sessionLength = api.consts?.babe?.epochDuration || api.registry.createType('u64', 1);\n        const sessionsPerEra = api.consts?.staking?.sessionsPerEra || api.registry.createType('SessionIndex', 1);\n        return objectSpread({\n            eraLength: api.registry.createType('BlockNumber', sessionsPerEra.mul(sessionLength)),\n            isEpoch: !!api.query.babe,\n            sessionLength,\n            sessionsPerEra\n        }, indexes);\n    })));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction withProgressField(field) {\n    return (instanceId, api) => memo(instanceId, () => api.derive.session.progress().pipe(map((info) => info[field])));\n}\nfunction createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {\n    const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);\n    const sessionProgress = currentSlot.sub(epochStartSlot);\n    const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);\n    return objectSpread({\n        eraProgress: api.registry.createType('BlockNumber', eraProgress),\n        sessionProgress: api.registry.createType('BlockNumber', sessionProgress)\n    }, info);\n}\nfunction queryAura(api) {\n    return api.derive.session.info().pipe(map((info) => objectSpread({\n        eraProgress: api.registry.createType('BlockNumber'),\n        sessionProgress: api.registry.createType('BlockNumber')\n    }, info)));\n}\nfunction queryBabe(api) {\n    return api.derive.session.info().pipe(switchMap((info) => combineLatest([\n        of(info),\n        // we may have no staking, but have babe (permissioned)\n        api.query.staking?.erasStartSessionIndex\n            ? api.queryMulti([\n                api.query.babe.currentSlot,\n                api.query.babe.epochIndex,\n                api.query.babe.genesisSlot,\n                [api.query.staking.erasStartSessionIndex, info.activeEra]\n            ])\n            : api.queryMulti([\n                api.query.babe.currentSlot,\n                api.query.babe.epochIndex,\n                api.query.babe.genesisSlot\n            ])\n    ])), map(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [\n        info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]\n    ]));\n}\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\nexport function progress(instanceId, api) {\n    return memo(instanceId, () => api.query.babe\n        ? queryBabe(api).pipe(map(([info, slots]) => createDerive(api, info, slots)))\n        : queryAura(api));\n}\nexport const eraLength = /*#__PURE__*/ withProgressField('eraLength');\nexport const eraProgress = /*#__PURE__*/ withProgressField('eraProgress');\nexport const sessionProgress = /*#__PURE__*/ withProgressField('sessionProgress');\n", "export * from './candidates.js';\nexport * from './info.js';\nexport * from './member.js';\nexport * from './members.js';\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Get the candidate info for a society\n */\nexport function candidates(instanceId, api) {\n    return memo(instanceId, () => api.query.society.candidates().pipe(switchMap((candidates) => combineLatest([\n        of(candidates),\n        api.query.society.suspendedCandidates.multi(candidates.map(({ who }) => who))\n    ])), map(([candidates, suspended]) => candidates.map(({ kind, value, who }, index) => ({\n        accountId: who,\n        isSuspended: suspended[index].isSome,\n        kind,\n        value\n    })))));\n}\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Get the overall info for a society\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, () => api.queryMulti([\n        api.query.society.bids,\n        api.query.society.defender,\n        api.query.society.founder,\n        api.query.society.head,\n        api.query.society.maxMembers,\n        api.query.society.pot\n    ]).pipe(map(([bids, defender, founder, head, maxMembers, pot]) => ({\n        bids,\n        defender: defender.unwrapOr(undefined),\n        founder: founder.unwrapOr(undefined),\n        hasDefender: (defender.isSome && head.isSome && !head.eq(defender)) || false,\n        head: head.unwrapOr(undefined),\n        maxMembers,\n        pot\n    }))));\n}\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Get the member info for a society\n */\nexport function member(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.society._members([accountId]).pipe(map(([result]) => result)));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function _members(instanceId, api) {\n    return memo(instanceId, (accountIds) => combineLatest([\n        of(accountIds),\n        api.query.society.payouts.multi(accountIds),\n        api.query.society.strikes.multi(accountIds),\n        api.query.society.defenderVotes.multi(accountIds),\n        api.query.society.suspendedMembers.multi(accountIds),\n        api.query.society.vouching.multi(accountIds)\n    ]).pipe(map(([accountIds, payouts, strikes, defenderVotes, suspended, vouching]) => accountIds.map((accountId, index) => ({\n        accountId,\n        isDefenderVoter: defenderVotes[index].isSome,\n        isSuspended: suspended[index].isTrue,\n        payouts: payouts[index],\n        strikes: strikes[index],\n        vote: defenderVotes[index].unwrapOr(undefined),\n        vouching: vouching[index].unwrapOr(undefined)\n    })))));\n}\n/**\n * @description Get the member info for a society\n */\nexport function members(instanceId, api) {\n    return memo(instanceId, () => api.query.society.members().pipe(switchMap((members) => api.derive.society._members(members))));\n}\n", "export * from './account.js';\nexport * from './currentPoints.js';\nexport * from './electedInfo.js';\nexport * from './erasExposure.js';\nexport * from './erasHistoric.js';\nexport * from './erasPoints.js';\nexport * from './erasPrefs.js';\nexport * from './erasRewards.js';\nexport * from './erasSlashes.js';\nexport * from './keys.js';\nexport * from './overview.js';\nexport * from './ownExposure.js';\nexport * from './ownSlashes.js';\nexport * from './query.js';\nexport * from './stakerExposure.js';\nexport * from './stakerPoints.js';\nexport * from './stakerPrefs.js';\nexport * from './stakerRewards.js';\nexport * from './stakerSlashes.js';\nexport * from './stashes.js';\nexport * from './validators.js';\nexport * from './waitingInfo.js';\n", "import { combineLatest, map, switchMap } from 'rxjs';\nimport { BN, BN_ZERO, objectSpread } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst QUERY_OPTS = {\n    withDestination: true,\n    withLedger: true,\n    withNominations: true,\n    withPrefs: true\n};\nfunction groupByEra(list) {\n    return list.reduce((map, { era, value }) => {\n        const key = era.toString();\n        map[key] = (map[key] || BN_ZERO).add(value.unwrap());\n        return map;\n    }, {});\n}\nfunction calculateUnlocking(api, stakingLedger, sessionInfo) {\n    const results = Object\n        .entries(groupByEra((stakingLedger?.unlocking || []).filter(({ era }) => era.unwrap().gt(sessionInfo.activeEra))))\n        .map(([eraString, value]) => ({\n        remainingEras: new BN(eraString).isub(sessionInfo.activeEra),\n        value: api.registry.createType('Balance', value)\n    }));\n    return results.length\n        ? results\n        : undefined;\n}\nfunction redeemableSum(api, stakingLedger, sessionInfo) {\n    return api.registry.createType('Balance', (stakingLedger?.unlocking || []).reduce((total, { era, value }) => {\n        // aligns with https://github.com/paritytech/substrate/blob/fdfdc73f9e64dc47934b72eb9af3e1989e4ba699/frame/staking/src/pallet/mod.rs#L973-L975\n        // (ensure currentEra >= era passed, as per https://github.com/paritytech/substrate/blob/fdfdc73f9e64dc47934b72eb9af3e1989e4ba699/frame/staking/src/lib.rs#L477-L494)\n        // NOTE: Previously we used activeEra >= era, which is incorrect for the last session\n        return era.unwrap().gt(sessionInfo.currentEra)\n            ? total\n            : total.iadd(value.unwrap());\n    }, new BN(0)));\n}\nfunction parseResult(api, sessionInfo, keys, query) {\n    return objectSpread({}, keys, query, {\n        redeemable: redeemableSum(api, query.stakingLedger, sessionInfo),\n        unlocking: calculateUnlocking(api, query.stakingLedger, sessionInfo)\n    });\n}\n/**\n * @description From a list of stashes, fill in all the relevant staking details\n */\nexport function accounts(instanceId, api) {\n    return memo(instanceId, (accountIds, opts = QUERY_OPTS) => api.derive.session.info().pipe(switchMap((sessionInfo) => combineLatest([\n        api.derive.staking.keysMulti(accountIds),\n        api.derive.staking.queryMulti(accountIds, opts)\n    ]).pipe(map(([keys, queries]) => queries.map((q, index) => parseResult(api, sessionInfo, keys[index], q)))))));\n}\n/**\n * @description From a stash, retrieve the controllerId and fill in all the relevant staking details\n */\nexport const account = /*#__PURE__*/ firstMemo((api, accountId, opts) => api.derive.staking.accounts([accountId], opts));\n", "import { switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Retrieve the staking overview, including elected and points earned\n */\nexport function currentPoints(instanceId, api) {\n    return memo(instanceId, () => api.derive.session.indexes().pipe(switchMap(({ activeEra }) => api.query.staking.erasRewardPoints(activeEra))));\n}\n", "import { map, switchMap } from 'rxjs';\nimport { arrayFlatten } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nconst DEFAULT_FLAGS = { withController: true, withExposure: true, withPrefs: true };\nfunction combineAccounts(nextElected, validators) {\n    return arrayFlatten([nextElected, validators.filter((v) => !nextElected.find((n) => n.eq(v)))]);\n}\nexport function electedInfo(instanceId, api) {\n    return memo(instanceId, (flags = DEFAULT_FLAGS) => api.derive.staking.validators().pipe(switchMap(({ nextElected, validators }) => api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe(map((info) => ({\n        info,\n        nextElected,\n        validators\n    }))))));\n}\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraExposure';\nfunction mapStakers(era, stakers) {\n    const nominators = {};\n    const validators = {};\n    stakers.forEach(([key, exposure]) => {\n        const validatorId = key.args[1].toString();\n        validators[validatorId] = exposure;\n        exposure.others.forEach(({ who }, validatorIndex) => {\n            const nominatorId = who.toString();\n            nominators[nominatorId] = nominators[nominatorId] || [];\n            nominators[nominatorId].push({ validatorId, validatorIndex });\n        });\n    });\n    return { era, nominators, validators };\n}\nexport function _eraExposure(instanceId, api) {\n    return memo(instanceId, (era, withActive = false) => {\n        const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n        return cached\n            ? of(cached)\n            : api.query.staking.erasStakersClipped.entries(era).pipe(map((r) => setEraCache(cacheKey, withActive, mapStakers(era, r))));\n    });\n}\nexport const eraExposure = /*#__PURE__*/ singleEra('_eraExposure');\nexport const _erasExposure = /*#__PURE__*/ combineEras('_eraExposure');\nexport const erasExposure = /*#__PURE__*/ erasHistoricApply('_erasExposure');\n", "import { deriveCache } from '../util/index.js';\nexport function getEraCache(CACHE_KEY, era, withActive) {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    return [\n        cacheKey,\n        withActive\n            ? undefined\n            : deriveCache.get(cacheKey)\n    ];\n}\nexport function getEraMultiCache(CACHE_KEY, eras, withActive) {\n    const cached = withActive\n        ? []\n        : eras\n            .map((e) => deriveCache.get(`${CACHE_KEY}-${e.toString()}`))\n            .filter((v) => !!v);\n    return cached;\n}\nexport function setEraCache(cacheKey, withActive, value) {\n    !withActive && deriveCache.set(cacheKey, value);\n    return value;\n}\nexport function setEraMultiCache(CACHE_KEY, withActive, values) {\n    !withActive && values.forEach((v) => deriveCache.set(`${CACHE_KEY}-${v.era.toString()}`, v));\n    return values;\n}\nexport function filterCachedEras(eras, cached, query) {\n    return eras.map((e) => cached.find(({ era }) => e.eq(era)) ||\n        query.find(({ era }) => e.eq(era)));\n}\n", "import { BehaviorSubject, combineLatest, map, of, switchMap, tap, toArray } from 'rxjs';\nimport { arrayChunk, arrayFlatten, nextTick } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nconst ERA_CHUNK_SIZE = 14;\nfunction chunkEras(eras, fn) {\n    const chunked = arrayChunk(eras, ERA_CHUNK_SIZE);\n    let index = 0;\n    const subject = new BehaviorSubject(chunked[index]);\n    return subject.pipe(switchMap(fn), tap(() => {\n        nextTick(() => {\n            index++;\n            index === chunked.length\n                ? subject.complete()\n                : subject.next(chunked[index]);\n        });\n    }), toArray(), map(arrayFlatten));\n}\nexport function filterEras(eras, list) {\n    return eras.filter((e) => !list.some(({ era }) => e.eq(era)));\n}\nexport function erasHistoricApply(fn) {\n    return (instanceId, api) => \n    // Cannot quite get the typing right, but it is right in the code\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    memo(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap((e) => api.derive.staking[fn](e, withActive))));\n}\nexport function erasHistoricApplyAccount(fn) {\n    return (instanceId, api) => \n    // Cannot quite get the typing right, but it is right in the code\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    memo(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap((e) => api.derive.staking[fn](accountId, e, withActive))));\n}\nexport function singleEra(fn) {\n    return (instanceId, api) => \n    // Cannot quite get the typing right, but it is right in the code\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    memo(instanceId, (era) => api.derive.staking[fn](era, true));\n}\nexport function combineEras(fn) {\n    return (instanceId, api) => \n    // Cannot quite get the typing right, but it is right in the code\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    memo(instanceId, (eras, withActive) => !eras.length\n        ? of([])\n        : chunkEras(eras, (eras) => combineLatest(eras.map((e) => api.derive.staking[fn](e, withActive)))));\n}\n", "import { combineLatest, map, of } from 'rxjs';\nimport { BN_ONE, BN_ZERO } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nexport function erasHistoric(instanceId, api) {\n    return memo(instanceId, (withActive) => combineLatest([\n        api.query.staking.activeEra(),\n        api.consts.staking.historyDepth\n            ? of(api.consts.staking.historyDepth)\n            : api.query.staking['historyDepth']()\n    ]).pipe(map(([activeEraOpt, historyDepth]) => {\n        const result = [];\n        const max = historyDepth.toNumber();\n        const activeEra = activeEraOpt.unwrapOrDefault().index;\n        let lastEra = activeEra;\n        while (lastEra.gte(BN_ZERO) && (result.length < max)) {\n            if ((lastEra !== activeEra) || (withActive === true)) {\n                result.push(api.registry.createType('EraIndex', lastEra));\n            }\n            lastEra = lastEra.sub(BN_ONE);\n        }\n        // go from oldest to newest\n        return result.reverse();\n    })));\n}\n", "import { map, of } from 'rxjs';\nimport { BN_ZERO } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { filterCachedEras, getEraMultiCache, setEraMultiCache } from './cache.js';\nimport { erasHistoricApply, filterEras } from './util.js';\nconst CACHE_KEY = 'eraPoints';\nfunction mapValidators({ individual }) {\n    return [...individual.entries()]\n        .filter(([, points]) => points.gt(BN_ZERO))\n        .reduce((result, [validatorId, points]) => {\n        result[validatorId.toString()] = points;\n        return result;\n    }, {});\n}\nfunction mapPoints(eras, points) {\n    return eras.map((era, index) => ({\n        era,\n        eraPoints: points[index].total,\n        validators: mapValidators(points[index])\n    }));\n}\nexport function _erasPoints(instanceId, api) {\n    return memo(instanceId, (eras, withActive) => {\n        if (!eras.length) {\n            return of([]);\n        }\n        const cached = getEraMultiCache(CACHE_KEY, eras, withActive);\n        const remaining = filterEras(eras, cached);\n        return !remaining.length\n            ? of(cached)\n            : api.query.staking.erasRewardPoints.multi(remaining).pipe(map((p) => filterCachedEras(eras, cached, setEraMultiCache(CACHE_KEY, withActive, mapPoints(remaining, p)))));\n    });\n}\nexport const erasPoints = /*#__PURE__*/ erasHistoricApply('_erasPoints');\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraPrefs';\nfunction mapPrefs(era, all) {\n    const validators = {};\n    all.forEach(([key, prefs]) => {\n        validators[key.args[1].toString()] = prefs;\n    });\n    return { era, validators };\n}\nexport function _eraPrefs(instanceId, api) {\n    return memo(instanceId, (era, withActive) => {\n        const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n        return cached\n            ? of(cached)\n            : api.query.staking.erasValidatorPrefs.entries(era).pipe(map((r) => setEraCache(cacheKey, withActive, mapPrefs(era, r))));\n    });\n}\nexport const eraPrefs = /*#__PURE__*/ singleEra('_eraPrefs');\nexport const _erasPrefs = /*#__PURE__*/ combineEras('_eraPrefs');\nexport const erasPrefs = /*#__PURE__*/ erasHistoricApply('_erasPrefs');\n", "import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { filterCachedEras, getEraMultiCache, setEraMultiCache } from './cache.js';\nimport { erasHistoricApply, filterEras } from './util.js';\nconst CACHE_KEY = 'eraRewards';\nfunction mapRewards(eras, optRewards) {\n    return eras.map((era, index) => ({\n        era,\n        eraReward: optRewards[index].unwrapOrDefault()\n    }));\n}\nexport function _erasRewards(instanceId, api) {\n    return memo(instanceId, (eras, withActive) => {\n        if (!eras.length) {\n            return of([]);\n        }\n        const cached = getEraMultiCache(CACHE_KEY, eras, withActive);\n        const remaining = filterEras(eras, cached);\n        if (!remaining.length) {\n            return of(cached);\n        }\n        return api.query.staking.erasValidatorReward.multi(remaining).pipe(map((r) => filterCachedEras(eras, cached, setEraMultiCache(CACHE_KEY, withActive, mapRewards(remaining, r)))));\n    });\n}\nexport const erasRewards = /*#__PURE__*/ erasHistoricApply('_erasRewards');\n", "import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraSlashes';\nfunction mapSlashes(era, noms, vals) {\n    const nominators = {};\n    const validators = {};\n    noms.forEach(([key, optBalance]) => {\n        nominators[key.args[1].toString()] = optBalance.unwrap();\n    });\n    vals.forEach(([key, optRes]) => {\n        validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];\n    });\n    return { era, nominators, validators };\n}\nexport function _eraSlashes(instanceId, api) {\n    return memo(instanceId, (era, withActive) => {\n        const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n        return cached\n            ? of(cached)\n            : combineLatest([\n                api.query.staking.nominatorSlashInEra.entries(era),\n                api.query.staking.validatorSlashInEra.entries(era)\n            ]).pipe(map(([n, v]) => setEraCache(cacheKey, withActive, mapSlashes(era, n, v))));\n    });\n}\nexport const eraSlashes = /*#__PURE__*/ singleEra('_eraSlashes');\nexport const _erasSlashes = /*#__PURE__*/ combineEras('_eraSlashes');\nexport const erasSlashes = /*#__PURE__*/ erasHistoricApply('_erasSlashes');\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n    const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];\n    const nextSessionIds = nextKeys.unwrapOr([]);\n    return {\n        nextSessionIds: Array.isArray(nextSessionIds)\n            ? nextSessionIds\n            : [...nextSessionIds.values()],\n        sessionIds: Array.isArray(sessionIds)\n            ? sessionIds\n            : [...sessionIds.values()]\n    };\n}\nexport const keys = /*#__PURE__*/ firstMemo((api, stashId) => api.derive.staking.keysMulti([stashId]));\nexport function keysMulti(instanceId, api) {\n    return memo(instanceId, (stashIds) => stashIds.length\n        ? api.query.session.queuedKeys().pipe(switchMap((queuedKeys) => combineLatest([\n            of(queuedKeys),\n            api.consts['session']?.['dedupKeyPrefix']\n                ? api.query.session.nextKeys.multi(stashIds.map((s) => [api.consts['session']['dedupKeyPrefix'], s]))\n                : combineLatest(stashIds.map((s) => api.query.session.nextKeys(s)))\n        ])), map(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index]))))\n        : of([]));\n}\n", "import { combineLatest, map } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\n/**\n * @description Retrieve the staking overview, including elected and points earned\n */\nexport function overview(instanceId, api) {\n    return memo(instanceId, () => combineLatest([\n        api.derive.session.indexes(),\n        api.derive.staking.validators()\n    ]).pipe(map(([indexes, { nextElected, validators }]) => objectSpread({}, indexes, {\n        nextElected,\n        validators\n    }))));\n}\n", "import { combineLatest, map, of } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nimport { erasHistoricApplyAccount } from './util.js';\nexport function _ownExposures(instanceId, api) {\n    return memo(instanceId, (accountId, eras, _withActive) => eras.length\n        ? combineLatest([\n            combineLatest(eras.map((e) => api.query.staking.erasStakersClipped(e, accountId))),\n            combineLatest(eras.map((e) => api.query.staking.erasStakers(e, accountId)))\n        ]).pipe(map(([clp, exp]) => eras.map((era, index) => ({ clipped: clp[index], era, exposure: exp[index] }))))\n        : of([]));\n}\nexport const ownExposure = /*#__PURE__*/ firstMemo((api, accountId, era) => api.derive.staking._ownExposures(accountId, [era], true));\nexport const ownExposures = /*#__PURE__*/ erasHistoricApplyAccount('_ownExposures');\n", "import { combineLatest, map, of } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nimport { erasHistoricApplyAccount } from './util.js';\nexport function _ownSlashes(instanceId, api) {\n    return memo(instanceId, (accountId, eras, _withActive) => eras.length\n        ? combineLatest([\n            combineLatest(eras.map((e) => api.query.staking.validatorSlashInEra(e, accountId))),\n            combineLatest(eras.map((e) => api.query.staking.nominatorSlashInEra(e, accountId)))\n        ]).pipe(map(([vals, noms]) => eras.map((era, index) => ({\n            era,\n            total: vals[index].isSome\n                ? vals[index].unwrap()[1]\n                : noms[index].unwrapOrDefault()\n        }))))\n        : of([]));\n}\nexport const ownSlash = /*#__PURE__*/ firstMemo((api, accountId, era) => api.derive.staking._ownSlashes(accountId, [era], true));\nexport const ownSlashes = /*#__PURE__*/ erasHistoricApplyAccount('_ownSlashes');\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nfunction parseDetails(stashId, controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure, stakingLedgerOpt) {\n    return {\n        accountId: stashId,\n        controllerId: controllerIdOpt && controllerIdOpt.unwrapOr(null),\n        exposure,\n        nominators: nominatorsOpt.isSome\n            ? nominatorsOpt.unwrap().targets\n            : [],\n        rewardDestination,\n        stakingLedger: stakingLedgerOpt.unwrapOrDefault(),\n        stashId,\n        validatorPrefs\n    };\n}\nfunction getLedgers(api, optIds, { withLedger = false }) {\n    const ids = optIds\n        .filter((o) => withLedger && !!o && o.isSome)\n        .map((o) => o.unwrap());\n    const emptyLed = api.registry.createType('Option<StakingLedger>');\n    return (ids.length\n        ? combineLatest(ids.map((s) => api.query.staking.ledger(s)))\n        : of([])).pipe(map((optLedgers) => {\n        let offset = -1;\n        return optIds.map((o) => o && o.isSome\n            ? optLedgers[++offset] || emptyLed\n            : emptyLed);\n    }));\n}\nfunction getStashInfo(api, stashIds, activeEra, { withController, withDestination, withExposure, withLedger, withNominations, withPrefs }) {\n    const emptyNoms = api.registry.createType('Option<Nominations>');\n    const emptyRewa = api.registry.createType('RewardDestination');\n    const emptyExpo = api.registry.createType('Exposure');\n    const emptyPrefs = api.registry.createType('ValidatorPrefs');\n    return combineLatest([\n        withController || withLedger\n            ? combineLatest(stashIds.map((s) => api.query.staking.bonded(s)))\n            : of(stashIds.map(() => null)),\n        withNominations\n            ? combineLatest(stashIds.map((s) => api.query.staking.nominators(s)))\n            : of(stashIds.map(() => emptyNoms)),\n        withDestination\n            ? combineLatest(stashIds.map((s) => api.query.staking.payee(s)))\n            : of(stashIds.map(() => emptyRewa)),\n        withPrefs\n            ? combineLatest(stashIds.map((s) => api.query.staking.validators(s)))\n            : of(stashIds.map(() => emptyPrefs)),\n        withExposure\n            ? combineLatest(stashIds.map((s) => api.query.staking.erasStakers(activeEra, s)))\n            : of(stashIds.map(() => emptyExpo))\n    ]);\n}\nfunction getBatch(api, activeEra, stashIds, flags) {\n    return getStashInfo(api, stashIds, activeEra, flags).pipe(switchMap(([controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure]) => getLedgers(api, controllerIdOpt, flags).pipe(map((stakingLedgerOpts) => stashIds.map((stashId, index) => parseDetails(stashId, controllerIdOpt[index], nominatorsOpt[index], rewardDestination[index], validatorPrefs[index], exposure[index], stakingLedgerOpts[index]))))));\n}\n/**\n * @description From a stash, retrieve the controllerId and all relevant details\n */\nexport const query = /*#__PURE__*/ firstMemo((api, accountId, flags) => api.derive.staking.queryMulti([accountId], flags));\nexport function queryMulti(instanceId, api) {\n    return memo(instanceId, (accountIds, flags) => api.derive.session.indexes().pipe(switchMap(({ activeEra }) => {\n        const stashIds = accountIds.map((a) => api.registry.createType('AccountId', a));\n        return stashIds.length\n            ? getBatch(api, activeEra, stashIds, flags)\n            : of([]);\n    })));\n}\n", "import { map, switchMap } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nexport function _stakerExposures(instanceId, api) {\n    return memo(instanceId, (accountIds, eras, withActive = false) => {\n        const stakerIds = accountIds.map((a) => api.registry.createType('AccountId', a).toString());\n        return api.derive.staking._erasExposure(eras, withActive).pipe(map((exposures) => stakerIds.map((stakerId) => exposures.map(({ era, nominators: allNominators, validators: allValidators }) => {\n            const isValidator = !!allValidators[stakerId];\n            const validators = {};\n            const nominating = allNominators[stakerId] || [];\n            if (isValidator) {\n                validators[stakerId] = allValidators[stakerId];\n            }\n            else if (nominating) {\n                nominating.forEach(({ validatorId }) => {\n                    validators[validatorId] = allValidators[validatorId];\n                });\n            }\n            return { era, isEmpty: !Object.keys(validators).length, isValidator, nominating, validators };\n        }))));\n    });\n}\nexport function stakerExposures(instanceId, api) {\n    return memo(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap((eras) => api.derive.staking._stakerExposures(accountIds, eras, withActive))));\n}\nexport const stakerExposure = /*#__PURE__*/ firstMemo((api, accountId, withActive) => api.derive.staking.stakerExposures([accountId], withActive));\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { erasHistoricApplyAccount } from './util.js';\nexport function _stakerPoints(instanceId, api) {\n    return memo(instanceId, (accountId, eras, withActive) => {\n        const stakerId = api.registry.createType('AccountId', accountId).toString();\n        return api.derive.staking._erasPoints(eras, withActive).pipe(map((points) => points.map(({ era, eraPoints, validators }) => ({\n            era,\n            eraPoints,\n            points: validators[stakerId] || api.registry.createType('RewardPoint')\n        }))));\n    });\n}\nexport const stakerPoints = /*#__PURE__*/ erasHistoricApplyAccount('_stakerPoints');\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { erasHistoricApplyAccount } from './util.js';\nexport function _stakerPrefs(instanceId, api) {\n    return memo(instanceId, (accountId, eras, _withActive) => api.query.staking.erasValidatorPrefs.multi(eras.map((e) => [e, accountId])).pipe(map((all) => all.map((validatorPrefs, index) => ({\n        era: eras[index],\n        validatorPrefs\n    })))));\n}\nexport const stakerPrefs = /*#__PURE__*/ erasHistoricApplyAccount('_stakerPrefs');\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { BN_BILLION, BN_ZERO, objectSpread } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nfunction parseRewards(api, stashId, [erasPoints, erasPrefs, erasRewards], exposures) {\n    return exposures.map(({ era, isEmpty, isValidator, nominating, validators: eraValidators }) => {\n        const { eraPoints, validators: allValPoints } = erasPoints.find((p) => p.era.eq(era)) || { eraPoints: BN_ZERO, validators: {} };\n        const { eraReward } = erasRewards.find((r) => r.era.eq(era)) || { eraReward: api.registry.createType('Balance') };\n        const { validators: allValPrefs } = erasPrefs.find((p) => p.era.eq(era)) || { validators: {} };\n        const validators = {};\n        const stakerId = stashId.toString();\n        Object.entries(eraValidators).forEach(([validatorId, exposure]) => {\n            const valPoints = allValPoints[validatorId] || BN_ZERO;\n            const valComm = allValPrefs[validatorId]?.commission.unwrap() || BN_ZERO;\n            const expTotal = exposure.total?.unwrap() || BN_ZERO;\n            let avail = BN_ZERO;\n            let value;\n            if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {\n                avail = eraReward.mul(valPoints).div(eraPoints);\n                const valCut = valComm.mul(avail).div(BN_BILLION);\n                let staked;\n                if (validatorId === stakerId) {\n                    staked = exposure.own.unwrap();\n                }\n                else {\n                    const stakerExp = exposure.others.find(({ who }) => who.eq(stakerId));\n                    staked = stakerExp\n                        ? stakerExp.value.unwrap()\n                        : BN_ZERO;\n                }\n                value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : BN_ZERO);\n            }\n            validators[validatorId] = {\n                total: api.registry.createType('Balance', avail),\n                value: api.registry.createType('Balance', value)\n            };\n        });\n        return {\n            era,\n            eraReward,\n            isEmpty,\n            isValidator,\n            nominating,\n            validators\n        };\n    });\n}\nfunction allUniqValidators(rewards) {\n    return rewards.reduce(([all, perStash], rewards) => {\n        const uniq = [];\n        perStash.push(uniq);\n        rewards.forEach(({ validators }) => Object.keys(validators).forEach((validatorId) => {\n            if (!uniq.includes(validatorId)) {\n                uniq.push(validatorId);\n                if (!all.includes(validatorId)) {\n                    all.push(validatorId);\n                }\n            }\n        }));\n        return [all, perStash];\n    }, [[], []]);\n}\nfunction removeClaimed(validators, queryValidators, reward) {\n    const rm = [];\n    Object.keys(reward.validators).forEach((validatorId) => {\n        const index = validators.indexOf(validatorId);\n        if (index !== -1) {\n            const valLedger = queryValidators[index].stakingLedger;\n            if (valLedger?.claimedRewards.some((e) => reward.era.eq(e))) {\n                rm.push(validatorId);\n            }\n        }\n    });\n    rm.forEach((validatorId) => {\n        delete reward.validators[validatorId];\n    });\n}\nfunction filterRewards(eras, valInfo, { rewards, stakingLedger }) {\n    const filter = eras.filter((e) => !stakingLedger.claimedRewards.some((s) => s.eq(e)));\n    const validators = valInfo.map(([v]) => v);\n    const queryValidators = valInfo.map(([, q]) => q);\n    return rewards\n        .filter(({ isEmpty }) => !isEmpty)\n        .filter((reward) => {\n        if (!filter.some((e) => reward.era.eq(e))) {\n            return false;\n        }\n        removeClaimed(validators, queryValidators, reward);\n        return true;\n    })\n        .filter(({ validators }) => Object.keys(validators).length !== 0)\n        .map((reward) => objectSpread({}, reward, {\n        nominators: reward.nominating.filter((n) => reward.validators[n.validatorId])\n    }));\n}\nexport function _stakerRewardsEras(instanceId, api) {\n    return memo(instanceId, (eras, withActive = false) => combineLatest([\n        api.derive.staking._erasPoints(eras, withActive),\n        api.derive.staking._erasPrefs(eras, withActive),\n        api.derive.staking._erasRewards(eras, withActive)\n    ]));\n}\nexport function _stakerRewards(instanceId, api) {\n    return memo(instanceId, (accountIds, eras, withActive = false) => combineLatest([\n        api.derive.staking.queryMulti(accountIds, { withLedger: true }),\n        api.derive.staking._stakerExposures(accountIds, eras, withActive),\n        api.derive.staking._stakerRewardsEras(eras, withActive)\n    ]).pipe(switchMap(([queries, exposures, erasResult]) => {\n        const allRewards = queries.map(({ stakingLedger, stashId }, index) => (!stashId || !stakingLedger)\n            ? []\n            : parseRewards(api, stashId, erasResult, exposures[index]));\n        if (withActive) {\n            return of(allRewards);\n        }\n        const [allValidators, stashValidators] = allUniqValidators(allRewards);\n        return api.derive.staking.queryMulti(allValidators, { withLedger: true }).pipe(map((queriedVals) => queries.map(({ stakingLedger }, index) => filterRewards(eras, stashValidators[index].map((validatorId) => [\n            validatorId,\n            queriedVals.find((q) => q.accountId.eq(validatorId))\n        ]), {\n            rewards: allRewards[index],\n            stakingLedger\n        }))));\n    })));\n}\nexport const stakerRewards = /*#__PURE__*/ firstMemo((api, accountId, withActive) => api.derive.staking.erasHistoric(withActive).pipe(switchMap((eras) => api.derive.staking._stakerRewards([accountId], eras, withActive))));\nexport function stakerRewardsMultiEras(instanceId, api) {\n    return memo(instanceId, (accountIds, eras) => accountIds.length && eras.length\n        ? api.derive.staking._stakerRewards(accountIds, eras, false)\n        : of([]));\n}\nexport function stakerRewardsMulti(instanceId, api) {\n    return memo(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe(switchMap((eras) => api.derive.staking.stakerRewardsMultiEras(accountIds, eras))));\n}\n", "import { map } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { erasHistoricApplyAccount } from './util.js';\nexport function _stakerSlashes(instanceId, api) {\n    return memo(instanceId, (accountId, eras, withActive) => {\n        const stakerId = api.registry.createType('AccountId', accountId).toString();\n        return api.derive.staking._erasSlashes(eras, withActive).pipe(map((slashes) => slashes.map(({ era, nominators, validators }) => ({\n            era,\n            total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')\n        }))));\n    });\n}\nexport const stakerSlashes = /*#__PURE__*/ erasHistoricApplyAccount('_stakerSlashes');\n", "import { map, startWith, switchMap } from 'rxjs';\nimport { drr, memo } from '../util/index.js';\nfunction onBondedEvent(api) {\n    let current = Date.now();\n    return api.query.system.events().pipe(map((events) => {\n        current = events.filter(({ event, phase }) => {\n            try {\n                return phase.isApplyExtrinsic &&\n                    event.section === 'staking' &&\n                    event.method === 'Bonded';\n            }\n            catch {\n                return false;\n            }\n        })\n            ? Date.now()\n            : current;\n        return current;\n    }), startWith(current), drr({ skipTimeout: true }));\n}\n/**\n * @description Retrieve the list of all validator stashes\n */\nexport function stashes(instanceId, api) {\n    return memo(instanceId, () => onBondedEvent(api).pipe(switchMap(() => api.query.staking.validators.keys()), map((keys) => keys.map(({ args: [v] }) => v).filter((a) => a))));\n}\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function nextElected(instanceId, api) {\n    return memo(instanceId, () => api.query.staking.erasStakers\n        ? api.derive.session.indexes().pipe(\n        // only populate for next era in the last session, so track both here - entries are not\n        // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n        switchMap(({ currentEra }) => api.query.staking.erasStakers.keys(currentEra)), map((keys) => keys.map(({ args: [, accountId] }) => accountId)))\n        : api.query.staking['currentElected']());\n}\n/**\n * @description Retrieve latest list of validators\n */\nexport function validators(instanceId, api) {\n    return memo(instanceId, () => \n    // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n    // in all actual real-world deployed chains, it does create some confusion for limited template chains\n    combineLatest([\n        api.query.session\n            ? api.query.session.validators()\n            : of([]),\n        api.query.staking\n            ? api.derive.staking.nextElected()\n            : of([])\n    ]).pipe(map(([validators, nextElected]) => ({\n        nextElected: nextElected.length\n            ? nextElected\n            : validators,\n        validators\n    }))));\n}\n", "import { combineLatest, map, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nconst DEFAULT_FLAGS = { withController: true, withPrefs: true };\nexport function waitingInfo(instanceId, api) {\n    return memo(instanceId, (flags = DEFAULT_FLAGS) => combineLatest([\n        api.derive.staking.validators(),\n        api.derive.staking.stashes()\n    ]).pipe(switchMap(([{ nextElected }, stashes]) => {\n        const elected = nextElected.map((a) => a.toString());\n        const waiting = stashes.filter((v) => !elected.includes(v.toString()));\n        return api.derive.staking.queryMulti(waiting, flags).pipe(map((info) => ({\n            info,\n            waiting\n        })));\n    })));\n}\n", "import { hasProposals as collectiveHasProposals, members as collectiveMembers, prime as collectivePrime, proposal as collectiveProposal, proposalCount as collectiveProposalCount, proposalHashes as collectiveProposalHashes, proposals as collectiveProposals } from '../collective/index.js';\nexport const members = /*#__PURE__*/ collectiveMembers('technicalCommittee');\nexport const hasProposals = /*#__PURE__*/ collectiveHasProposals('technicalCommittee');\nexport const proposal = /*#__PURE__*/ collectiveProposal('technicalCommittee');\nexport const proposalCount = /*#__PURE__*/ collectiveProposalCount('technicalCommittee');\nexport const proposalHashes = /*#__PURE__*/ collectiveProposalHashes('technicalCommittee');\nexport const proposals = /*#__PURE__*/ collectiveProposals('technicalCommittee');\nexport const prime = /*#__PURE__*/ collectivePrime('technicalCommittee');\n", "export * from './proposals.js';\n", "import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount }) {\n    const approvals = [];\n    const proposals = [];\n    const councilTreasury = councilProposals.filter(({ proposal }) => proposal && (api.tx.treasury.approveProposal.is(proposal) ||\n        api.tx.treasury.rejectProposal.is(proposal)));\n    allIds.forEach((id, index) => {\n        if (allProposals[index].isSome) {\n            const council = councilTreasury\n                .filter(({ proposal }) => proposal && id.eq(proposal.args[0]))\n                .sort((a, b) => a.proposal && b.proposal\n                ? a.proposal.method.localeCompare(b.proposal.method)\n                : a.proposal\n                    ? -1\n                    : 1);\n            const isApproval = approvalIds.some((approvalId) => approvalId.eq(id));\n            const derived = { council, id, proposal: allProposals[index].unwrap() };\n            if (isApproval) {\n                approvals.push(derived);\n            }\n            else {\n                proposals.push(derived);\n            }\n        }\n    });\n    return { approvals, proposalCount, proposals };\n}\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n    const proposalIds = [];\n    const count = proposalCount.toNumber();\n    for (let index = 0; index < count; index++) {\n        if (!approvalIds.some((id) => id.eqn(index))) {\n            proposalIds.push(api.registry.createType('ProposalIndex', index));\n        }\n    }\n    const allIds = [...proposalIds, ...approvalIds];\n    return combineLatest([\n        api.query.treasury.proposals.multi(allIds),\n        api.derive.council\n            ? api.derive.council.proposals()\n            : of([])\n    ]).pipe(map(([allProposals, councilProposals]) => parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount })));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\nexport function proposals(instanceId, api) {\n    return memo(instanceId, () => api.query.treasury\n        ? combineLatest([\n            api.query.treasury.proposalCount(),\n            api.query.treasury.approvals()\n        ]).pipe(switchMap(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds)))\n        : of({\n            approvals: [],\n            proposalCount: api.registry.createType('ProposalIndex'),\n            proposals: []\n        }));\n}\n", "export * from './events.js';\nexport * from './signingInfo.js';\n", "import { combineLatest, map, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function events(instanceId, api) {\n    return memo(instanceId, (blockHash) => combineLatest([\n        api.rpc.chain.getBlock(blockHash),\n        api.queryAt(blockHash).pipe(switchMap((queryAt) => queryAt.system.events()))\n    ]).pipe(map(([block, events]) => ({ block, events }))));\n}\n", "import { catchError, combineLatest, map, of, switchMap } from 'rxjs';\nimport { isNumber, isUndefined } from '@polkadot/util';\nimport { unwrapBlockNumber } from '../util/index.js';\nimport { FALLBACK_MAX_HASH_COUNT, FALLBACK_PERIOD, MAX_FINALITY_LAG, MORTAL_PERIOD } from './constants.js';\nfunction latestNonce(api, address) {\n    return api.derive.balances.account(address).pipe(map(({ accountNonce }) => accountNonce));\n}\nfunction nextNonce(api, address) {\n    return api.rpc.system?.accountNextIndex\n        ? api.rpc.system.accountNextIndex(address)\n        : latestNonce(api, address);\n}\nfunction signingHeader(api) {\n    return combineLatest([\n        api.rpc.chain.getHeader().pipe(switchMap((header) => \n        // check for chains at genesis (until block 1 is produced, e.g. 6s), since\n        // we do need to allow transactions at chain start (also dev/seal chains)\n        header.parentHash.isEmpty\n            ? of(header)\n            // in the case of the current block, we use the parent to minimize the\n            // impact of forks on the system, but not completely remove it\n            : api.rpc.chain.getHeader(header.parentHash).pipe(catchError(() => of(header))))),\n        api.rpc.chain.getFinalizedHead().pipe(switchMap((hash) => api.rpc.chain.getHeader(hash).pipe(catchError(() => of(null)))))\n    ]).pipe(map(([current, finalized]) => \n    // determine the hash to use, current when lag > max, else finalized\n    !finalized || unwrapBlockNumber(current).sub(unwrapBlockNumber(finalized)).gt(MAX_FINALITY_LAG)\n        ? current\n        : finalized));\n}\nexport function signingInfo(_instanceId, api) {\n    // no memo, we want to do this fresh on each run\n    return (address, nonce, era) => combineLatest([\n        // retrieve nonce if none was specified\n        isUndefined(nonce)\n            ? latestNonce(api, address)\n            : nonce === -1\n                ? nextNonce(api, address)\n                : of(api.registry.createType('Index', nonce)),\n        // if no era (create) or era > 0 (mortal), do block retrieval\n        (isUndefined(era) || (isNumber(era) && era > 0))\n            ? signingHeader(api)\n            : of(null)\n    ]).pipe(map(([nonce, header]) => ({\n        header,\n        mortalLength: Math.min(api.consts.system?.blockHashCount?.toNumber() || FALLBACK_MAX_HASH_COUNT, MORTAL_PERIOD\n            .div(api.consts.babe?.expectedBlockTime ||\n            api.consts.timestamp?.minimumPeriod.muln(2) ||\n            FALLBACK_PERIOD)\n            .iadd(MAX_FINALITY_LAG)\n            .toNumber()),\n        nonce\n    })));\n}\n", "import { BN } from '@polkadot/util';\nexport const FALLBACK_MAX_HASH_COUNT = 250;\nexport const FALLBACK_PERIOD = new BN(6 * 1000);\nexport const MAX_FINALITY_LAG = new BN(5);\nexport const MORTAL_PERIOD = new BN(5 * 60 * 1000);\n", "const recordIdentity = (record) => record;\nfunction filterAndApply(events, section, methods, onFound) {\n    return events\n        .filter(({ event }) => section === event.section &&\n        methods.includes(event.method))\n        .map((record) => onFound(record));\n}\nfunction getDispatchError({ event: { data: [dispatchError] } }) {\n    return dispatchError;\n}\nfunction getDispatchInfo({ event: { data, method } }) {\n    return method === 'ExtrinsicSuccess'\n        ? data[0]\n        : data[1];\n}\nfunction extractError(events = []) {\n    return filterAndApply(events, 'system', ['ExtrinsicFailed'], getDispatchError)[0];\n}\nfunction extractInfo(events = []) {\n    return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], getDispatchInfo)[0];\n}\nexport class SubmittableResult {\n    constructor({ blockNumber, dispatchError, dispatchInfo, events, internalError, status, txHash, txIndex }) {\n        this.dispatchError = dispatchError || extractError(events);\n        this.dispatchInfo = dispatchInfo || extractInfo(events);\n        this.events = events || [];\n        this.internalError = internalError;\n        this.status = status;\n        this.txHash = txHash;\n        this.txIndex = txIndex;\n        this.blockNumber = blockNumber;\n    }\n    get isCompleted() {\n        return this.isError || this.status.isInBlock || this.status.isFinalized;\n    }\n    get isError() {\n        return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n    }\n    get isFinalized() {\n        return this.status.isFinalized;\n    }\n    get isInBlock() {\n        return this.status.isInBlock;\n    }\n    get isWarning() {\n        return this.status.isRetracted;\n    }\n    /**\n     * @description Filters EventRecords for the specified method & section (there could be multiple)\n     */\n    filterRecords(section, method) {\n        return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);\n    }\n    /**\n     * @description Finds an EventRecord for the specified method & section\n     */\n    findRecord(section, method) {\n        return this.filterRecords(section, method)[0];\n    }\n    /**\n     * @description Creates a human representation of the output\n     */\n    toHuman(isExtended) {\n        return {\n            dispatchError: this.dispatchError?.toHuman(),\n            dispatchInfo: this.dispatchInfo?.toHuman(),\n            events: this.events.map((e) => e.toHuman(isExtended)),\n            internalError: this.internalError?.message.toString(),\n            status: this.status.toHuman(isExtended)\n        };\n    }\n}\n", "export { ApiPromise } from './Api.js';\nexport { toPromiseMethod } from './decorateMethod.js';\n", "import { objectSpread } from '@polkadot/util';\nimport { ApiBase } from '../base/index.js';\nimport { Combinator } from './Combinator.js';\nimport { promiseTracker, toPromiseMethod } from './decorateMethod.js';\n/**\n * # @polkadot/api/promise\n *\n * ## Overview\n *\n * @name ApiPromise\n * @description\n * ApiPromise is a standard JavaScript wrapper around the RPC and interfaces on the Polkadot network. As a full Promise-based, all interface calls return Promises, including the static `.create(...)`. Subscription calls utilise `(value) => {}` callbacks to pass through the latest values.\n *\n * The API is well suited to real-time applications where either the single-shot state is needed or use is to be made of the subscription-based features of Polkadot (and Substrate) clients.\n *\n * @see [[ApiRx]]\n *\n * ## Usage\n *\n * Making rpc calls -\n * <BR>\n *\n * ```javascript\n * import ApiPromise from '@polkadot/api/promise';\n *\n * // initialise via static create\n * const api = await ApiPromise.create();\n *\n * // make a subscription to the network head\n * api.rpc.chain.subscribeNewHeads((header) => {\n *   console.log(`Chain is at #${header.number}`);\n * });\n * ```\n * <BR>\n *\n * Subscribing to chain state -\n * <BR>\n *\n * ```javascript\n * import { ApiPromise, WsProvider } from '@polkadot/api';\n *\n * // initialise a provider with a specific endpoint\n * const provider = new WsProvider('wss://example.com:9944')\n *\n * // initialise via isReady & new with specific provider\n * const api = await new ApiPromise({ provider }).isReady;\n *\n * // retrieve the block target time\n * const blockPeriod = await api.query.timestamp.blockPeriod().toNumber();\n * let last = 0;\n *\n * // subscribe to the current block timestamp, updates automatically (callback provided)\n * api.query.timestamp.now((timestamp) => {\n *   const elapsed = last\n *     ? `, ${timestamp.toNumber() - last}s since last`\n *     : '';\n *\n *   last = timestamp.toNumber();\n *   console.log(`timestamp ${timestamp}${elapsed} (${blockPeriod}s target)`);\n * });\n * ```\n * <BR>\n *\n * Submitting a transaction -\n * <BR>\n *\n * ```javascript\n * import ApiPromise from '@polkadot/api/promise';\n *\n * ApiPromise.create().then((api) => {\n *   const [nonce] = await api.query.system.account(keyring.alice.address);\n *\n *   api.tx.balances\n *     // create transfer\n *     transfer(keyring.bob.address, 12345)\n *     // sign the transcation\n *     .sign(keyring.alice, { nonce })\n *     // send the transaction (optional status callback)\n *     .send((status) => {\n *       console.log(`current status ${status.type}`);\n *     })\n *     // retrieve the submitted extrinsic hash\n *     .then((hash) => {\n *       console.log(`submitted with hash ${hash}`);\n *     });\n * });\n * ```\n */\nexport class ApiPromise extends ApiBase {\n    /**\n     * @description Creates an instance of the ApiPromise class\n     * @param options Options to create an instance. This can be either [[ApiOptions]] or\n     * an [[WsProvider]].\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import Api from '@polkadot/api/promise';\n     *\n     * new Api().isReady.then((api) => {\n     *   api.rpc.subscribeNewHeads((header) => {\n     *     console.log(`new block #${header.number.toNumber()}`);\n     *   });\n     * });\n     * ```\n     */\n    constructor(options) {\n        super(options, 'promise', toPromiseMethod);\n        this.__internal__isReadyPromise = new Promise((resolve) => {\n            super.once('ready', () => resolve(this));\n        });\n        this.__internal__isReadyOrErrorPromise = new Promise((resolve, reject) => {\n            const tracker = promiseTracker(resolve, reject);\n            super.once('ready', () => tracker.resolve(this));\n            super.once('error', (error) => tracker.reject(error));\n        });\n    }\n    /**\n     * @description Creates an ApiPromise instance using the supplied provider. Returns an Promise containing the actual Api instance.\n     * @param options options that is passed to the class contructor. Can be either [[ApiOptions]] or a\n     * provider (see the constructor arguments)\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import Api from '@polkadot/api/promise';\n     *\n     * Api.create().then(async (api) => {\n     *   const timestamp = await api.query.timestamp.now();\n     *\n     *   console.log(`lastest block timestamp ${timestamp}`);\n     * });\n     * ```\n     */\n    static create(options) {\n        const instance = new ApiPromise(options);\n        if (options && options.throwOnConnect) {\n            return instance.isReadyOrError;\n        }\n        // Swallow any rejections on isReadyOrError\n        // (in Node 15.x this creates issues, when not being looked at)\n        instance.isReadyOrError.catch(() => {\n            // ignore\n        });\n        return instance.isReady;\n    }\n    /**\n     * @description Promise that resolves the first time we are connected and loaded\n     */\n    get isReady() {\n        return this.__internal__isReadyPromise;\n    }\n    /**\n     * @description Promise that resolves if we can connect, or reject if there is an error\n     */\n    get isReadyOrError() {\n        return this.__internal__isReadyOrErrorPromise;\n    }\n    /**\n     * @description Returns a clone of this ApiPromise instance (new underlying provider connection)\n     */\n    clone() {\n        return new ApiPromise(objectSpread({}, this._options, { source: this }));\n    }\n    /**\n     * @description Creates a combinator that can be used to combine the latest results from multiple subscriptions\n     * @param fns An array of function to combine, each in the form of `(cb: (value: void)) => void`\n     * @param callback A callback that will return an Array of all the values this combinator has been applied to\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const address = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFacT7';\n     *\n     * // combines values from balance & nonce as it updates\n     * api.combineLatest([\n     *   api.rpc.chain.subscribeNewHeads,\n     *   (cb) => api.query.system.account(address, cb)\n     * ], ([head, [balance, nonce]]) => {\n     *   console.log(`#${head.number}: You have ${balance.free} units, with ${nonce} transactions sent`);\n     * });\n     * ```\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async combineLatest(fns, callback) {\n        const combinator = new Combinator(fns, callback);\n        return () => {\n            combinator.unsubscribe();\n        };\n    }\n}\n", "import { isString, objectSpread, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { Getters } from './Getters.js';\nexport class ApiBase extends Getters {\n    /**\n     * @description Create an instance of the class\n     *\n     * @param options Options object to create API instance or a Provider instance\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import Api from '@polkadot/api/promise';\n     *\n     * const api = new Api().isReady();\n     *\n     * api.rpc.subscribeNewHeads((header) => {\n     *   console.log(`new block #${header.number.toNumber()}`);\n     * });\n     * ```\n     */\n    constructor(options = {}, type, decorateMethod) {\n        super(options, type, decorateMethod);\n    }\n    /**\n     * @description Connect from the underlying provider, halting all network traffic\n     */\n    connect() {\n        return this._rpcCore.connect();\n    }\n    /**\n     * @description Disconnect from the underlying provider, halting all network traffic\n     */\n    disconnect() {\n        this._unsubscribe();\n        return this._rpcCore.disconnect();\n    }\n    /**\n     * @description Set an external signer which will be used to sign extrinsic when account passed in is not KeyringPair\n     */\n    setSigner(signer) {\n        this._rx.signer = signer;\n    }\n    /**\n     * @description Signs a raw signer payload, string or Uint8Array\n     */\n    async sign(address, data, { signer } = {}) {\n        if (isString(address)) {\n            const _signer = signer || this._rx.signer;\n            if (!_signer || !_signer.signRaw) {\n                throw new Error('No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n            }\n            return (await _signer.signRaw(objectSpread({ type: 'bytes' }, data, { address }))).signature;\n        }\n        return u8aToHex(address.sign(u8aToU8a(data.data)));\n    }\n}\n", "import { packageInfo } from '../packageInfo.js';\nimport { findCall, findError } from './find.js';\nimport { Init } from './Init.js';\nfunction assertResult(value) {\n    if (value === undefined) {\n        throw new Error(\"Api interfaces needs to be initialized before using, wait for 'isReady'\");\n    }\n    return value;\n}\nexport class Getters extends Init {\n    /**\n     * @description Runtime call interfaces (currently untyped, only decorated via API options)\n     */\n    get call() {\n        return assertResult(this._call);\n    }\n    /**\n     * @description Contains the parameter types (constants) of all modules.\n     *\n     * The values are instances of the appropriate type and are accessible using `section`.`constantName`,\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * console.log(api.consts.democracy.enactmentPeriod.toString())\n     * ```\n     */\n    get consts() {\n        return assertResult(this._consts);\n    }\n    /**\n     * @description Derived results that are injected into the API, allowing for combinations of various query results.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.derive.chain.bestNumber((number) => {\n     *   console.log('best number', number);\n     * });\n     * ```\n     */\n    get derive() {\n        return assertResult(this._derive);\n    }\n    /**\n     * @description Errors from metadata\n     */\n    get errors() {\n        return assertResult(this._errors);\n    }\n    /**\n     * @description Events from metadata\n     */\n    get events() {\n        return assertResult(this._events);\n    }\n    /**\n     * @description  Returns the version of extrinsics in-use on this chain\n     */\n    get extrinsicVersion() {\n        return this._extrinsicType;\n    }\n    /**\n     * @description Contains the genesis Hash of the attached chain. Apart from being useful to determine the actual chain, it can also be used to sign immortal transactions.\n     */\n    get genesisHash() {\n        return assertResult(this._genesisHash);\n    }\n    /**\n     * @description true is the underlying provider is connected\n     */\n    get isConnected() {\n        return this._isConnected.getValue();\n    }\n    /**\n     * @description The library information name & version (from package.json)\n     */\n    get libraryInfo() {\n        return `${packageInfo.name} v${packageInfo.version}`;\n    }\n    /**\n     * @description Contains all the chain state modules and their subsequent methods in the API. These are attached dynamically from the runtime metadata.\n     *\n     * All calls inside the namespace, is denoted by `section`.`method` and may take an optional query parameter. As an example, `api.query.timestamp.now()` (current block timestamp) does not take parameters, while `api.query.system.account(<accountId>)` (retrieving the associated nonce & balances for an account), takes the `AccountId` as a parameter.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.query.system.account(<accountId>, ([nonce, balance]) => {\n     *   console.log('new free balance', balance.free, 'new nonce', nonce);\n     * });\n     * ```\n     */\n    get query() {\n        return assertResult(this._query);\n    }\n    /**\n     * @description Allows for the querying of multiple storage entries and the combination thereof into a single result. This is a very optimal way to make multiple queries since it only makes a single connection to the node and retrieves the data over one subscription.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const unsub = await api.queryMulti(\n     *   [\n     *     // you can include the storage without any parameters\n     *     api.query.balances.totalIssuance,\n     *     // or you can pass parameters to the storage query\n     *     [api.query.system.account, '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY']\n     *   ],\n     *   ([existential, [, { free }]]) => {\n     *     console.log(`You have ${free.sub(existential)} more than the existential deposit`);\n     *\n     *     unsub();\n     *   }\n     * );\n     * ```\n     */\n    get queryMulti() {\n        return assertResult(this._queryMulti);\n    }\n    /**\n     * @description Contains all the raw rpc sections and their subsequent methods in the API as defined by the jsonrpc interface definitions. Unlike the dynamic `api.query` and `api.tx` sections, these methods are fixed (although extensible with node upgrades) and not determined by the runtime.\n     *\n     * RPC endpoints available here allow for the query of chain, node and system information, in addition to providing interfaces for the raw queries of state (using known keys) and the submission of transactions.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.rpc.chain.subscribeNewHeads((header) => {\n     *   console.log('new header', header);\n     * });\n     * ```\n     */\n    get rpc() {\n        return assertResult(this._rpc);\n    }\n    /**\n     * @description Contains the chain information for the current node.\n     */\n    get runtimeChain() {\n        return assertResult(this._runtimeChain);\n    }\n    /**\n     * @description Yields the current attached runtime metadata. Generally this is only used to construct extrinsics & storage, but is useful for current runtime inspection.\n     */\n    get runtimeMetadata() {\n        return assertResult(this._runtimeMetadata);\n    }\n    /**\n     * @description Contains the version information for the current runtime.\n     */\n    get runtimeVersion() {\n        return assertResult(this._runtimeVersion);\n    }\n    /**\n     * @description The underlying Rx API interface\n     */\n    get rx() {\n        return assertResult(this._rx);\n    }\n    /**\n     * @description Returns the underlying provider stats\n     */\n    get stats() {\n        return this._rpcCore.provider.stats;\n    }\n    /**\n     * @description The type of this API instance, either 'rxjs' or 'promise'\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * @description Contains all the extrinsic modules and their subsequent methods in the API. It allows for the construction of transactions and the submission thereof. These are attached dynamically from the runtime metadata.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.tx.balances\n     *   .transfer(<recipientId>, <balance>)\n     *   .signAndSend(<keyPair>, ({status}) => {\n     *     console.log('tx status', status.asFinalized.toHex());\n     *   });\n     * ```\n     */\n    get tx() {\n        return assertResult(this._extrinsics);\n    }\n    /**\n     * @description Finds the definition for a specific [[CallFunction]] based on the index supplied\n     */\n    findCall(callIndex) {\n        return findCall(this.registry, callIndex);\n    }\n    /**\n     * @description Finds the definition for a specific [[RegistryError]] based on the index supplied\n     */\n    findError(errorIndex) {\n        return findError(this.registry, errorIndex);\n    }\n}\n", "import { u8aToU8a } from '@polkadot/util';\nexport function findCall(registry, callIndex) {\n    return registry.findMetaCall(u8aToU8a(callIndex));\n}\nexport function findError(registry, errorIndex) {\n    return registry.findMetaError(u8aToU8a(errorIndex));\n}\n", "import { firstValueFrom, map, of, switchMap } from 'rxjs';\nimport { Metadata, TypeRegistry } from '@polkadot/types';\nimport { getSpecAlias, getSpecExtensions, getSpecHasher, getSpecRpc, getSpecTypes, getUpgradeVersion } from '@polkadot/types-known';\nimport { assertReturn, BN_ZERO, isUndefined, logger, objectSpread, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport { Decorate } from './Decorate.js';\nconst KEEPALIVE_INTERVAL = 10000;\nconst WITH_VERSION_SHORTCUT = false;\nconst l = logger('api/init');\nfunction textToString(t) {\n    return t.toString();\n}\nexport class Init extends Decorate {\n    constructor(options, type, decorateMethod) {\n        super(options, type, decorateMethod);\n        this.__internal__atLast = null;\n        this.__internal__healthTimer = null;\n        this.__internal__registries = [];\n        this.__internal__updateSub = null;\n        this.__internal__waitingRegistries = {};\n        // all injected types added to the registry for overrides\n        this.registry.setKnownTypes(options);\n        // We only register the types (global) if this is not a cloned instance.\n        // Do right up-front, so we get in the user types before we are actually\n        // doing anything on-chain, this ensures we have the overrides in-place\n        if (!options.source) {\n            this.registerTypes(options.types);\n        }\n        else {\n            this.__internal__registries = options.source.__internal__registries;\n        }\n        this._rpc = this._decorateRpc(this._rpcCore, this._decorateMethod);\n        this._rx.rpc = this._decorateRpc(this._rpcCore, this._rxDecorateMethod);\n        if (this.supportMulti) {\n            this._queryMulti = this._decorateMulti(this._decorateMethod);\n            this._rx.queryMulti = this._decorateMulti(this._rxDecorateMethod);\n        }\n        this._rx.signer = options.signer;\n        this._rpcCore.setRegistrySwap((blockHash) => this.getBlockRegistry(blockHash));\n        this._rpcCore.setResolveBlockHash((blockNumber) => firstValueFrom(this._rpcCore.chain.getBlockHash(blockNumber)));\n        if (this.hasSubscriptions) {\n            this._rpcCore.provider.on('disconnected', () => this.__internal__onProviderDisconnect());\n            this._rpcCore.provider.on('error', (e) => this.__internal__onProviderError(e));\n            this._rpcCore.provider.on('connected', () => this.__internal__onProviderConnect());\n        }\n        else if (!this._options.noInitWarn) {\n            l.warn('Api will be available in a limited mode since the provider does not support subscriptions');\n        }\n        // If the provider was instantiated earlier, and has already emitted a\n        // 'connected' event, then the `on('connected')` won't fire anymore. To\n        // cater for this case, we call manually `this._onProviderConnect`.\n        if (this._rpcCore.provider.isConnected) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.__internal__onProviderConnect();\n        }\n    }\n    /**\n     * @description Decorates a registry based on the runtime version\n     */\n    _initRegistry(registry, chain, version, metadata, chainProps) {\n        registry.clearCache();\n        registry.setChainProperties(chainProps || this.registry.getChainProperties());\n        registry.setKnownTypes(this._options);\n        registry.register(getSpecTypes(registry, chain, version.specName, version.specVersion));\n        registry.setHasher(getSpecHasher(registry, chain, version.specName));\n        // for bundled types, pull through the aliases defined\n        if (registry.knownTypes.typesBundle) {\n            registry.knownTypes.typesAlias = getSpecAlias(registry, chain, version.specName);\n        }\n        registry.setMetadata(metadata, undefined, objectSpread({}, getSpecExtensions(registry, chain, version.specName), this._options.signedExtensions), this._options.noInitWarn);\n    }\n    /**\n     * @description Returns the default versioned registry\n     */\n    _getDefaultRegistry() {\n        return assertReturn(this.__internal__registries.find(({ isDefault }) => isDefault), 'Initialization error, cannot find the default registry');\n    }\n    /**\n     * @description Returns a decorated API instance at a specific point in time\n     */\n    async at(blockHash, knownVersion) {\n        const u8aHash = u8aToU8a(blockHash);\n        const u8aHex = u8aToHex(u8aHash);\n        const registry = await this.getBlockRegistry(u8aHash, knownVersion);\n        if (!this.__internal__atLast || this.__internal__atLast[0] !== u8aHex) {\n            // always create a new decoration - since we are pointing to a specific hash, this\n            // means that all queries needs to use that hash (not a previous one already existing)\n            this.__internal__atLast = [u8aHex, this._createDecorated(registry, true, null, u8aHash).decoratedApi];\n        }\n        return this.__internal__atLast[1];\n    }\n    async _createBlockRegistry(blockHash, header, version) {\n        const registry = new TypeRegistry(blockHash);\n        const metadata = new Metadata(registry, await firstValueFrom(this._rpcCore.state.getMetadata.raw(header.parentHash)));\n        this._initRegistry(registry, this._runtimeChain, version, metadata);\n        // add our new registry\n        const result = { counter: 0, lastBlockHash: blockHash, metadata, registry, runtimeVersion: version };\n        this.__internal__registries.push(result);\n        return result;\n    }\n    _cacheBlockRegistryProgress(key, creator) {\n        // look for waiting resolves\n        let waiting = this.__internal__waitingRegistries[key];\n        if (isUndefined(waiting)) {\n            // nothing waiting, construct new\n            waiting = this.__internal__waitingRegistries[key] = new Promise((resolve, reject) => {\n                creator()\n                    .then((registry) => {\n                    delete this.__internal__waitingRegistries[key];\n                    resolve(registry);\n                })\n                    .catch((error) => {\n                    delete this.__internal__waitingRegistries[key];\n                    reject(error);\n                });\n            });\n        }\n        return waiting;\n    }\n    _getBlockRegistryViaVersion(blockHash, version) {\n        if (version) {\n            // check for pre-existing registries. We also check specName, e.g. it\n            // could be changed like in Westmint with upgrade from shell -> westmint\n            const existingViaVersion = this.__internal__registries.find(({ runtimeVersion: { specName, specVersion } }) => specName.eq(version.specName) &&\n                specVersion.eq(version.specVersion));\n            if (existingViaVersion) {\n                existingViaVersion.counter++;\n                existingViaVersion.lastBlockHash = blockHash;\n                return existingViaVersion;\n            }\n        }\n        return null;\n    }\n    async _getBlockRegistryViaHash(blockHash) {\n        // ensure we have everything required\n        if (!this._genesisHash || !this._runtimeVersion) {\n            throw new Error('Cannot retrieve data on an uninitialized chain');\n        }\n        // We have to assume that on the RPC layer the calls used here does not call back into\n        // the registry swap, so getHeader & getRuntimeVersion should not be historic\n        const header = this.registry.createType('HeaderPartial', this._genesisHash.eq(blockHash)\n            ? { number: BN_ZERO, parentHash: this._genesisHash }\n            : await firstValueFrom(this._rpcCore.chain.getHeader.raw(blockHash)));\n        if (header.parentHash.isEmpty) {\n            throw new Error('Unable to retrieve header and parent from supplied hash');\n        }\n        // get the runtime version, either on-chain or via an known upgrade history\n        const [firstVersion, lastVersion] = getUpgradeVersion(this._genesisHash, header.number);\n        const version = this.registry.createType('RuntimeVersionPartial', WITH_VERSION_SHORTCUT && (firstVersion && (lastVersion ||\n            firstVersion.specVersion.eq(this._runtimeVersion.specVersion)))\n            ? { apis: firstVersion.apis, specName: this._runtimeVersion.specName, specVersion: firstVersion.specVersion }\n            : await firstValueFrom(this._rpcCore.state.getRuntimeVersion.raw(header.parentHash)));\n        return (\n        // try to find via version\n        this._getBlockRegistryViaVersion(blockHash, version) ||\n            // return new or in-flight result\n            await this._cacheBlockRegistryProgress(version.toHex(), () => this._createBlockRegistry(blockHash, header, version)));\n    }\n    /**\n     * @description Sets up a registry based on the block hash defined\n     */\n    async getBlockRegistry(blockHash, knownVersion) {\n        return (\n        // try to find via blockHash\n        this.__internal__registries.find(({ lastBlockHash }) => lastBlockHash && u8aEq(lastBlockHash, blockHash)) ||\n            // try to find via version\n            this._getBlockRegistryViaVersion(blockHash, knownVersion) ||\n            // return new or in-flight result\n            await this._cacheBlockRegistryProgress(u8aToHex(blockHash), () => this._getBlockRegistryViaHash(blockHash)));\n    }\n    async _loadMeta() {\n        // on re-connection to the same chain, we don't want to re-do everything from chain again\n        if (this._isReady) {\n            return true;\n        }\n        this._unsubscribeUpdates();\n        // only load from on-chain if we are not a clone (default path), alternatively\n        // just use the values from the source instance provided\n        [this._genesisHash, this._runtimeMetadata] = this._options.source?._isReady\n            ? await this._metaFromSource(this._options.source)\n            : await this._metaFromChain(this._options.metadata);\n        return this._initFromMeta(this._runtimeMetadata);\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async _metaFromSource(source) {\n        this._extrinsicType = source.extrinsicVersion;\n        this._runtimeChain = source.runtimeChain;\n        this._runtimeVersion = source.runtimeVersion;\n        // manually build a list of all available methods in this RPC, we are\n        // going to filter on it to align the cloned RPC without making a call\n        const sections = Object.keys(source.rpc);\n        const rpcs = [];\n        for (let s = 0, scount = sections.length; s < scount; s++) {\n            const section = sections[s];\n            const methods = Object.keys(source.rpc[section]);\n            for (let m = 0, mcount = methods.length; m < mcount; m++) {\n                rpcs.push(`${section}_${methods[m]}`);\n            }\n        }\n        this._filterRpc(rpcs, getSpecRpc(this.registry, source.runtimeChain, source.runtimeVersion.specName));\n        return [source.genesisHash, source.runtimeMetadata];\n    }\n    // subscribe to metadata updates, inject the types on changes\n    _subscribeUpdates() {\n        if (this.__internal__updateSub || !this.hasSubscriptions) {\n            return;\n        }\n        this.__internal__updateSub = this._rpcCore.state.subscribeRuntimeVersion().pipe(switchMap((version) => \n        // only retrieve the metadata when the on-chain version has been changed\n        this._runtimeVersion?.specVersion.eq(version.specVersion)\n            ? of(false)\n            : this._rpcCore.state.getMetadata().pipe(map((metadata) => {\n                l.log(`Runtime version updated to spec=${version.specVersion.toString()}, tx=${version.transactionVersion.toString()}`);\n                this._runtimeMetadata = metadata;\n                this._runtimeVersion = version;\n                this._rx.runtimeVersion = version;\n                // update the default registry version\n                const thisRegistry = this._getDefaultRegistry();\n                // setup the data as per the current versions\n                thisRegistry.metadata = metadata;\n                thisRegistry.runtimeVersion = version;\n                this._initRegistry(this.registry, this._runtimeChain, version, metadata);\n                this._injectMetadata(thisRegistry, true);\n                return true;\n            })))).subscribe();\n    }\n    async _metaFromChain(optMetadata) {\n        const [genesisHash, runtimeVersion, chain, chainProps, rpcMethods, chainMetadata] = await Promise.all([\n            firstValueFrom(this._rpcCore.chain.getBlockHash(0)),\n            firstValueFrom(this._rpcCore.state.getRuntimeVersion()),\n            firstValueFrom(this._rpcCore.system.chain()),\n            firstValueFrom(this._rpcCore.system.properties()),\n            firstValueFrom(this._rpcCore.rpc.methods()),\n            optMetadata\n                ? Promise.resolve(null)\n                : firstValueFrom(this._rpcCore.state.getMetadata())\n        ]);\n        // set our chain version & genesisHash as returned\n        this._runtimeChain = chain;\n        this._runtimeVersion = runtimeVersion;\n        this._rx.runtimeVersion = runtimeVersion;\n        // retrieve metadata, either from chain  or as pass-in via options\n        const metadataKey = `${genesisHash.toHex() || '0x'}-${runtimeVersion.specVersion.toString()}`;\n        const metadata = chainMetadata || (optMetadata && optMetadata[metadataKey]\n            ? new Metadata(this.registry, optMetadata[metadataKey])\n            : await firstValueFrom(this._rpcCore.state.getMetadata()));\n        // initializes the registry & RPC\n        this._initRegistry(this.registry, chain, runtimeVersion, metadata, chainProps);\n        this._filterRpc(rpcMethods.methods.map(textToString), getSpecRpc(this.registry, chain, runtimeVersion.specName));\n        this._subscribeUpdates();\n        // setup the initial registry, when we have none\n        if (!this.__internal__registries.length) {\n            this.__internal__registries.push({ counter: 0, isDefault: true, metadata, registry: this.registry, runtimeVersion });\n        }\n        // get unique types & validate\n        metadata.getUniqTypes(this._options.throwOnUnknown || false);\n        return [genesisHash, metadata];\n    }\n    _initFromMeta(metadata) {\n        this._extrinsicType = metadata.asLatest.extrinsic.version.toNumber();\n        this._rx.extrinsicType = this._extrinsicType;\n        this._rx.genesisHash = this._genesisHash;\n        this._rx.runtimeVersion = this._runtimeVersion; // must be set here\n        // inject metadata and adjust the types as detected\n        this._injectMetadata(this._getDefaultRegistry(), true);\n        // derive is last, since it uses the decorated rx\n        this._rx.derive = this._decorateDeriveRx(this._rxDecorateMethod);\n        this._derive = this._decorateDerive(this._decorateMethod);\n        return true;\n    }\n    _subscribeHealth() {\n        this._unsubscribeHealth();\n        // Only enable the health keepalive on WS, not needed on HTTP\n        this.__internal__healthTimer = this.hasSubscriptions\n            ? setInterval(() => {\n                firstValueFrom(this._rpcCore.system.health.raw()).catch(() => undefined);\n            }, KEEPALIVE_INTERVAL)\n            : null;\n    }\n    _unsubscribeHealth() {\n        if (this.__internal__healthTimer) {\n            clearInterval(this.__internal__healthTimer);\n            this.__internal__healthTimer = null;\n        }\n    }\n    _unsubscribeUpdates() {\n        if (this.__internal__updateSub) {\n            this.__internal__updateSub.unsubscribe();\n            this.__internal__updateSub = null;\n        }\n    }\n    _unsubscribe() {\n        this._unsubscribeHealth();\n        this._unsubscribeUpdates();\n    }\n    async __internal__onProviderConnect() {\n        this._isConnected.next(true);\n        this.emit('connected');\n        try {\n            const cryptoReady = this._options.initWasm === false\n                ? true\n                : await cryptoWaitReady();\n            const hasMeta = await this._loadMeta();\n            this._subscribeHealth();\n            if (hasMeta && !this._isReady && cryptoReady) {\n                this._isReady = true;\n                this.emit('ready', this);\n            }\n        }\n        catch (_error) {\n            const error = new Error(`FATAL: Unable to initialize the API: ${_error.message}`);\n            l.error(error);\n            this.emit('error', error);\n        }\n    }\n    __internal__onProviderDisconnect() {\n        this._isConnected.next(false);\n        this._unsubscribe();\n        this.emit('disconnected');\n    }\n    __internal__onProviderError(error) {\n        this.emit('error', error);\n    }\n}\n", "import './detectPackage.js';\nexport * from './bundle.js';\n", "import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n", "import { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nexport default [typesInfo];\n", "export { mapXcmTypes } from '@polkadot/types-create';\nexport { packageInfo } from './packageInfo.js';\nexport * from './util.js';\n", "import { bnToBn } from '@polkadot/util';\nimport { typesChain } from './chain/index.js';\nimport { typesSpec } from './spec/index.js';\nimport { upgrades } from './upgrades/index.js';\n/**\n * @description Perform the callback function using the stringified spec/chain\n * @internal\n * */\nfunction withNames(chainName, specName, fn) {\n    return fn(chainName.toString(), specName.toString());\n}\n/**\n * @descriptionFflatten a VersionedType[] into a Record<string, string>\n * @internal\n * */\nfunction filterVersions(versions = [], specVersion) {\n    return versions\n        .filter(({ minmax: [min, max] }) => (min === undefined || min === null || specVersion >= min) &&\n        (max === undefined || max === null || specVersion <= max))\n        .reduce((result, { types }) => ({ ...result, ...types }), {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\nexport function getSpecExtensions({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.signedExtensions ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.signedExtensions ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\nexport function getSpecTypes({ knownTypes }, chainName, specName, specVersion) {\n    const _specVersion = bnToBn(specVersion).toNumber();\n    return withNames(chainName, specName, (c, s) => ({\n        // The order here is always, based on -\n        //   - spec then chain\n        //   - typesBundle takes higher precedence\n        //   - types is the final catch-all override\n        ...filterVersions(typesSpec[s], _specVersion),\n        ...filterVersions(typesChain[c], _specVersion),\n        ...filterVersions(knownTypes.typesBundle?.spec?.[s]?.types, _specVersion),\n        ...filterVersions(knownTypes.typesBundle?.chain?.[c]?.types, _specVersion),\n        ...(knownTypes.typesSpec?.[s] ?? {}),\n        ...(knownTypes.typesChain?.[c] ?? {}),\n        ...(knownTypes.types ?? {})\n    }));\n}\n/**\n * @description Based on the chain or spec, return the hasher used\n */\nexport function getSpecHasher({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => knownTypes.hasher ||\n        knownTypes.typesBundle?.chain?.[c]?.hasher ||\n        knownTypes.typesBundle?.spec?.[s]?.hasher ||\n        null);\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\nexport function getSpecRpc({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.rpc ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.rpc ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable runtime definitions (ready for registration)\n */\nexport function getSpecRuntime({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.runtime ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.runtime ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\nexport function getSpecAlias({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        // as per versions, first spec, then chain then finally non-versioned\n        ...(knownTypes.typesBundle?.spec?.[s]?.alias ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.alias ?? {}),\n        ...(knownTypes.typesAlias ?? {})\n    }));\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\nexport function getUpgradeVersion(genesisHash, blockNumber) {\n    const known = upgrades.find((u) => genesisHash.eq(u.genesisHash));\n    return known\n        ? [\n            known.versions.reduce((last, version) => {\n                return blockNumber.gt(version.blockNumber)\n                    ? version\n                    : last;\n            }, undefined),\n            known.versions.find((version) => blockNumber.lte(version.blockNumber))\n        ]\n        : [undefined, undefined];\n}\n", "export const typesChain = {};\n", "import { versioned as centrifugeChain } from './centrifuge-chain.js';\nimport { versioned as kusama } from './kusama.js';\nimport { versioned as node } from './node.js';\nimport { versioned as nodeTemplate } from './node-template.js';\nimport { versioned as polkadot } from './polkadot.js';\nimport { versioned as rococo } from './rococo.js';\nimport { versioned as shell } from './shell.js';\nimport { versioned as statemint } from './statemint.js';\nimport { versioned as westend } from './westend.js';\nexport const typesSpec = {\n    'centrifuge-chain': centrifugeChain,\n    kusama,\n    node,\n    'node-template': nodeTemplate,\n    polkadot,\n    rococo,\n    shell,\n    statemine: statemint,\n    statemint,\n    westend,\n    westmint: statemint\n};\n", "const sharedTypes = {\n    // Anchor\n    AnchorData: {\n        anchoredBlock: 'u64',\n        docRoot: 'H256',\n        id: 'H256'\n    },\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    PreCommitData: {\n        expirationBlock: 'u64',\n        identity: 'H256',\n        signingRoot: 'H256'\n    },\n    // Fees\n    Fee: {\n        key: 'Hash',\n        price: 'Balance'\n    },\n    // MultiAccount\n    MultiAccountData: {\n        deposit: 'Balance',\n        depositor: 'AccountId',\n        signatories: 'Vec<AccountId>',\n        threshold: 'u16'\n    },\n    // Bridge\n    ChainId: 'u8',\n    DepositNonce: 'u64',\n    ResourceId: '[u8; 32]',\n    'chainbridge::ChainId': 'u8',\n    // NFT\n    RegistryId: 'H160',\n    TokenId: 'U256',\n    AssetId: {\n        registryId: 'RegistryId',\n        tokenId: 'TokenId'\n    },\n    AssetInfo: {\n        metadata: 'Bytes'\n    },\n    MintInfo: {\n        anchorId: 'Hash',\n        proofs: 'Vec<ProofMint>',\n        staticHashes: '[Hash; 3]'\n    },\n    Proof: {\n        leafHash: 'H256',\n        sortedHashes: 'H256'\n    },\n    ProofMint: {\n        hashes: 'Vec<Hash>',\n        property: 'Bytes',\n        salt: '[u8; 32]',\n        value: 'Bytes'\n    },\n    RegistryInfo: {\n        fields: 'Vec<Bytes>',\n        ownerCanBurn: 'bool'\n    },\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'Governance',\n            'Staking',\n            'NonProxy'\n        ]\n    }\n};\nconst standaloneTypes = {\n    ...sharedTypes,\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'LookupSource',\n    LookupSource: 'IndicesLookupSource',\n    Multiplier: 'Fixed64',\n    RefCount: 'RefCountTo259'\n};\nexport const versioned = [\n    {\n        minmax: [240, 243],\n        types: {\n            ...standaloneTypes,\n            ProxyType: {\n                _enum: [\n                    'Any',\n                    'NonTransfer',\n                    'Governance',\n                    'Staking',\n                    'Vesting'\n                ]\n            }\n        }\n    },\n    {\n        minmax: [244, 999],\n        types: { ...standaloneTypes }\n    },\n    {\n        minmax: [1000, undefined],\n        types: { ...sharedTypes }\n    }\n];\n", "import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    CompactAssignments: 'CompactAssignmentsWith24',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith24',\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'IdentityJudgement', 'CancelProxy', 'Auction']\n    },\n    Weight: 'WeightV1'\n};\nconst addrIndicesTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'LookupSource',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys5',\n    LookupSource: 'IndicesLookupSource',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        // 1020 is first CC3\n        minmax: [1019, 1031],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchError: 'DispatchErrorTo198',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            IdentityInfo: 'IdentityInfoTo198',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            SlashingSpans: 'SlashingSpansTo204',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1032, 1042],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            SlashingSpans: 'SlashingSpansTo204',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        // actual at 1045 (1043-1044 is dev)\n        minmax: [1043, 1045],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1046, 1049],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo223',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1050, 1054],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo240',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1055, 1056],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo240',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1057, 1061],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            // Last 100% known problematic runtime range - this quite possibly need to\n            // apply to more runtime ranges that follow, we just don't know how far this\n            // should be applied to\n            //\n            // TL;DR whack-a-mole since this was not histrically checked\n            //\n            // See https://github.com/polkadot-js/api/issues/5618#issuecomment-1530970316\n            Scheduled: 'ScheduledTo254'\n        }\n    },\n    {\n        minmax: [1062, 2012],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2013, 2022],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2023, 2024],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2025, 2027],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [2028, 2029],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount',\n            CompactAssignments: 'CompactAssignmentsWith16',\n            RawSolution: 'RawSolutionWith16'\n        }\n    },\n    {\n        minmax: [2030, 9000],\n        types: {\n            ...sharedTypes,\n            CompactAssignments: 'CompactAssignmentsWith16',\n            RawSolution: 'RawSolutionWith16'\n        }\n    },\n    {\n        minmax: [9010, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        // jump from 9100 to 9110, however align with Rococo\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n", "export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n            // nothing, API tracks master\n            // (v2 weights are not yet the default)\n            Weight: 'WeightV2'\n        }\n    }\n];\n", "export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n            // nothing, API tracks master\n            // (v2 weights are not yet the default)\n            Weight: 'WeightV2'\n        }\n    }\n];\n", "const sharedTypes = {\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: {\n            Any: 0,\n            NonTransfer: 1,\n            Governance: 2,\n            Staking: 3,\n            UnusedSudoBalances: 4,\n            IdentityJudgement: 5,\n            CancelProxy: 6,\n            Auction: 7\n        }\n    },\n    Weight: 'WeightV1'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        minmax: [0, 12],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [13, 22],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [23, 24],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [25, 27],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [28, 29],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [30, 9109],\n        types: {\n            ...sharedTypes\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9110, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n", "import { mapXcmTypes } from '@polkadot/types-create';\n/* eslint-disable sort-keys */\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    FullIdentification: '()',\n    Keys: 'SessionKeys7B',\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 200],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount',\n            Address: 'AccountId',\n            LookupSource: 'AccountId'\n        }\n    },\n    {\n        minmax: [201, 214],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [215, 228],\n        types: {\n            ...sharedTypes,\n            Keys: 'SessionKeys6'\n        }\n    },\n    {\n        minmax: [229, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n", "export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n        // nothing, limited runtime\n        }\n    }\n];\n", "import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    TAssetBalance: 'u128',\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'CancelProxy',\n            'Assets',\n            'AssetOwner',\n            'AssetManager',\n            'Staking'\n        ]\n    },\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 3],\n        types: {\n            // Enum was modified mid-flight -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [4, 5],\n        types: {\n            // As above, see https://github.com/polkadot-js/api/issues/5301\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata V14\n        minmax: [500, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n", "import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    // 16 validators\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    // general\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: ['Any', 'NonTransfer', 'Staking', 'SudoBalances', 'IdentityJudgement', 'CancelProxy']\n    },\n    Weight: 'WeightV1'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    LookupSource: 'AccountId',\n    Keys: 'SessionKeys5',\n    RawSolution: 'RawSolutionWith16',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        minmax: [1, 2],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [3, 22],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [23, 42],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [43, 44],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [45, 47],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [48, 49],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [50, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n", "import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n    westend: {\n        genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n    }\n};\n/** @internal */\nfunction mapRaw([network, versions]) {\n    const chain = selectableNetworks.find((n) => n.network === network) || NET_EXTRA[network];\n    if (!chain) {\n        throw new Error(`Unable to find info for chain ${network}`);\n    }\n    return {\n        genesisHash: hexToU8a(chain.genesisHash[0]),\n        network,\n        versions: versions.map(([blockNumber, specVersion, apis]) => ({\n            apis,\n            blockNumber: new BN(blockNumber),\n            specVersion: new BN(specVersion)\n        }))\n    };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);\n", "export { upgrades as kusama } from './kusama.js';\nexport { upgrades as polkadot } from './polkadot.js';\nexport { upgrades as westend } from './westend.js';\n", "export const upgrades = [\n    [\n        0,\n        1020,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        26669,\n        1021,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        38245,\n        1022,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        54248,\n        1023,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        59659,\n        1024,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        67651,\n        1025,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        82191,\n        1027,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        83238,\n        1028,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        101503,\n        1029,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        203466,\n        1030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        295787,\n        1031,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        461692,\n        1032,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        504329,\n        1033,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        569327,\n        1038,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        587687,\n        1039,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        653183,\n        1040,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        693488,\n        1042,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        901442,\n        1045,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1375086,\n        1050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1445458,\n        1051,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1472960,\n        1052,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1475648,\n        1053,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1491596,\n        1054,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1574408,\n        1055,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2064961,\n        1058,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2201991,\n        1062,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2671528,\n        2005,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2704202,\n        2007,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2728002,\n        2008,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2832534,\n        2011,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2962294,\n        2012,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3240000,\n        2013,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3274408,\n        2015,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3323565,\n        2019,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3534175,\n        2022,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3860281,\n        2023,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4143129,\n        2024,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4401242,\n        2025,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4841367,\n        2026,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5961600,\n        2027,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6137912,\n        2028,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6561855,\n        2029,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7100891,\n        2030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7468792,\n        9010,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7668600,\n        9030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7812476,\n        9040,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8010981,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8073833,\n        9070,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8555825,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8945245,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9611377,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9625129,\n        9111,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9866422,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10403784,\n        9130,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10960765,\n        9150,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11006614,\n        9151,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11404482,\n        9160,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11601803,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12008022,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12405451,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12665416,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12909508,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13109752,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13555777,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13727747,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        14248044,\n        9271,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14433840,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14645900,\n        9291,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15048375,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15426015,\n        9320,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15680713,\n        9340,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15756296,\n        9350,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ]\n];\n", "export const upgrades = [\n    [\n        0,\n        0,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        29231,\n        1,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        188836,\n        5,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        199405,\n        6,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        214264,\n        7,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        244358,\n        8,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        303079,\n        9,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        314201,\n        10,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        342400,\n        11,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        443963,\n        12,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        528470,\n        13,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        687751,\n        14,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        746085,\n        15,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        787923,\n        16,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        799302,\n        17,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1205128,\n        18,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1603423,\n        23,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1733218,\n        24,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2005673,\n        25,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2436698,\n        26,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3613564,\n        27,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3899547,\n        28,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4345767,\n        29,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4876134,\n        30,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5661442,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6321619,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6713249,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7217907,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7229126,\n        9110,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7560558,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8115869,\n        9140,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8638103,\n        9151,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9280179,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9738717,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10156856,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10458576,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10655116,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10879371,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11328884,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11532856,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11933818,\n        9270,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12217535,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12245277,\n        9281,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12532644,\n        9291,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12876189,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ]\n];\n", "export const upgrades = [\n    [\n        214356,\n        4,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        392764,\n        7,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        409740,\n        8,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        809976,\n        20,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        877581,\n        24,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        879238,\n        25,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        889472,\n        26,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        902937,\n        27,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        932751,\n        28,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        991142,\n        29,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1030162,\n        31,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1119657,\n        32,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1199282,\n        33,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1342534,\n        34,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1392263,\n        35,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1431703,\n        36,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1433369,\n        37,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1490972,\n        41,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2087397,\n        43,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2316688,\n        44,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2549864,\n        45,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3925782,\n        46,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3925843,\n        47,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4207800,\n        48,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4627944,\n        49,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5124076,\n        50,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5478664,\n        900,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5482450,\n        9000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5584305,\n        9010,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5784566,\n        9030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5879822,\n        9031,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5896856,\n        9032,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5897316,\n        9033,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6117927,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6210274,\n        9070,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6379314,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6979141,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7568453,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7766394,\n        9111,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7911691,\n        9120,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7968866,\n        9121,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7982889,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8514322,\n        9130,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9091726,\n        9140,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9091774,\n        9150,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9406726,\n        9160,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9921066,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10007115,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10480973,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10578091,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10678509,\n        9210,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10811001,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11096116,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11409279,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11584820,\n        9251,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11716837,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11876919,\n        9261,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11987927,\n        9270,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12077324,\n        9271,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12301871,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12604343,\n        9290,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12841034,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13128237,\n        9310,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13272363,\n        9320,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13483497,\n        9330,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13649433,\n        9340,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13761100,\n        9350,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ]\n];\n", "import { BehaviorSubject, combineLatest, from, map, of, switchMap, tap, toArray } from 'rxjs';\nimport { getAvailableDerives } from '@polkadot/api-derive';\nimport { memo, RpcCore } from '@polkadot/rpc-core';\nimport { WsProvider } from '@polkadot/rpc-provider';\nimport { expandMetadata, GenericExtrinsic, typeDefinitions, TypeRegistry } from '@polkadot/types';\nimport { getSpecRuntime } from '@polkadot/types-known';\nimport { arrayChunk, arrayFlatten, assertReturn, BN, compactStripLength, lazyMethod, lazyMethods, logger, nextTick, objectSpread, stringCamelCase, stringUpperFirst, u8aConcatStrict, u8aToHex } from '@polkadot/util';\nimport { blake2AsHex } from '@polkadot/util-crypto';\nimport { createSubmittable } from '../submittable/index.js';\nimport { augmentObject } from '../util/augmentObject.js';\nimport { decorateDeriveSections } from '../util/decorate.js';\nimport { extractStorageArgs } from '../util/validate.js';\nimport { Events } from './Events.js';\nimport { findCall, findError } from './find.js';\nconst PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)\nconst PAGE_SIZE_V = 250; // limited since the data may be > 16MB (e.g. misfiring elections)\nconst PAGE_SIZE_Q = 50; // queue of pending storage queries (mapped together, next tick)\nconst l = logger('api/init');\nlet instanceCounter = 0;\nfunction getAtQueryFn(api, { method, section }) {\n    return assertReturn(api.rx.query[section] && api.rx.query[section][method], () => `query.${section}.${method} is not available in this version of the metadata`);\n}\nexport class Decorate extends Events {\n    /**\n     * @description Create an instance of the class\n     *\n     * @param options Options object to create API instance or a Provider instance\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import Api from '@polkadot/api/promise';\n     *\n     * const api = new Api().isReady();\n     *\n     * api.rpc.subscribeNewHeads((header) => {\n     *   console.log(`new block #${header.number.toNumber()}`);\n     * });\n     * ```\n     */\n    constructor(options, type, decorateMethod) {\n        super();\n        this.__internal__runtimeLog = {};\n        this.__internal__storageGetQ = [];\n        this.__internal__storageSubQ = [];\n        // HACK Use BN import so decorateDerive works... yes, wtf.\n        this.__phantom = new BN(0);\n        this._call = {};\n        this._consts = {};\n        this._errors = {};\n        this._events = {};\n        this._extrinsicType = GenericExtrinsic.LATEST_EXTRINSIC_VERSION;\n        this._isReady = false;\n        this._query = {};\n        this._runtimeMap = {};\n        this._rx = { call: {}, consts: {}, query: {}, tx: {} };\n        /**\n         * Put the `this.onCall` function of ApiRx here, because it is needed by\n         * `api._rx`.\n         */\n        this._rxDecorateMethod = (method) => {\n            return method;\n        };\n        this.__internal__instanceId = `${++instanceCounter}`;\n        this.__internal__registry = options.source?.registry || options.registry || new TypeRegistry();\n        this._rx.callAt = (blockHash, knownVersion) => from(this.at(blockHash, knownVersion)).pipe(map((a) => a.rx.call));\n        this._rx.queryAt = (blockHash, knownVersion) => from(this.at(blockHash, knownVersion)).pipe(map((a) => a.rx.query));\n        this._rx.registry = this.__internal__registry;\n        this._decorateMethod = decorateMethod;\n        this._options = options;\n        this._type = type;\n        const provider = options.source\n            ? options.source._rpcCore.provider.isClonable\n                ? options.source._rpcCore.provider.clone()\n                : options.source._rpcCore.provider\n            : (options.provider || new WsProvider());\n        // The RPC interface decorates the known interfaces on init\n        this._rpcCore = new RpcCore(this.__internal__instanceId, this.__internal__registry, {\n            isPedantic: this._options.isPedantic,\n            provider,\n            userRpc: this._options.rpc\n        });\n        this._isConnected = new BehaviorSubject(this._rpcCore.provider.isConnected);\n        this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n    }\n    /**\n     * @description Return the current used registry\n     */\n    get registry() {\n        return this.__internal__registry;\n    }\n    /**\n     * @description Creates an instance of a type as registered\n     */\n    createType(type, ...params) {\n        return this.__internal__registry.createType(type, ...params);\n    }\n    /**\n     * @description Register additional user-defined of chain-specific types in the type registry\n     */\n    registerTypes(types) {\n        types && this.__internal__registry.register(types);\n    }\n    /**\n     * @returns `true` if the API operates with subscriptions\n     */\n    get hasSubscriptions() {\n        return this._rpcCore.provider.hasSubscriptions;\n    }\n    /**\n     * @returns `true` if the API decorate multi-key queries\n     */\n    get supportMulti() {\n        return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;\n    }\n    _emptyDecorated(registry, blockHash) {\n        return {\n            call: {},\n            consts: {},\n            errors: {},\n            events: {},\n            query: {},\n            registry,\n            rx: {\n                call: {},\n                query: {}\n            },\n            tx: createSubmittable(this._type, this._rx, this._decorateMethod, registry, blockHash)\n        };\n    }\n    _createDecorated(registry, fromEmpty, decoratedApi, blockHash) {\n        if (!decoratedApi) {\n            decoratedApi = this._emptyDecorated(registry.registry, blockHash);\n        }\n        if (fromEmpty || !registry.decoratedMeta) {\n            registry.decoratedMeta = expandMetadata(registry.registry, registry.metadata);\n        }\n        const runtime = this._decorateCalls(registry, this._decorateMethod, blockHash);\n        const runtimeRx = this._decorateCalls(registry, this._rxDecorateMethod, blockHash);\n        const storage = this._decorateStorage(registry.decoratedMeta, this._decorateMethod, blockHash);\n        const storageRx = this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod, blockHash);\n        augmentObject('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);\n        augmentObject('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);\n        augmentObject('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);\n        augmentObject('query', storage, decoratedApi.query, fromEmpty);\n        augmentObject('query', storageRx, decoratedApi.rx.query, fromEmpty);\n        augmentObject('call', runtime, decoratedApi.call, fromEmpty);\n        augmentObject('call', runtimeRx, decoratedApi.rx.call, fromEmpty);\n        decoratedApi.findCall = (callIndex) => findCall(registry.registry, callIndex);\n        decoratedApi.findError = (errorIndex) => findError(registry.registry, errorIndex);\n        decoratedApi.queryMulti = blockHash\n            ? this._decorateMultiAt(decoratedApi, this._decorateMethod, blockHash)\n            : this._decorateMulti(this._decorateMethod);\n        decoratedApi.runtimeVersion = registry.runtimeVersion;\n        return {\n            createdAt: blockHash,\n            decoratedApi,\n            decoratedMeta: registry.decoratedMeta\n        };\n    }\n    _injectMetadata(registry, fromEmpty = false) {\n        // clear the decoration, we are redoing it here\n        if (fromEmpty || !registry.decoratedApi) {\n            registry.decoratedApi = this._emptyDecorated(registry.registry);\n        }\n        const { decoratedApi, decoratedMeta } = this._createDecorated(registry, fromEmpty, registry.decoratedApi);\n        this._call = decoratedApi.call;\n        this._consts = decoratedApi.consts;\n        this._errors = decoratedApi.errors;\n        this._events = decoratedApi.events;\n        this._query = decoratedApi.query;\n        this._rx.call = decoratedApi.rx.call;\n        this._rx.query = decoratedApi.rx.query;\n        const tx = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n        const rxtx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n        if (fromEmpty || !this._extrinsics) {\n            this._extrinsics = tx;\n            this._rx.tx = rxtx;\n        }\n        else {\n            augmentObject('tx', tx, this._extrinsics, false);\n            augmentObject(null, rxtx, this._rx.tx, false);\n        }\n        augmentObject(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n        this.emit('decorated');\n    }\n    /**\n     * @deprecated\n     * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)\n     */\n    injectMetadata(metadata, fromEmpty, registry) {\n        this._injectMetadata({ counter: 0, metadata, registry: registry || this.__internal__registry, runtimeVersion: this.__internal__registry.createType('RuntimeVersionPartial') }, fromEmpty);\n    }\n    _decorateFunctionMeta(input, output) {\n        output.meta = input.meta;\n        output.method = input.method;\n        output.section = input.section;\n        output.toJSON = input.toJSON;\n        if (input.callIndex) {\n            output.callIndex = input.callIndex;\n        }\n        return output;\n    }\n    // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n    // manner to cater for both old and new:\n    //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n    //   - when non-zero, remove anything that is not in the array (we don't do this)\n    _filterRpc(methods, additional) {\n        // add any specific user-base RPCs\n        if (Object.keys(additional).length !== 0) {\n            this._rpcCore.addUserInterfaces(additional);\n            // re-decorate, only adding any new additional interfaces\n            this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);\n            this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);\n        }\n        // extract the actual sections from the methods (this is useful when\n        // we try and create mappings to runtime names via a hash mapping)\n        const sectionMap = {};\n        for (let i = 0, count = methods.length; i < count; i++) {\n            const [section] = methods[i].split('_');\n            sectionMap[section] = true;\n        }\n        // convert the actual section names into an easy name lookup\n        const sections = Object.keys(sectionMap);\n        for (let i = 0, count = sections.length; i < count; i++) {\n            const nameA = stringUpperFirst(sections[i]);\n            const nameB = `${nameA}Api`;\n            this._runtimeMap[blake2AsHex(nameA, 64)] = nameA;\n            this._runtimeMap[blake2AsHex(nameB, 64)] = nameB;\n        }\n        // finally we filter the actual methods to expose\n        this._filterRpcMethods(methods);\n    }\n    _filterRpcMethods(exposed) {\n        const hasResults = exposed.length !== 0;\n        const allKnown = [...this._rpcCore.mapping.entries()];\n        const allKeys = [];\n        const count = allKnown.length;\n        for (let i = 0; i < count; i++) {\n            const [, { alias, endpoint, method, pubsub, section }] = allKnown[i];\n            allKeys.push(`${section}_${method}`);\n            if (pubsub) {\n                allKeys.push(`${section}_${pubsub[1]}`);\n                allKeys.push(`${section}_${pubsub[2]}`);\n            }\n            if (alias) {\n                allKeys.push(...alias);\n            }\n            if (endpoint) {\n                allKeys.push(endpoint);\n            }\n        }\n        const unknown = exposed.filter((k) => !allKeys.includes(k) &&\n            !k.includes('_unstable_'));\n        if (unknown.length && !this._options.noInitWarn) {\n            l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n        }\n        // loop through all entries we have (populated in decorate) and filter as required\n        // only remove when we have results and method missing, or with no results if optional\n        for (let i = 0; i < count; i++) {\n            const [k, { method, section }] = allKnown[i];\n            if (hasResults && !exposed.includes(k) && k !== 'rpc_methods') {\n                if (this._rpc[section]) {\n                    delete this._rpc[section][method];\n                    delete this._rx.rpc[section][method];\n                }\n            }\n        }\n    }\n    _rpcSubmitter(decorateMethod) {\n        const method = (method, ...params) => {\n            return from(this._rpcCore.provider.send(method, params));\n        };\n        return decorateMethod(method);\n    }\n    _decorateRpc(rpc, decorateMethod, input = this._rpcSubmitter(decorateMethod)) {\n        const out = input;\n        const decorateFn = (section, method) => {\n            const source = rpc[section][method];\n            const fn = decorateMethod(source, { methodName: method });\n            fn.meta = source.meta;\n            fn.raw = decorateMethod(source.raw, { methodName: method });\n            return fn;\n        };\n        for (let s = 0, scount = rpc.sections.length; s < scount; s++) {\n            const section = rpc.sections[s];\n            if (!Object.prototype.hasOwnProperty.call(out, section)) {\n                const methods = Object.keys(rpc[section]);\n                const decorateInternal = (method) => decorateFn(section, method);\n                for (let m = 0, mcount = methods.length; m < mcount; m++) {\n                    const method = methods[m];\n                    //  skip subscriptions where we have a non-subscribe interface\n                    if (this.hasSubscriptions || !(method.startsWith('subscribe') || method.startsWith('unsubscribe'))) {\n                        if (!Object.prototype.hasOwnProperty.call(out, section)) {\n                            out[section] = {};\n                        }\n                        lazyMethod(out[section], method, decorateInternal);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    // add all definition entries\n    _addRuntimeDef(result, additional) {\n        if (!additional) {\n            return;\n        }\n        const entries = Object.entries(additional);\n        for (let j = 0, ecount = entries.length; j < ecount; j++) {\n            const [key, defs] = entries[j];\n            if (result[key]) {\n                // we have this one already, step through for new versions or\n                // new methods and add those as applicable\n                for (let k = 0, dcount = defs.length; k < dcount; k++) {\n                    const def = defs[k];\n                    const prev = result[key].find(({ version }) => def.version === version);\n                    if (prev) {\n                        // interleave the new methods with the old - last definition wins\n                        objectSpread(prev.methods, def.methods);\n                    }\n                    else {\n                        // we don't have this specific version, add it\n                        result[key].push(def);\n                    }\n                }\n            }\n            else {\n                // we don't have this runtime definition, add it as-is\n                result[key] = defs;\n            }\n        }\n    }\n    // extract all runtime definitions\n    _getRuntimeDefs(registry, specName, chain = '') {\n        const result = {};\n        const defValues = Object.values(typeDefinitions);\n        // options > chain/spec > built-in, apply in reverse order with\n        // methods overriding previous definitions (or interleave missing)\n        for (let i = 0, count = defValues.length; i < count; i++) {\n            this._addRuntimeDef(result, defValues[i].runtime);\n        }\n        this._addRuntimeDef(result, getSpecRuntime(registry, chain, specName));\n        this._addRuntimeDef(result, this._options.runtime);\n        return Object.entries(result);\n    }\n    // pre-metadata decoration\n    _decorateCalls({ registry, runtimeVersion: { apis, specName, specVersion } }, decorateMethod, blockHash) {\n        const result = {};\n        const named = {};\n        const hashes = {};\n        const sections = this._getRuntimeDefs(registry, specName, this._runtimeChain);\n        const older = [];\n        const implName = `${specName.toString()}/${specVersion.toString()}`;\n        const hasLogged = this.__internal__runtimeLog[implName] || false;\n        this.__internal__runtimeLog[implName] = true;\n        for (let i = 0, scount = sections.length; i < scount; i++) {\n            const [_section, secs] = sections[i];\n            const sectionHash = blake2AsHex(_section, 64);\n            const rtApi = apis.find(([a]) => a.eq(sectionHash));\n            hashes[sectionHash] = true;\n            if (rtApi) {\n                const all = secs.map(({ version }) => version).sort();\n                const sec = secs.find(({ version }) => rtApi[1].eq(version));\n                if (sec) {\n                    const section = stringCamelCase(_section);\n                    const methods = Object.entries(sec.methods);\n                    if (methods.length) {\n                        if (!named[section]) {\n                            named[section] = {};\n                        }\n                        for (let m = 0, mcount = methods.length; m < mcount; m++) {\n                            const [_method, def] = methods[m];\n                            const method = stringCamelCase(_method);\n                            named[section][method] = objectSpread({ method, name: `${_section}_${_method}`, section, sectionHash }, def);\n                        }\n                    }\n                }\n                else {\n                    older.push(`${_section}/${rtApi[1].toString()} (${all.join('/')} known)`);\n                }\n            }\n        }\n        // find the runtimes that we don't have hashes for\n        const notFound = apis\n            .map(([a, v]) => [a.toHex(), v.toString()])\n            .filter(([a]) => !hashes[a])\n            .map(([a, v]) => `${this._runtimeMap[a] || a}/${v}`);\n        if (!this._options.noInitWarn && !hasLogged) {\n            if (older.length) {\n                l.warn(`${implName}: Not decorating runtime apis without matching versions: ${older.join(', ')}`);\n            }\n            if (notFound.length) {\n                l.warn(`${implName}: Not decorating unknown runtime apis: ${notFound.join(', ')}`);\n            }\n        }\n        const stateCall = blockHash\n            ? (name, bytes) => this._rpcCore.state.call(name, bytes, blockHash)\n            : (name, bytes) => this._rpcCore.state.call(name, bytes);\n        const lazySection = (section) => lazyMethods({}, Object.keys(named[section]), (method) => this._decorateCall(registry, named[section][method], stateCall, decorateMethod));\n        const modules = Object.keys(named);\n        for (let i = 0, count = modules.length; i < count; i++) {\n            lazyMethod(result, modules[i], lazySection);\n        }\n        return result;\n    }\n    _decorateCall(registry, def, stateCall, decorateMethod) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const decorated = decorateMethod((...args) => {\n            if (args.length !== def.params.length) {\n                throw new Error(`${def.name}:: Expected ${def.params.length} arguments, found ${args.length}`);\n            }\n            const bytes = registry.createType('Raw', u8aConcatStrict(args.map((a, i) => registry.createTypeUnsafe(def.params[i].type, [a]).toU8a())));\n            return stateCall(def.name, bytes).pipe(map((r) => registry.createTypeUnsafe(def.type, [r])));\n        });\n        decorated.meta = def;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorated;\n    }\n    // only be called if supportMulti is true\n    _decorateMulti(decorateMethod) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod((keys) => keys.length\n            ? (this.hasSubscriptions\n                ? this._rpcCore.state.subscribeStorage\n                : this._rpcCore.state.queryStorageAt)(keys.map((args) => Array.isArray(args)\n                ? args[0].creator.meta.type.isPlain\n                    ? [args[0].creator]\n                    : args[0].creator.meta.type.asMap.hashers.length === 1\n                        ? [args[0].creator, args.slice(1)]\n                        : [args[0].creator, ...args.slice(1)]\n                : [args.creator]))\n            : of([]));\n    }\n    _decorateMultiAt(atApi, decorateMethod, blockHash) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod((calls) => calls.length\n            ? this._rpcCore.state.queryStorageAt(calls.map((args) => {\n                if (Array.isArray(args)) {\n                    const { creator } = getAtQueryFn(atApi, args[0].creator);\n                    return creator.meta.type.isPlain\n                        ? [creator]\n                        : creator.meta.type.asMap.hashers.length === 1\n                            ? [creator, args.slice(1)]\n                            : [creator, ...args.slice(1)];\n                }\n                return [getAtQueryFn(atApi, args.creator).creator];\n            }), blockHash)\n            : of([]));\n    }\n    _decorateExtrinsics({ tx }, decorateMethod) {\n        const result = createSubmittable(this._type, this._rx, decorateMethod);\n        const lazySection = (section) => lazyMethods({}, Object.keys(tx[section]), (method) => method.startsWith('$')\n            ? tx[section][method]\n            : this._decorateExtrinsicEntry(tx[section][method], result));\n        const sections = Object.keys(tx);\n        for (let i = 0, count = sections.length; i < count; i++) {\n            lazyMethod(result, sections[i], lazySection);\n        }\n        return result;\n    }\n    _decorateExtrinsicEntry(method, creator) {\n        const decorated = (...params) => creator(method(...params));\n        // pass through the `.is`\n        decorated.is = (other) => method.is(other);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this._decorateFunctionMeta(method, decorated);\n    }\n    _decorateStorage({ query, registry }, decorateMethod, blockHash) {\n        const result = {};\n        const lazySection = (section) => lazyMethods({}, Object.keys(query[section]), (method) => blockHash\n            ? this._decorateStorageEntryAt(registry, query[section][method], decorateMethod, blockHash)\n            : this._decorateStorageEntry(query[section][method], decorateMethod));\n        const sections = Object.keys(query);\n        for (let i = 0, count = sections.length; i < count; i++) {\n            lazyMethod(result, sections[i], lazySection);\n        }\n        return result;\n    }\n    _decorateStorageEntry(creator, decorateMethod) {\n        const getArgs = (args, registry) => extractStorageArgs(registry || this.__internal__registry, creator, args);\n        const getQueryAt = (blockHash) => from(this.at(blockHash)).pipe(map((api) => getAtQueryFn(api, creator)));\n        // Disable this where it occurs for each field we are decorating\n        /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n        const decorated = this._decorateStorageCall(creator, decorateMethod);\n        decorated.creator = creator;\n        // eslint-disable-next-line deprecation/deprecation\n        decorated.at = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe(switchMap((q) => q(...args))));\n        decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));\n        decorated.is = (key) => key.section === creator.section &&\n            key.method === creator.method;\n        decorated.key = (...args) => u8aToHex(compactStripLength(creator(...args))[1]);\n        decorated.keyPrefix = (...args) => u8aToHex(creator.keyPrefix(...args));\n        decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));\n        // eslint-disable-next-line deprecation/deprecation\n        decorated.sizeAt = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe(switchMap((q) => this._rpcCore.state.getStorageSize(getArgs(args, q.creator.meta.registry), blockHash))));\n        // .keys() & .entries() only available on map types\n        if (creator.iterKey && creator.meta.type.isMap) {\n            decorated.entries = decorateMethod(memo(this.__internal__instanceId, (...args) => this._retrieveMapEntries(creator, null, args)));\n            // eslint-disable-next-line deprecation/deprecation\n            decorated.entriesAt = decorateMethod(memo(this.__internal__instanceId, (blockHash, ...args) => getQueryAt(blockHash).pipe(switchMap((q) => this._retrieveMapEntries(q.creator, blockHash, args)))));\n            decorated.entriesPaged = decorateMethod(memo(this.__internal__instanceId, (opts) => this._retrieveMapEntriesPaged(creator, undefined, opts)));\n            decorated.keys = decorateMethod(memo(this.__internal__instanceId, (...args) => this._retrieveMapKeys(creator, null, args)));\n            // eslint-disable-next-line deprecation/deprecation\n            decorated.keysAt = decorateMethod(memo(this.__internal__instanceId, (blockHash, ...args) => getQueryAt(blockHash).pipe(switchMap((q) => this._retrieveMapKeys(q.creator, blockHash, args)))));\n            decorated.keysPaged = decorateMethod(memo(this.__internal__instanceId, (opts) => this._retrieveMapKeysPaged(creator, undefined, opts)));\n        }\n        if (this.supportMulti && creator.meta.type.isMap) {\n            // When using double map storage function, user need to pass double map key as an array\n            decorated.multi = decorateMethod((args) => creator.meta.type.asMap.hashers.length === 1\n                ? this._retrieveMulti(args.map((a) => [creator, [a]]))\n                : this._retrieveMulti(args.map((a) => [creator, a])));\n        }\n        /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n        return this._decorateFunctionMeta(creator, decorated);\n    }\n    _decorateStorageEntryAt(registry, creator, decorateMethod, blockHash) {\n        const getArgs = (args) => extractStorageArgs(registry, creator, args);\n        // Disable this where it occurs for each field we are decorating\n        /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n        const decorated = decorateMethod((...args) => this._rpcCore.state.getStorage(getArgs(args), blockHash));\n        decorated.creator = creator;\n        decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args), blockHash));\n        decorated.is = (key) => key.section === creator.section &&\n            key.method === creator.method;\n        decorated.key = (...args) => u8aToHex(compactStripLength(creator(...args))[1]);\n        decorated.keyPrefix = (...keys) => u8aToHex(creator.keyPrefix(...keys));\n        decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args), blockHash));\n        // .keys() & .entries() only available on map types\n        if (creator.iterKey && creator.meta.type.isMap) {\n            decorated.entries = decorateMethod(memo(this.__internal__instanceId, (...args) => this._retrieveMapEntries(creator, blockHash, args)));\n            decorated.entriesPaged = decorateMethod(memo(this.__internal__instanceId, (opts) => this._retrieveMapEntriesPaged(creator, blockHash, opts)));\n            decorated.keys = decorateMethod(memo(this.__internal__instanceId, (...args) => this._retrieveMapKeys(creator, blockHash, args)));\n            decorated.keysPaged = decorateMethod(memo(this.__internal__instanceId, (opts) => this._retrieveMapKeysPaged(creator, blockHash, opts)));\n        }\n        if (this.supportMulti && creator.meta.type.isMap) {\n            // When using double map storage function, user need to pass double map key as an array\n            decorated.multi = decorateMethod((args) => creator.meta.type.asMap.hashers.length === 1\n                ? this._retrieveMulti(args.map((a) => [creator, [a]]), blockHash)\n                : this._retrieveMulti(args.map((a) => [creator, a]), blockHash));\n        }\n        /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n        return this._decorateFunctionMeta(creator, decorated);\n    }\n    _queueStorage(call, queue) {\n        const query = queue === this.__internal__storageSubQ\n            ? this._rpcCore.state.subscribeStorage\n            : this._rpcCore.state.queryStorageAt;\n        let queueIdx = queue.length - 1;\n        let valueIdx = 0;\n        let valueObs;\n        // if we don't have queue entries yet,\n        // or the current queue has fired (see from below),\n        // or the current queue has the max entries,\n        // then we create a new queue\n        if (queueIdx === -1 || !queue[queueIdx] || queue[queueIdx][1].length === PAGE_SIZE_Q) {\n            queueIdx++;\n            valueObs = from(\n            // we delay the execution until the next tick, this allows\n            // any queries made in this timeframe to be added to the same\n            // queue for a single query\n            new Promise((resolve) => {\n                nextTick(() => {\n                    // get all the calls in this instance, resolve with it\n                    // and then clear the queue so we don't add more\n                    // (anything after this will be added to a new queue)\n                    const calls = queue[queueIdx][1];\n                    delete queue[queueIdx];\n                    resolve(calls);\n                });\n            })).pipe(switchMap((calls) => query(calls)));\n            queue.push([valueObs, [call]]);\n        }\n        else {\n            valueObs = queue[queueIdx][0];\n            valueIdx = queue[queueIdx][1].length;\n            queue[queueIdx][1].push(call);\n        }\n        return valueObs.pipe(\n        // return the single value at this index\n        map((values) => values[valueIdx]));\n    }\n    // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n    // we make a subscription, alternatively we push this through a single-shot query\n    _decorateStorageCall(creator, decorateMethod) {\n        const memoed = memo(this.__internal__instanceId, (...args) => {\n            const call = extractStorageArgs(this.__internal__registry, creator, args);\n            if (!this.hasSubscriptions) {\n                return this._rpcCore.state.getStorage(call);\n            }\n            return this._queueStorage(call, this.__internal__storageSubQ);\n        });\n        return decorateMethod(memoed, {\n            methodName: creator.method,\n            overrideNoSub: (...args) => this._queueStorage(extractStorageArgs(this.__internal__registry, creator, args), this.__internal__storageGetQ)\n        });\n    }\n    // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes\n    _retrieveMulti(keys, blockHash) {\n        if (!keys.length) {\n            return of([]);\n        }\n        const query = this.hasSubscriptions && !blockHash\n            ? this._rpcCore.state.subscribeStorage\n            : this._rpcCore.state.queryStorageAt;\n        if (keys.length <= PAGE_SIZE_V) {\n            return blockHash\n                ? query(keys, blockHash)\n                : query(keys);\n        }\n        return combineLatest(arrayChunk(keys, PAGE_SIZE_V).map((k) => blockHash\n            ? query(k, blockHash)\n            : query(k))).pipe(map(arrayFlatten));\n    }\n    _retrieveMapKeys({ iterKey, meta, method, section }, at, args) {\n        if (!iterKey || !meta.type.isMap) {\n            throw new Error('keys can only be retrieved on maps');\n        }\n        const headKey = iterKey(...args).toHex();\n        const startSubject = new BehaviorSubject(headKey);\n        const query = at\n            ? (startKey) => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at)\n            : (startKey) => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);\n        const setMeta = (key) => key.setMeta(meta, section, method);\n        return startSubject.pipe(switchMap(query), map((keys) => keys.map(setMeta)), tap((keys) => nextTick(() => {\n            keys.length === PAGE_SIZE_K\n                ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex())\n                : startSubject.complete();\n        })), toArray(), // toArray since we want to startSubject to be completed\n        map(arrayFlatten));\n    }\n    _retrieveMapKeysPaged({ iterKey, meta, method, section }, at, opts) {\n        if (!iterKey || !meta.type.isMap) {\n            throw new Error('keys can only be retrieved on maps');\n        }\n        const setMeta = (key) => key.setMeta(meta, section, method);\n        const query = at\n            ? (headKey) => this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey, at)\n            : (headKey) => this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey);\n        return query(iterKey(...opts.args).toHex()).pipe(map((keys) => keys.map(setMeta)));\n    }\n    _retrieveMapEntries(entry, at, args) {\n        const query = at\n            ? (keys) => this._rpcCore.state.queryStorageAt(keys, at)\n            : (keys) => this._rpcCore.state.queryStorageAt(keys);\n        return this._retrieveMapKeys(entry, at, args).pipe(switchMap((keys) => keys.length\n            ? combineLatest(arrayChunk(keys, PAGE_SIZE_V).map(query)).pipe(map((valsArr) => arrayFlatten(valsArr).map((value, index) => [keys[index], value])))\n            : of([])));\n    }\n    _retrieveMapEntriesPaged(entry, at, opts) {\n        const query = at\n            ? (keys) => this._rpcCore.state.queryStorageAt(keys, at)\n            : (keys) => this._rpcCore.state.queryStorageAt(keys);\n        return this._retrieveMapKeysPaged(entry, at, opts).pipe(switchMap((keys) => keys.length\n            ? query(keys).pipe(map((valsArr) => valsArr.map((value, index) => [keys[index], value])))\n            : of([])));\n    }\n    _decorateDeriveRx(decorateMethod) {\n        const specName = this._runtimeVersion?.specName.toString();\n        // Pull in derive from api-derive\n        const available = getAvailableDerives(this.__internal__instanceId, this._rx, objectSpread({}, this._options.derives, this._options.typesBundle?.spec?.[specName || '']?.derives));\n        return decorateDeriveSections(decorateMethod, available);\n    }\n    _decorateDerive(decorateMethod) {\n        return decorateDeriveSections(decorateMethod, this._rx.derive);\n    }\n}\n", "import { lazyMethods, logger, objectClear } from '@polkadot/util';\nconst l = logger('api/augment');\nfunction logLength(type, values, and = []) {\n    return values.length\n        ? ` ${values.length} ${type}${and.length ? ' and' : ''}`\n        : '';\n}\nfunction logValues(type, values) {\n    return values.length\n        ? `\\n\\t${type.padStart(7)}: ${values.sort().join(', ')}`\n        : '';\n}\nfunction warn(prefix, type, [added, removed]) {\n    if (added.length || removed.length) {\n        l.warn(`api.${prefix}: Found${logLength('added', added, removed)}${logLength('removed', removed)} ${type}:${logValues('added', added)}${logValues('removed', removed)}`);\n    }\n}\nfunction findSectionExcludes(a, b) {\n    return a.filter((s) => !b.includes(s));\n}\nfunction findSectionIncludes(a, b) {\n    return a.filter((s) => b.includes(s));\n}\nfunction extractSections(src, dst) {\n    const srcSections = Object.keys(src);\n    const dstSections = Object.keys(dst);\n    return [\n        findSectionExcludes(srcSections, dstSections),\n        findSectionExcludes(dstSections, srcSections)\n    ];\n}\nfunction findMethodExcludes(src, dst) {\n    const srcSections = Object.keys(src);\n    const dstSections = findSectionIncludes(Object.keys(dst), srcSections);\n    const excludes = [];\n    for (let s = 0, scount = dstSections.length; s < scount; s++) {\n        const section = dstSections[s];\n        const srcMethods = Object.keys(src[section]);\n        const dstMethods = Object.keys(dst[section]);\n        for (let d = 0, mcount = dstMethods.length; d < mcount; d++) {\n            const method = dstMethods[d];\n            if (!srcMethods.includes(method)) {\n                excludes.push(`${section}.${method}`);\n            }\n        }\n    }\n    return excludes;\n}\nfunction extractMethods(src, dst) {\n    return [\n        findMethodExcludes(dst, src),\n        findMethodExcludes(src, dst)\n    ];\n}\n/**\n * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is\n * already available, but rather just adds new missing items into the result object.\n * @internal\n */\nexport function augmentObject(prefix, src, dst, fromEmpty = false) {\n    fromEmpty && objectClear(dst);\n    // NOTE: This part is slightly problematic since it will get the\n    // values for at least all the sections and the names of the methods\n    // (Since methods won't be decorated before lazy, this _may_ be ok)\n    if (prefix && Object.keys(dst).length) {\n        warn(prefix, 'modules', extractSections(src, dst));\n        warn(prefix, 'calls', extractMethods(src, dst));\n    }\n    const sections = Object.keys(src);\n    for (let i = 0, count = sections.length; i < count; i++) {\n        const section = sections[i];\n        const methods = src[section];\n        // We don't set here with a lazy interface, we decorate based\n        // on the top-level structure (this bypasses adding lazy onto lazy)\n        if (!dst[section]) {\n            dst[section] = {};\n        }\n        lazyMethods(dst[section], Object.keys(methods), (m) => methods[m]);\n    }\n    return dst;\n}\n", "import { isUndefined } from '@polkadot/util';\nfunction sig({ lookup }, { method, section }, args) {\n    return `${section}.${method}(${args.map((a) => lookup.getTypeDef(a).type).join(', ')})`;\n}\nexport function extractStorageArgs(registry, creator, _args) {\n    const args = _args.filter((a) => !isUndefined(a));\n    if (creator.meta.type.isPlain) {\n        if (args.length !== 0) {\n            throw new Error(`${sig(registry, creator, [])} does not take any arguments, ${args.length} found`);\n        }\n    }\n    else {\n        const { hashers, key } = creator.meta.type.asMap;\n        const keys = hashers.length === 1\n            ? [key]\n            : registry.lookup.getSiType(key).def.asTuple.map((t) => t);\n        if (args.length !== keys.length) {\n            throw new Error(`${sig(registry, creator, keys)} is a map, requiring ${keys.length} arguments, ${args.length} found`);\n        }\n    }\n    // pass as tuple\n    return [creator, args];\n}\n", "import { EventEmitter } from 'eventemitter3';\nexport class Events {\n    constructor() {\n        this.__internal__eventemitter = new EventEmitter();\n    }\n    emit(type, ...args) {\n        return this.__internal__eventemitter.emit(type, ...args);\n    }\n    /**\n     * @description Attach an eventemitter handler to listen to a specific event\n     *\n     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.on('connected', (): void => {\n     *   console.log('API has been connected to the endpoint');\n     * });\n     *\n     * api.on('disconnected', (): void => {\n     *   console.log('API has been disconnected from the endpoint');\n     * });\n     * ```\n     */\n    on(type, handler) {\n        this.__internal__eventemitter.on(type, handler);\n        return this;\n    }\n    /**\n     * @description Remove the given eventemitter handler\n     *\n     * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to unregister.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const handler = (): void => {\n     *  console.log('Connected !);\n     * };\n     *\n     * // Start listening\n     * api.on('connected', handler);\n     *\n     * // Stop listening\n     * api.off('connected', handler);\n     * ```\n     */\n    off(type, handler) {\n        this.__internal__eventemitter.removeListener(type, handler);\n        return this;\n    }\n    /**\n     * @description Attach an one-time eventemitter handler to listen to a specific event\n     *\n     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.once('connected', (): void => {\n     *   console.log('API has been connected to the endpoint');\n     * });\n     *\n     * api.once('disconnected', (): void => {\n     *   console.log('API has been disconnected from the endpoint');\n     * });\n     * ```\n     */\n    once(type, handler) {\n        this.__internal__eventemitter.once(type, handler);\n        return this;\n    }\n}\n", "import { isFunction } from '@polkadot/util';\nexport class Combinator {\n    constructor(fns, callback) {\n        this.__internal__allHasFired = false;\n        this.__internal__fired = [];\n        this.__internal__fns = [];\n        this.__internal__isActive = true;\n        this.__internal__results = [];\n        this.__internal__subscriptions = [];\n        this.__internal__callback = callback;\n        // eslint-disable-next-line @typescript-eslint/require-await\n        this.__internal__subscriptions = fns.map(async (input, index) => {\n            const [fn, ...args] = Array.isArray(input)\n                ? input\n                : [input];\n            this.__internal__fired.push(false);\n            this.__internal__fns.push(fn);\n            // Not quite 100% how to have a variable number at the front here\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types\n            return fn(...args, this._createCallback(index));\n        });\n    }\n    _allHasFired() {\n        this.__internal__allHasFired ||= this.__internal__fired.filter((hasFired) => !hasFired).length === 0;\n        return this.__internal__allHasFired;\n    }\n    _createCallback(index) {\n        return (value) => {\n            this.__internal__fired[index] = true;\n            this.__internal__results[index] = value;\n            this._triggerUpdate();\n        };\n    }\n    _triggerUpdate() {\n        if (!this.__internal__isActive || !isFunction(this.__internal__callback) || !this._allHasFired()) {\n            return;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.__internal__callback(this.__internal__results);\n        }\n        catch {\n            // swallow, we don't want the handler to trip us up\n        }\n    }\n    unsubscribe() {\n        if (!this.__internal__isActive) {\n            return;\n        }\n        this.__internal__isActive = false;\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this.__internal__subscriptions.forEach(async (subscription) => {\n            try {\n                const unsubscribe = await subscription;\n                if (isFunction(unsubscribe)) {\n                    unsubscribe();\n                }\n            }\n            catch {\n                // ignore\n            }\n        });\n    }\n}\n", "import { catchError, EMPTY, tap } from 'rxjs';\nimport { isFunction, nextTick } from '@polkadot/util';\nexport function promiseTracker(resolve, reject) {\n    let isCompleted = false;\n    return {\n        reject: (error) => {\n            if (!isCompleted) {\n                isCompleted = true;\n                reject(error);\n            }\n            return EMPTY;\n        },\n        resolve: (value) => {\n            if (!isCompleted) {\n                isCompleted = true;\n                resolve(value);\n            }\n        }\n    };\n}\nfunction extractArgs(args, needsCallback) {\n    const actualArgs = args.slice();\n    // If the last arg is a function, we pop it, put it into callback.\n    // actualArgs will then hold the actual arguments to be passed to `method`\n    const callback = (args.length && isFunction(args[args.length - 1]))\n        ? actualArgs.pop()\n        : undefined;\n    // When we need a subscription, ensure that a valid callback is actually passed\n    if (needsCallback && !isFunction(callback)) {\n        throw new Error('Expected a callback to be passed with subscriptions');\n    }\n    return [actualArgs, callback];\n}\nfunction decorateCall(method, args) {\n    return new Promise((resolve, reject) => {\n        // single result tracker - either reject with Error or resolve with Codec result\n        const tracker = promiseTracker(resolve, reject);\n        // encoding errors reject immediately, any result unsubscribes and resolves\n        const subscription = method(...args)\n            .pipe(catchError((error) => tracker.reject(error)))\n            .subscribe((result) => {\n            tracker.resolve(result);\n            nextTick(() => subscription.unsubscribe());\n        });\n    });\n}\nfunction decorateSubscribe(method, args, resultCb) {\n    return new Promise((resolve, reject) => {\n        // either reject with error or resolve with unsubscribe callback\n        const tracker = promiseTracker(resolve, reject);\n        // errors reject immediately, the first result resolves with an unsubscribe promise, all results via callback\n        const subscription = method(...args)\n            .pipe(catchError((error) => tracker.reject(error)), tap(() => tracker.resolve(() => subscription.unsubscribe())))\n            .subscribe((result) => {\n            // queue result (back of queue to clear current)\n            nextTick(() => resultCb(result));\n        });\n    });\n}\n/**\n * @description Decorate method for ApiPromise, where the results are converted to the Promise equivalent\n */\nexport function toPromiseMethod(method, options) {\n    const needsCallback = !!(options && options.methodName && options.methodName.includes('subscribe'));\n    return function (...args) {\n        const [actualArgs, resultCb] = extractArgs(args, needsCallback);\n        return resultCb\n            ? decorateSubscribe(method, actualArgs, resultCb)\n            : decorateCall(options?.overrideNoSub || method, actualArgs);\n    };\n}\n", "export { ApiRx } from './Api.js';\nexport { toRxMethod } from './decorateMethod.js';\n", "import { from } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { ApiBase } from '../base/index.js';\nimport { toRxMethod } from './decorateMethod.js';\n/**\n * # @polkadot/api/rx\n *\n * ## Overview\n *\n * @name ApiRx\n *\n * @description\n * ApiRx is a powerful RxJS Observable wrapper around the RPC and interfaces on the Polkadot network. As a full Observable API, all interface calls return RxJS Observables, including the static `.create(...)`. In the same fashion and subscription-based methods return long-running Observables that update with the latest values.\n *\n * The API is well suited to real-time applications where the latest state is needed, unlocking the subscription-based features of Polkadot (and Substrate) clients. Some familiarity with RxJS is a requirement to use the API, however just understanding `.subscribe` and `.pipe` on Observables will unlock full-scale use thereof.\n *\n * @see [[ApiPromise]]\n *\n * ## Usage\n *\n * Making rpc calls -\n * <BR>\n *\n * ```javascript\n * import ApiRx from '@polkadot/api/rx';\n *\n * // initialize via Promise & static create\n * const api = await ApiRx.create().toPromise();\n *\n * // make a call to retrieve the current network head\n * api.rpc.chain.subscribeNewHeads().subscribe((header) => {\n *   console.log(`Chain is at #${header.number}`);\n * });\n * ```\n * <BR>\n *\n * Subscribing to chain state -\n * <BR>\n *\n * ```javascript\n * import { combineLatest, pairwise, switchMap } from 'rxjs';\n * import { ApiRx, WsProvider } from '@polkadot/api';\n *\n *\n * // initialize a provider with a specific endpoint\n * const provider = new WsProvider('wss://example.com:9944')\n *\n * // initialize via isReady & new with specific provider\n * new ApiRx({ provider })\n *   .isReady\n *   .pipe(\n *     switchMap((api) =>\n *       combineLatest([\n *         api.query.timestamp.blockPeriod(),\n *         api.query.timestamp.now().pipe(pairwise())\n *       ])\n *     )\n *   )\n *   .subscribe(([blockPeriod, timestamp]) => {\n *      const elapsed = timestamp[1].toNumber() - timestamp[0].toNumber();\n *      console.log(`timestamp ${timestamp[1]} \\nelapsed ${elapsed} \\n(${blockPeriod}s target)`);\n *   });\n * ```\n * <BR>\n *\n * Submitting a transaction -\n * <BR>\n *\n * ```javascript\n * import { first, switchMap } from 'rxjs';\n * import ApiRx from '@polkadot/api/rx';\n *\n * // import the test keyring (already has dev keys for Alice, Bob, Charlie, Eve & Ferdie)\n * import testingPairs from '@polkadot/keyring/testingPairs';\n * const keyring = testingPairs();\n *\n * // get api via Promise\n * const api = await ApiRx.create().toPromise();\n *\n * // retrieve nonce for the account\n * api.query.system\n *   .account(keyring.alice.address)\n *   .pipe(\n *      first(),\n *      // pipe nonce into transfer\n *      switchMap(([nonce]) =>\n *        api.tx.balances\n *          // create transfer\n *          .transfer(keyring.bob.address, 12345)\n *          // sign the transaction\n *          .sign(keyring.alice, { nonce })\n *          // send the transaction\n *          .send()\n *      )\n *   )\n *   // subscribe to overall result\n *   .subscribe(({ status }) => {\n *     if (status.isInBlock) {\n *       console.log('Completed at block hash', status.asFinalized.toHex());\n *     }\n *   });\n * ```\n */\nexport class ApiRx extends ApiBase {\n    /**\n     * @description Create an instance of the ApiRx class\n     * @param options Options to create an instance. Can be either [[ApiOptions]] or [[WsProvider]]\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import { switchMap } from 'rxjs';\n     * import Api from '@polkadot/api/rx';\n     *\n     * new Api().isReady\n     *   .pipe(\n     *     switchMap((api) =>\n     *       api.rpc.chain.subscribeNewHeads()\n     *   ))\n     *   .subscribe((header) => {\n     *     console.log(`new block #${header.number.toNumber()}`);\n     *   });\n     * ```\n     */\n    constructor(options) {\n        super(options, 'rxjs', toRxMethod);\n        this.__internal__isReadyRx = from(\n        // You can create an observable from an event, however my mind groks this form better\n        new Promise((resolve) => {\n            super.on('ready', () => resolve(this));\n        }));\n    }\n    /**\n     * @description Creates an ApiRx instance using the supplied provider. Returns an Observable containing the actual Api instance.\n     * @param options options that is passed to the class constructor. Can be either [[ApiOptions]] or [[WsProvider]]\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * import { switchMap } from 'rxjs';\n     * import Api from '@polkadot/api/rx';\n     *\n     * Api.create()\n     *   .pipe(\n     *     switchMap((api) =>\n     *       api.rpc.chain.subscribeNewHeads()\n     *   ))\n     *   .subscribe((header) => {\n     *     console.log(`new block #${header.number.toNumber()}`);\n     *   });\n     * ```\n     */\n    static create(options) {\n        return new ApiRx(options).isReady;\n    }\n    /**\n     * @description Observable that returns the first time we are connected and loaded\n     */\n    get isReady() {\n        return this.__internal__isReadyRx;\n    }\n    /**\n     * @description Returns a clone of this ApiRx instance (new underlying provider connection)\n     */\n    clone() {\n        return new ApiRx(objectSpread({}, this._options, { source: this }));\n    }\n}\n", "export function toRxMethod(method) {\n    return method;\n}\n", "import * as rpc from './rpc.json.js';\nimport * as typesDebug from './types-debug.json.js';\nimport * as typesMessage from './types-message.json.js';\nimport * as typesMetadata from './types-metadata.json.js';\nimport * as typesProgram from './types-program.json.js';\nimport { transformTypes } from '../utils/types.js';\n\nconst gearRpc = transformTypes(rpc).rpc;\nconst gearTypes = {\n    ...transformTypes(typesMetadata).types,\n    ...transformTypes(typesProgram).types,\n    ...transformTypes(typesMessage).types,\n    ...transformTypes(typesDebug).types,\n};\n\nexport { gearRpc, gearTypes };\n", "var rpc = {\n\tgear: {\n\t\tcalculateInitUploadGas: {\n\t\t\tdescription: \"Calculate gas for Init message using upload_program extrinsic\",\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"source\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"code\",\n\t\t\t\t\ttype: \"Vec<u8>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"payload\",\n\t\t\t\t\ttype: \"Vec<u8>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"value\",\n\t\t\t\t\ttype: \"u128\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"allow_other_panics\",\n\t\t\t\t\ttype: \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"GasInfo\"\n\t\t},\n\t\tcalculateInitCreateGas: {\n\t\t\tdescription: \"Calculate gas for Init message using create_program extrinsic\",\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"source\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"code_id\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"payload\",\n\t\t\t\t\ttype: \"Vec<u8>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"value\",\n\t\t\t\t\ttype: \"u128\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"allow_other_panics\",\n\t\t\t\t\ttype: \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"GasInfo\"\n\t\t},\n\t\tcalculateHandleGas: {\n\t\t\tdescription: \"Calculate gas for Handle message\",\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"source\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"dest\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"payload\",\n\t\t\t\t\ttype: \"Vec<u8>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"value\",\n\t\t\t\t\ttype: \"u128\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"allow_other_panics\",\n\t\t\t\t\ttype: \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"GasInfo\"\n\t\t},\n\t\tcalculateReplyGas: {\n\t\t\tdescription: \"Calculate gas for Reply message\",\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"source\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"message_id\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"payload\",\n\t\t\t\t\ttype: \"Vec<u8>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"value\",\n\t\t\t\t\ttype: \"u128\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"allow_other_panics\",\n\t\t\t\t\ttype: \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"GasInfo\"\n\t\t},\n\t\treadMetahash: {\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"program_id\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"at\",\n\t\t\t\t\ttype: \"Option<BlockHash>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"H256\"\n\t\t},\n\t\treadState: {\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"program_id\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"at\",\n\t\t\t\t\ttype: \"Option<BlockHash>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Bytes\"\n\t\t},\n\t\treadStateUsingWasm: {\n\t\t\tparams: [\n\t\t\t\t{\n\t\t\t\t\tname: \"program_id\",\n\t\t\t\t\ttype: \"H256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"fn_name\",\n\t\t\t\t\ttype: \"Bytes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"wasm\",\n\t\t\t\t\ttype: \"Bytes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"argument\",\n\t\t\t\t\ttype: \"Option<Bytes>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"at\",\n\t\t\t\t\ttype: \"Option<BlockHash>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Bytes\"\n\t\t}\n\t},\n\tchainSpec_unstable: {\n\t\tchainName: {\n\t\t\tparams: [\n\t\t\t],\n\t\t\ttype: \"String\"\n\t\t},\n\t\tproperties: {\n\t\t\tparams: [\n\t\t\t],\n\t\t\ttype: \"String\"\n\t\t},\n\t\tgenesisHash: {\n\t\t\tparams: [\n\t\t\t],\n\t\t\ttype: \"H256\"\n\t\t}\n\t},\n\ttransaction_unstable: {\n\t\tsubmitAndWatch: {\n\t\t\tparams: [\n\t\t\t]\n\t\t},\n\t\tunwatch: {\n\t\t\tparams: [\n\t\t\t]\n\t\t}\n\t},\n\truntime: {\n\t\twasmBlobVersion: {\n\t\t\tdescription: \"Returns the version of the WASM blob in storage.\",\n\t\t\tparams: [\n\t\t\t],\n\t\t\ttype: \"String\"\n\t\t}\n\t}\n};\nvar rpc$1 = {\n\trpc: rpc\n};\n\nexport { rpc$1 as default, rpc };\n", "var types = {\n\tProgramDetails: {\n\t\tid: \"H256\",\n\t\tstatic_pages: \"u32\",\n\t\tpersistent_pages: \"BTreeMap<u32, Vec<u8>>\",\n\t\tcode_hash: \"H256\",\n\t\tnonce: \"u64\"\n\t},\n\tDebugData: {\n\t\tdispatch_queue: \"Vec<QueuedDispatch>\",\n\t\tprograms: \"Vec<ProgramDetails>\"\n\t}\n};\nvar typesDebug = {\n\ttypes: types\n};\n\nexport { typesDebug as default, types };\n", "var types = {\n\tMessageId: \"[u8;32]\",\n\tPayload: \"Vec<u8>\",\n\tValue: \"Compact<u128>\",\n\tDispatch: {\n\t\tkind: \"DispatchKind\",\n\t\tmessage: \"Message\"\n\t},\n\tDispatchKind: {\n\t\t_enum: [\n\t\t\t\"Init\",\n\t\t\t\"Handle\",\n\t\t\t\"Reply\",\n\t\t\t\"Signal\"\n\t\t]\n\t},\n\tReason: {\n\t\t_enum: {\n\t\t\t\"Error\": \"Null\",\n\t\t\tValueTransfer: \"Null\",\n\t\t\tDispatch: \"Vec<u8>\"\n\t\t}\n\t},\n\tDispatchOutcome: {\n\t\tmessage_id: \"H256\",\n\t\toutcome: \"ExecutionResult\"\n\t},\n\tMessageInfo: {\n\t\tmessage_id: \"H256\",\n\t\tprogram_id: \"H256\",\n\t\torigin: \"H256\"\n\t},\n\tUserStoredMessage: {\n\t\tid: \"MessageId\",\n\t\tsource: \"ProgramId\",\n\t\tdestination: \"ProgramId\",\n\t\tpayload: \"Payload\",\n\t\tvalue: \"Value\"\n\t},\n\tInterval: {\n\t\tstart: \"u32\",\n\t\tfinish: \"u32\"\n\t}\n};\nvar typesMessage = {\n\ttypes: types\n};\n\nexport { typesMessage as default, types };\n", "var types = {\n\tMessageId: \"[u8;32]\",\n\tExitCode: \"i32\",\n\tPayload: \"Vec<u8>\",\n\tTypesRepr: {\n\t\tinput: \"Option<u32>\",\n\t\toutput: \"Option<u32>\"\n\t},\n\tProgramMetadataRepr: {\n\t\tinit: \"TypesRepr\",\n\t\thandle: \"TypesRepr\",\n\t\treply: \"Option<u32>\",\n\t\tothers: \"TypesRepr\",\n\t\tsignal: \"Option<u32>\",\n\t\tstate: \"Option<u32>\",\n\t\treg: \"Vec<u8>\"\n\t},\n\tStateMetadataRepr: {\n\t\tfunctions: \"BTreeMap<String, TypesRepr>\",\n\t\treg: \"Vec<u8>\"\n\t}\n};\nvar typesMetadata = {\n\ttypes: types\n};\n\nexport { typesMetadata as default, types };\n", "var types = {\n\tProgramId: \"[u8;32]\",\n\tProgram: {\n\t\t_enum: {\n\t\t\tActive: \"ActiveProgram\",\n\t\t\tExited: \"ProgramId\",\n\t\t\tTerminated: \"ProgramId\"\n\t\t}\n\t},\n\tWasmPageNumber: \"u32\",\n\tPageNumber: \"u32\",\n\tReservationId: \"[u8;32]\",\n\tGasReservationSlot: {\n\t\tamount: \"u64\",\n\t\tstart: \"u32\",\n\t\tfinish: \"u32\"\n\t},\n\tActiveProgram: {\n\t\tallocations: \"BTreeSet<WasmPageNumber>\",\n\t\tpages_with_data: \"BTreeSet<PageNumber>\",\n\t\tgas_reservation_map: \"BTreeMap<ReservationId, GasReservationSlot>\",\n\t\tcode_hash: \"H256\",\n\t\tcode_length_bytes: \"u32\",\n\t\tcode_exports: \"BTreeSet<DispatchKind>\",\n\t\tstatic_pages: \"WasmPageNumber\",\n\t\tstate: \"ProgramState\",\n\t\texpiration_block: \"BlockNumber\"\n\t},\n\tProgramState: {\n\t\t_enum: {\n\t\t\tUninitialized: {\n\t\t\t\tmessage_id: \"MessageId\"\n\t\t\t},\n\t\t\tInitialized: \"Null\"\n\t\t}\n\t},\n\tExecutionResult: {\n\t\t_enum: {\n\t\t\tSuccess: \"Null\",\n\t\t\tFailure: \"Vec<u8>\"\n\t\t}\n\t},\n\tGasInfo: {\n\t\tmin_limit: \"u64\",\n\t\treserved: \"u64\",\n\t\tburned: \"u64\",\n\t\tmay_be_returned: \"u64\",\n\t\twaited: \"bool\"\n\t}\n};\nvar typesProgram = {\n\ttypes: types\n};\n\nexport { typesProgram as default, types };\n", "import { REGULAR_EXP } from './regexp.js';\n\nfunction transformTypes(types) {\n    return Object.values(types).reduce((res, types) => ({ ...res, ...types }), {});\n}\nfunction convertString(string) {\n    const wordsArray = string\n        .replace(/[_:, .]+/g, ' ')\n        .trim()\n        .split(' ');\n    return wordsArray.map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join('');\n}\nfunction joinTypePath(path) {\n    return convertString(path.join('_'));\n}\nfunction typeIsGeneric(type) {\n    const matches = type.match(REGULAR_EXP.generic);\n    if (matches) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeIsString(type) {\n    return ['string', 'utf8', 'utf-8', 'text'].includes(type.toLowerCase());\n}\nfunction getTypeAndPayload(type, payload) {\n    if (payload === undefined) {\n        payload = '0x';\n    }\n    if (type === undefined) {\n        type = 'Bytes';\n    }\n    return [type, payload];\n}\n\nexport { convertString, getTypeAndPayload, joinTypePath, transformTypes, typeIsGeneric, typeIsString };\n", "const REGULAR_EXP = {\n    endWord: /\\b[\\w:]+\\b/g,\n    angleBracket: /<.+>/,\n    roundBracket: /^\\(.+\\)$/,\n    squareBracket: /^\\[.+\\]$/,\n    generic: /\\b\\w+</g,\n};\n\nexport { REGULAR_EXP };\n", "import { GearTransaction } from './Transaction.js';\n\nclass GearBalance extends GearTransaction {\n    async findOut(publicKey) {\n        const { data: balance } = (await this._api.query.system.account(publicKey));\n        return this._api.createType('Balance', balance.free);\n    }\n    transfer(to, value) {\n        this.extrinsic = this._api.tx.balances.transfer(to, value);\n        return this.extrinsic;\n    }\n}\n\nexport { GearBalance };\n", "import { isFunction } from '@polkadot/util';\nimport { TransactionError } from './errors/gear.errors.js';\n\nclass GearTransaction {\n    _api;\n    extrinsic;\n    constructor(_api) {\n        this._api = _api;\n    }\n    async signAndSend(account, optionsOrCallback, optionalCallback) {\n        const [options, callback] = isFunction(optionsOrCallback)\n            ? [undefined, optionsOrCallback]\n            : [optionsOrCallback, optionalCallback];\n        try {\n            return await this.extrinsic.signAndSend(account, options, callback);\n        }\n        catch (error) {\n            console.log(error);\n            const errorCode = +error.message.split(':')[0];\n            if (errorCode === 1010) {\n                throw new TransactionError('Account balance too low');\n            }\n            else {\n                throw new TransactionError(error.message);\n            }\n        }\n    }\n    /**\n     *\n     * @param account\n     * @param options\n     * @example\n     * ```javascript\n     * const api = await GearApi.create();\n     * api.program.submit({code, gasLimit});\n     * // same for api.message, api.reply and others\n     * const paymentInfo = await api.program.paymentInfo(alice);\n     * const transactionFee = paymentInfo.partialFee.toNumber();\n     * consolg.log(transactionFee);\n     * ```\n     */\n    paymentInfo(account, options) {\n        return this.extrinsic.paymentInfo(account, options);\n    }\n}\n\nexport { GearTransaction };\n", "class TransactionError extends Error {\n    name = 'TransactionError';\n    constructor(message) {\n        super();\n        this.message = `${message}`;\n    }\n}\n\nexport { TransactionError };\n", "import { isU8a, isHex, isNumber } from '@polkadot/util';\nimport '@polkadot/types';\nimport 'assert';\nimport { CreateType } from './metadata/create-type.js';\nimport './metadata/programMetadata.js';\nimport { GetBlockError } from './errors/blocks.errors.js';\n\nclass GearBlock {\n    api;\n    subscribeNewHeads;\n    constructor(api) {\n        this.api = api;\n        api.isReady.then(() => {\n            this.subscribeNewHeads = api.derive.chain.subscribeNewHeads;\n        });\n    }\n    /**\n     * Get data of particular block by blockNumber or blockHash\n     * @param hashOrNumber\n     * @returns\n     */\n    async get(hashOrNumber) {\n        const hash = isU8a(hashOrNumber) || isHex(hashOrNumber) ? hashOrNumber : await this.getBlockHash(+hashOrNumber);\n        try {\n            return await this.api.rpc.chain.getBlock(hash);\n        }\n        catch (error) {\n            throw new GetBlockError(error.message, hash);\n        }\n    }\n    /**\n     * Get blockHash by number\n     * @param number number of block\n     * @returns blockHash\n     */\n    async getBlockHash(number) {\n        return await this.api.rpc.chain.getBlockHash(number);\n    }\n    /**\n     * Get block number\n     * @param hash\n     * @returns Compact<BlockNumber>\n     */\n    async getBlockNumber(hash) {\n        const block = await this.get(hash);\n        return block.block.header.number;\n    }\n    async getBlockTimestamp(blockOrHashOrNumber) {\n        const block = isHex(blockOrHashOrNumber) || isU8a(blockOrHashOrNumber) || isNumber(blockOrHashOrNumber)\n            ? await this.get(blockOrHashOrNumber)\n            : blockOrHashOrNumber;\n        const tsAsU8a = block.block.extrinsics.find((value) => value.method.method === 'set' && value.method.section === 'timestamp').data;\n        const ts = CreateType.create('Compact<u64>', tsAsU8a);\n        return ts;\n    }\n    /**\n     * Get all extrinsic of particular block\n     * @param blockHash hash of particular block\n     * @returns Vec of extrinsics\n     */\n    async getExtrinsics(blockHash) {\n        return (await this.get(blockHash)).block.extrinsics;\n    }\n    /**\n     * Get all events of particular block\n     * @param blockHash hash of particular block\n     * @returns Vec of events\n     */\n    async getEvents(blockHash) {\n        const apiAt = await this.api.at(blockHash);\n        return apiAt.query.system.events();\n    }\n    /**\n     * Get hash of last finalized block\n     * @returns Hash of finalized head\n     */\n    async getFinalizedHead() {\n        return this.api.rpc.chain.getFinalizedHead();\n    }\n}\n\nexport { GearBlock };\n", "import { TypeRegistry } from '@polkadot/types';\nimport { isJSON, toJSON } from '../utils/json.js';\nimport { GearMetadata } from './metadata.js';\nimport { gearTypes } from '../default/index.js';\n\nclass CreateType {\n    registry;\n    metadata;\n    constructor(hexRegistry) {\n        if (!hexRegistry) {\n            this.registry = new TypeRegistry();\n            this.registerDefaultTypes();\n        }\n        else {\n            this.metadata = new GearMetadata(hexRegistry);\n        }\n    }\n    registerDefaultTypes() {\n        this.registry.setKnownTypes({ types: gearTypes });\n        this.registry.register(gearTypes);\n    }\n    /**\n     *\n     * @param type `TypeName` to encode or decode payload\n     * @param payload `Payload` that have to be encoded or decoded\n     * @returns Codec\n     * @example\n     * ```javascript\n     * const createType = new CreateType();\n     * const encoded = createType.create('String', 'Hello, World');\n     * console.log(encoded.toHex()); // 0x48656c6c6f2c20576f726c6421\n     *\n     * const decoded = createType.create('String', '0x48656c6c6f2c20576f726c6421');\n     * console.log(decoded.toHuman()); // \"Hello, World!\"\n     */\n    create(typeOrTypeIndex, payload) {\n        let [type, index] = typeof typeOrTypeIndex === 'string' ? [typeOrTypeIndex, undefined] : [undefined, typeOrTypeIndex];\n        if (payload === undefined) {\n            payload = '0x';\n        }\n        else if (isJSON(payload)) {\n            payload = toJSON(payload);\n        }\n        if (type === undefined) {\n            type = 'Bytes';\n        }\n        if (this.metadata) {\n            index = index || this.metadata.getTypeIndexByName(type);\n            return this.metadata.createType(index, payload);\n        }\n        return this.registry.createType(type, payload);\n    }\n    /**\n     *\n     * @param type `TypeName` to encode or decode payload\n     * @param payload `Payload` that have to be encoded or decoded\n     * @param hexRegistry registry in hex format\n     * @param defaultTypes set to true if you want to register default types too\n     * @returns Codec\n     * @example\n     * ```javascript\n     * const encoded = CreateType.create('String', 'Hello, World');\n     * console.log(encoded.toHex()); // 0x48656c6c6f2c20576f726c6421\n     * ```\n     */\n    static create(type, payload, hexRegistry) {\n        const createType = new CreateType(hexRegistry);\n        return createType.create(type, payload);\n    }\n}\n\nexport { CreateType };\n", "function isJSON(data) {\n    try {\n        JSON.parse(data);\n    }\n    catch (error) {\n        try {\n            if (JSON.stringify(data)[0] !== '{') {\n                return false;\n            }\n        }\n        catch (error) {\n            return false;\n        }\n        return true;\n    }\n    return true;\n}\nfunction toJSON(data) {\n    try {\n        return JSON.parse(data);\n    }\n    catch (error) {\n        return data;\n    }\n}\n\nexport { isJSON, toJSON };\n", "import { TypeRegistry, PortableRegistry } from '@polkadot/types';\nimport assert from 'assert';\nimport { hexToU8a } from '@polkadot/util';\n\nconst LOOKUP_REGEXP = /\\bLookup\\d+\\b/g;\nconst DIGITS_REGEXP = /\\d+/;\nconst OPTION_REGEXP = /^Option<[\\w\\][;\\d<>, ]+>$/;\nfunction isOption(typeName, typeDef) {\n    if (!typeDef.isVariant) {\n        return false;\n    }\n    if (!OPTION_REGEXP.test(typeName)) {\n        return false;\n    }\n    if (typeDef.asVariant.variants.length !== 2 ||\n        typeDef.asVariant.variants.filter((v) => v.name.eq('Some') || v.name.eq('None')).length !== 2) {\n        return false;\n    }\n    return true;\n}\nclass GearMetadata {\n    registry;\n    regTypes;\n    portableRegistry;\n    constructor(hexRegistry) {\n        this.registry = new TypeRegistry();\n        this.portableRegistry = new PortableRegistry(this.registry, hexToU8a(hexRegistry), true);\n        this.regTypes = new Map();\n        this.prepare();\n        this.registerTypes();\n    }\n    prepare() {\n        const updateTypes = [];\n        for (const type of this.portableRegistry.types) {\n            const name = this.portableRegistry.getName(type.id);\n            const typeDef = this.portableRegistry.getTypeDef(type.id);\n            if (name !== undefined) {\n                this.regTypes.set(type.id.toNumber(), { name: this.portableRegistry.getName(type.id), def: typeDef.type });\n            }\n            else {\n                assert(typeDef.lookupIndex === type.id.toNumber(), 'Lookup index of type is not equal to index in portable registry');\n                if (typeDef.type.includes('Lookup')) {\n                    updateTypes.push(typeDef.lookupIndex);\n                }\n                this.regTypes.set(typeDef.lookupIndex, { name: typeDef.type, def: null });\n            }\n        }\n        if (updateTypes.length > 0) {\n            for (const id of updateTypes) {\n                this.regTypes.get(id).name = this.getTypeName(id);\n                for (const [type, { name, def }] of this.regTypes.entries()) {\n                    if (LOOKUP_REGEXP.test(def)) {\n                        const match = def.match(LOOKUP_REGEXP);\n                        let newDef = def;\n                        for (const m of match) {\n                            const index = Number(m.match(DIGITS_REGEXP)[0]);\n                            newDef = def.replace(m, this.getTypeName(index));\n                        }\n                        this.regTypes.set(type, { name, def: newDef });\n                    }\n                }\n            }\n        }\n    }\n    registerTypes() {\n        const types = {};\n        Array.from(this.regTypes.values()).forEach(({ name, def }) => {\n            if (def) {\n                types[name] = def;\n            }\n        });\n        this.registry.setKnownTypes({ types });\n        this.registry.register(types);\n    }\n    createType(typeIndex, payload) {\n        const type = this.regTypes.get(typeIndex);\n        assert.notStrictEqual(type, undefined, `Type with index ${typeIndex} not found in registered types`);\n        return this.registry.createType(type.name, payload);\n    }\n    getTypeDef(typeIndex, additionalFields = false) {\n        const { def, path } = this.portableRegistry.getSiType(typeIndex);\n        if (def.isPrimitive) {\n            return additionalFields\n                ? { name: def.asPrimitive.type, kind: 'primitive', type: def.asPrimitive.type }\n                : def.asPrimitive.type;\n        }\n        if (path.length > 0 && path.at(0).toString() === 'primitive_types') {\n            const type = this.getTypeName(typeIndex);\n            return additionalFields ? { name: type, kind: 'primitive', type } : type;\n        }\n        if (def.isEmpty) {\n            return additionalFields ? { name: '()', kind: 'empty', type: null } : null;\n        }\n        if (def.isNone) {\n            return additionalFields ? { name: 'None', kind: 'none', type: null } : null;\n        }\n        if (def.isSequence) {\n            return additionalFields\n                ? {\n                    name: this.getTypeName(typeIndex),\n                    kind: 'sequence',\n                    type: this.getTypeDef(def.asSequence.type, additionalFields),\n                }\n                : [this.getTypeDef(def.asSequence.type, additionalFields)];\n        }\n        if (def.isTuple) {\n            const tuple = def.asTuple.map((index) => this.getTypeDef(index, additionalFields));\n            return additionalFields ? { name: this.getTypeName(typeIndex), kind: 'tuple', type: tuple } : tuple;\n        }\n        if (def.isArray) {\n            const arrayType = this.getTypeDef(def.asArray.type, additionalFields);\n            const len = def.asArray.len.toNumber();\n            return additionalFields\n                ? { name: this.getTypeName(typeIndex), kind: 'array', type: arrayType, len }\n                : [arrayType, len];\n        }\n        if (def.isComposite) {\n            let result = {};\n            const name = this.getTypeName(typeIndex);\n            if (name === 'ActorId') {\n                return additionalFields ? { name, kind: 'actorid', type: 'actorid' } : name;\n            }\n            for (const { name, type } of def.asComposite.fields) {\n                if (name.isSome) {\n                    result[name.unwrap().toString()] = this.getTypeDef(type, additionalFields);\n                    continue;\n                }\n                if (def.asComposite.fields.length === 1) {\n                    result = this.getTypeDef(type, additionalFields);\n                    return additionalFields ? { ...result, name: this.getTypeName(typeIndex) } : result;\n                }\n            }\n            return additionalFields ? { name, kind: 'composite', type: result } : result;\n        }\n        if (def.isVariant) {\n            const _variants = {};\n            const name = this.getTypeName(typeIndex);\n            for (const { name, fields } of def.asVariant.variants) {\n                if (name.eq('None')) {\n                    _variants[name.toString()] = additionalFields ? { name: 'None', kind: 'none', type: null } : null;\n                    continue;\n                }\n                if (fields.length === 0) {\n                    _variants[name.toString()] = null;\n                    continue;\n                }\n                if (fields[0].name.isNone) {\n                    if (fields.length === 1) {\n                        _variants[name.toString()] = this.getTypeDef(fields[0].type, additionalFields);\n                    }\n                    else {\n                        const tuple = fields.map(({ type }) => this.getTypeDef(type, additionalFields));\n                        _variants[name.toString()] = additionalFields ? { name: null, kind: 'tuple', type: tuple } : tuple;\n                    }\n                }\n                else {\n                    const result = {};\n                    for (const { name, type } of fields) {\n                        result[name.unwrap().toString()] = this.getTypeDef(type, additionalFields);\n                    }\n                    _variants[name.toString()] = additionalFields ? { name: null, kind: 'composite', type: result } : result;\n                }\n            }\n            return additionalFields\n                ? {\n                    name,\n                    kind: isOption(name, def) ? 'option' : 'variant',\n                    type: _variants,\n                }\n                : { _variants };\n        }\n    }\n    getTypeName(index) {\n        const { def, params, path } = this.portableRegistry.getSiType(index);\n        if (def.isPrimitive) {\n            return def.asPrimitive.toString();\n        }\n        if (def.isEmpty) {\n            return '()';\n        }\n        if (def.isNone) {\n            return 'None';\n        }\n        if (def.isSequence) {\n            return `Vec<${this.getTypeName(def.asSequence.type)}>`;\n        }\n        if (def.isTuple) {\n            return `(${def.asTuple.map((index) => this.getTypeName(index)).join(', ')})`;\n        }\n        if (def.isArray) {\n            return `[${this.getTypeName(def.asArray.type)};${def.asArray.len.toNumber()}]`;\n        }\n        if (def.isComposite) {\n            if (params.length > 0) {\n                return `${path.at(-1)}<${params\n                    .map(({ type, name }) => (type.isSome ? this.getTypeName(type.unwrap()) : name.toString()))\n                    .join(', ')}>`;\n            }\n            return path.at(-1).toString();\n        }\n        if (def.isVariant) {\n            if (params.length > 0) {\n                return `${path.at(-1)}<${params\n                    .map(({ type, name }) => (type.isSome ? this.getTypeName(type.unwrap()) : name.toString()))\n                    .join(', ')}>`;\n            }\n            return this.portableRegistry.getName(index);\n        }\n    }\n    getAllTypes() {\n        return this.registry.knownTypes.types;\n    }\n    getTypeIndexByName(typeName) {\n        for (const [index, { name }] of this.regTypes.entries()) {\n            if (name.toLowerCase() === typeName.toLowerCase()) {\n                return index;\n            }\n        }\n        return null;\n    }\n}\n\nexport { GearMetadata };\n", "import { hexToU8a } from '@polkadot/util';\nimport { CreateType } from './create-type.js';\nimport { GearMetadata } from './metadata.js';\n\nvar Lang;\n(function (Lang) {\n    Lang[Lang[\"RUST\"] = 0] = \"RUST\";\n    Lang[Lang[\"ASSEMBLYSCRIPT\"] = 1] = \"ASSEMBLYSCRIPT\";\n})(Lang || (Lang = {}));\nclass ProgramMetadata extends GearMetadata {\n    types;\n    constructor({ reg, ...types }) {\n        super(reg);\n        this.types = types;\n    }\n}\nfunction getProgramMetadata(hexMetadata) {\n    if (!hexMetadata.startsWith('0x')) {\n        hexMetadata = '0x' + hexMetadata;\n    }\n    const u8aMeta = hexToU8a(hexMetadata);\n    const lang = CreateType.create('u8', u8aMeta[0]).toNumber();\n    // TODO: support different versions\n    // const version = CreateType.create<u16>('u16', u8aMeta.slice(1, 3)).toNumber();\n    if (lang === Lang.RUST) {\n        try {\n            const metaRepr = CreateType.create('ProgramMetadataRepr', u8aMeta.slice(3)).toJSON();\n            return new ProgramMetadata(metaRepr);\n        }\n        catch (err) {\n            throw new Error('Metadata: Invalid metadata');\n        }\n    }\n    // TODO: support assemblyscript metadata\n}\n\nexport { ProgramMetadata, getProgramMetadata };\n", "import { isU8a, u8aToString } from '@polkadot/util';\n\nclass GetBlockError extends Error {\n    name = 'GetBlockError';\n    constructor(message, hash) {\n        super();\n        const splittedMessage = message.split(':');\n        if (isU8a(hash)) {\n            hash = u8aToString(hash);\n        }\n        const errorCode = splittedMessage.length > 0 ? parseInt(splittedMessage[0]) : NaN;\n        switch (errorCode) {\n            case -32603:\n                this.message = `State already discarded for block ${hash}`;\n                break;\n            default:\n                this.message = 'Unknow error occurred';\n                break;\n        }\n    }\n}\n\nexport { GetBlockError };\n", "import { ClaimValueError } from './errors/claim.errors.js';\nimport '@polkadot/util';\nimport { GearTransaction } from './Transaction.js';\n\n/**\n * Claim value from mailbox\n */\nclass GearClaimValue extends GearTransaction {\n    /**\n     * Submit `claimValueFromMailbox` extrinsic\n     * @param messageId MessageId with value to be claimed\n     */\n    submit(messageId) {\n        try {\n            this.extrinsic = this._api.tx.gear.claimValue(messageId);\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new ClaimValueError();\n        }\n    }\n}\n\nexport { GearClaimValue };\n", "class ClaimValueError extends Error {\n    name = 'ClaimValueError';\n    constructor(message) {\n        super(message || 'Unable to claim value from mailbox. Params are invalid');\n    }\n}\n\nexport { ClaimValueError };\n", "import { u8aToHex } from '@polkadot/util';\nimport { generateCodeHash } from './utils/generate.js';\nimport { getIdsFromKeys } from './utils/prefixes.js';\nimport './utils/separator.js';\nimport { validateCodeId } from './utils/validate.js';\nimport '@polkadot/api';\nimport '@polkadot/util-crypto';\nimport '@polkadot/types';\nimport 'assert';\nimport './default/index.js';\nimport './metadata/programMetadata.js';\nimport { CodeDoesNotExistError } from './errors/program.errors.js';\nimport { GearTransaction } from './Transaction.js';\nimport { getGrReply } from './wasm/reply.js';\n\nclass GearCode extends GearTransaction {\n    /**\n     * ### Submit code without initialization\n     * @param code\n     * @returns Code hash\n     */\n    async upload(code) {\n        const codeHash = generateCodeHash(code);\n        await validateCodeId(codeHash, this._api);\n        const codeBytes = this._api.createType('Bytes', Array.from(code));\n        this.extrinsic = this._api.tx.gear.uploadCode(codeBytes);\n        return { codeHash, submitted: this.extrinsic };\n    }\n    /**\n     * ### Check that codeId exists on chain\n     * @param codeId\n     */\n    async exists(codeId) {\n        const codeMetadata = (await this._api.query.gearProgram.metadataStorage(codeId));\n        return codeMetadata.isSome;\n    }\n    /**\n     * ### Get code storage\n     * @param codeId\n     */\n    async storage(codeId) {\n        return this._api.query.gearProgram.codeStorage(codeId);\n    }\n    /**\n     * ### Get static pages of code\n     * @param codeId\n     */\n    async staticPages(codeId) {\n        const storage = await this.storage(codeId);\n        return storage.isSome ? storage.unwrap().staticPages.toNumber() : null;\n    }\n    /**\n     * ### Get all ids of codes uploaded on connected chain\n     * @returns array of code ids uploaded on chain\n     */\n    async all() {\n        const prefix = this._api.query.gearProgram.metadataStorage.keyPrefix();\n        const keys = await this._api.rpc.state.getKeys(prefix);\n        const codeIds = getIdsFromKeys(keys, prefix);\n        return codeIds;\n    }\n    async metaHash(codeId) {\n        const code = (await this._api.query.gearProgram.originalCodeStorage(codeId));\n        if (code.isNone) {\n            throw new CodeDoesNotExistError(codeId);\n        }\n        const metahash = await getGrReply(code.unwrap().toHex(), 'metahash');\n        return u8aToHex(metahash);\n    }\n    async metaHashFromWasm(wasm) {\n        const metahash = await getGrReply(wasm, 'metahash');\n        return u8aToHex(metahash);\n    }\n}\n\nexport { GearCode };\n", "import { blake2AsHex, blake2AsU8a } from '@polkadot/util-crypto';\nimport { stringToU8a, u8aToU8a } from '@polkadot/util';\nimport '@polkadot/types';\nimport 'assert';\nimport { CreateType } from '../metadata/create-type.js';\nimport '../metadata/programMetadata.js';\n\nconst VOUCHER_PREFIX = stringToU8a('modlpy/voucher__');\nfunction generateCodeHash(code) {\n    return blake2AsHex(u8aToU8a(code), 256);\n}\nfunction generateProgramId(codeOrHash, salt) {\n    const [code, codeHash] = typeof codeOrHash === 'string' ? [undefined, codeOrHash] : [codeOrHash, undefined];\n    const codeHashU8a = codeHash ? u8aToU8a(codeHash) : blake2AsU8a(code, 256);\n    const saltU8a = CreateType.create('Vec<u8>', salt).toU8a().slice(1);\n    const programStrU8a = new TextEncoder().encode('program');\n    const id = Uint8Array.from([...programStrU8a, ...codeHashU8a, ...saltU8a]);\n    return blake2AsHex(id, 256);\n}\nfunction generateVoucherId(who, program) {\n    const whoU8a = u8aToU8a(who);\n    const programU8a = u8aToU8a(program);\n    const id = Uint8Array.from([...VOUCHER_PREFIX, ...whoU8a, ...programU8a]);\n    return blake2AsHex(id, 256);\n}\n\nexport { generateCodeHash, generateProgramId, generateVoucherId };\n", "const GPROG = 'g::prog::';\nconst GPAGES = 'g::pages::';\nconst GPROG_HEX = Buffer.from(GPROG).toString('hex');\nconst GPAGES_HEX = Buffer.from('g::pages::').toString('hex');\nfunction getIdsFromKeys(keys, prefix) {\n    return keys.map((key) => '0x' + key.toHex().slice(prefix.length));\n}\n\nexport { GPAGES, GPAGES_HEX, GPROG, GPROG_HEX, getIdsFromKeys };\n", "const SEPARATOR = Buffer.from('::').toString('hex');\n\nexport { SEPARATOR };\n", "import { u8aToBigInt, BN } from '@polkadot/util';\nimport { u128, u64 } from '@polkadot/types';\nimport { ValidationError } from '../errors/validation.errors.js';\nimport { generateVoucherId } from './generate.js';\n\nfunction validateValue(value, api) {\n    if (!value)\n        return;\n    const existentialDeposit = api.existentialDeposit;\n    const bigintValue = value instanceof Uint8Array\n        ? u8aToBigInt(value)\n        : value instanceof u128 || value instanceof BN\n            ? BigInt(value.toString())\n            : BigInt(value);\n    if (bigintValue > 0 && bigintValue < existentialDeposit.toBigInt()) {\n        throw new ValidationError(`Value less than minimal. Minimal value: ${existentialDeposit.toHuman()}`);\n    }\n}\nfunction validateGasLimit(gas, api) {\n    if (gas === undefined)\n        throw new ValidationError(\"Gas limit doesn't specified\");\n    const bigintGas = gas instanceof Uint8Array\n        ? u8aToBigInt(gas)\n        : gas instanceof u64 || gas instanceof BN\n            ? BigInt(gas.toString())\n            : BigInt(gas);\n    if (bigintGas > api.blockGasLimit.toBigInt()) {\n        throw new ValidationError(`GasLimit too high. Maximum gasLimit value is ${api.blockGasLimit.toHuman()}`);\n    }\n}\nasync function validateCodeId(codeId, api) {\n    if (await api.code.exists(codeId)) {\n        throw new ValidationError('Code already exists');\n    }\n}\nasync function validateProgramId(programId, api) {\n    const isExist = await api.program.exists(programId);\n    if (!isExist) {\n        throw new ValidationError(`Program with id ${programId} doesn't exist`);\n    }\n}\nasync function validateVoucher(programId, who, api) {\n    const id = generateVoucherId(who, programId);\n    const balance = await api.balance.findOut(id);\n    if (balance.eqn(0)) {\n        throw new ValidationError(`Voucher with id ${id} doesn't exist`);\n    }\n}\nasync function validateMailboxItem(account, messageId, api) {\n    const mailbox = await api.mailbox.read(account, messageId);\n    if (!mailbox) {\n        throw new Error(`There is no message with id ${messageId} in the mailbox`);\n    }\n    return mailbox[0];\n}\n\nexport { validateCodeId, validateGasLimit, validateMailboxItem, validateProgramId, validateValue, validateVoucher };\n", "class ValidationError extends Error {\n    name = 'ValidationError';\n    constructor(message) {\n        super(message);\n    }\n}\n\nexport { ValidationError };\n", "class SubmitProgramError extends Error {\n    name = 'SubmitProgramError';\n    constructor(message) {\n        super(message || 'Unable to submit the program. Params are invalid');\n    }\n}\nclass ProgramDoesNotExistError extends Error {\n    name = 'ProgramDoesNotExist';\n    constructor(id) {\n        super(`Program with id ${id} does not exist`);\n    }\n}\nclass PausedProgramDoesNotExistError extends Error {\n    name = 'PausedProgramDoesNotExistError';\n    constructor(id) {\n        super(`Program with id ${id} not found in paused program storage`);\n    }\n}\nclass ProgramTerminatedError extends Error {\n    name = 'ProgramTerminated';\n    constructor(id) {\n        super(`Program ${id} terminated`);\n    }\n}\nclass ProgramExitedError extends Error {\n    name = 'ProgramExited';\n    constructor(id) {\n        super(`Program ${id} exited`);\n    }\n}\nclass CodeDoesNotExistError extends Error {\n    name = 'CodeDoesNotExist';\n    constructor(id) {\n        super(`Code with id ${id} not found in the storage`);\n    }\n}\nclass ProgramHasNoMetahash extends Error {\n    name = 'ProgramHasNoMetahash';\n    constructor(id) {\n        super(`Program with id ${id} has not metahash function`);\n    }\n}\nclass ResumeSessionInitError extends Error {\n    name = 'ResumeSessionInitError';\n    constructor(programId, msg) {\n        super(`Resume session init for program ${programId} failed. ${msg ? msg : ''}`);\n    }\n}\nclass ResumeSessionPushError extends Error {\n    name = 'ResumeSessionPushError';\n    constructor(sessionId, msg) {\n        super(`Failed to push pages to session ${sessionId}. ${msg || ''}`);\n    }\n}\nclass ResumeSessionCommitError extends Error {\n    name = 'ResumeSessionCommitError';\n    constructor(sessionId, msg) {\n        super(`Failed to commit session ${sessionId}. ${msg || ''}`);\n    }\n}\n\nexport { CodeDoesNotExistError, PausedProgramDoesNotExistError, ProgramDoesNotExistError, ProgramExitedError, ProgramHasNoMetahash, ProgramTerminatedError, ResumeSessionCommitError, ResumeSessionInitError, ResumeSessionPushError, SubmitProgramError };\n", "import { isHex, hexToU8a, isU8a } from '@polkadot/util';\nimport importObj from './importObj.js';\n\nfunction getGrReply(wasm, fn) {\n    const buffer = isHex(wasm) ? hexToU8a(wasm).buffer : isU8a(wasm) ? wasm.buffer : wasm;\n    const memory = new WebAssembly.Memory({ initial: 256 });\n    return new Promise((resolve, reject) => {\n        WebAssembly.instantiate(buffer, importObj(memory, false, undefined, undefined, undefined, (payload, len) => resolve(new Uint8Array(memory.buffer.slice(payload, payload + len))))).then(({ instance: { exports } }) => {\n            if (!(fn in exports)) {\n                reject(`${fn} function not found in exports`);\n            }\n            else if (typeof exports[fn] !== 'function') {\n                reject(`${fn} is not a function`);\n            }\n            else {\n                exports[fn]();\n            }\n        });\n    });\n}\n\nexport { getGrReply };\n", "import { TypeRegistry } from '@polkadot/types';\nimport assert from 'assert';\n\nvar importObj = (memory, showDebug, inputValue, timestamp, block_height, replyFn = () => { }) => ({\n    env: {\n        abortStackOverflow: () => {\n            throw new Error('overflow');\n        },\n        table: new WebAssembly.Table({\n            initial: 0,\n            maximum: 0,\n            element: 'anyfunc',\n        }),\n        tableBase: 0,\n        memory: memory,\n        memoryBase: 1024,\n        STACKTOP: 0,\n        STACK_MAX: memory.buffer.byteLength,\n        alloc: (pages) => {\n            return memory.grow(pages);\n        },\n        free: () => { },\n        gr_block_height: () => block_height,\n        gr_block_timestamp: () => timestamp,\n        gr_create_program_wgas: () => { },\n        gr_create_program: () => { },\n        gr_reply_deposit: () => { },\n        gr_debug: (payload, len) => {\n            if (showDebug) {\n                console.debug('[GR_DEBUG]', new TypeRegistry()\n                    .createType('String', new Uint8Array(memory.buffer.slice(payload, payload + len)))\n                    .toHuman());\n            }\n        },\n        gr_error: (error, len) => {\n            console.error('[GR_ERROR]', new TypeRegistry().createType('String', new Uint8Array(memory.buffer.slice(error, error + len))).toHuman());\n        },\n        gr_exit: () => { },\n        gr_gas_available: () => { },\n        gr_leave: () => { },\n        gr_message_id: () => { },\n        gr_oom_panic: () => { },\n        gr_origin: () => { },\n        gr_panic: () => { },\n        gr_pay_program_rent: () => { },\n        gr_reply_code: () => { },\n        gr_signal_code: () => { },\n        gr_program_id: () => { },\n        gr_random: () => { },\n        gr_read: (at, len, buffer) => {\n            assert.notStrictEqual(inputValue, undefined, 'Input value not found');\n            new Uint8Array(memory.buffer).set(inputValue.slice(at, len), buffer);\n        },\n        gr_reply_commit_wgas: () => { },\n        gr_reply_commit: () => { },\n        gr_reply_push: () => { },\n        gr_reply_to: () => { },\n        gr_signal_from: () => { },\n        gr_reply_wgas: () => { },\n        gr_reply: replyFn,\n        gr_reservation_reply_commit: () => { },\n        gr_reservation_reply: () => { },\n        gr_reservation_send_commit: () => { },\n        gr_reservation_send: () => { },\n        gr_reserve_gas: () => { },\n        gr_send_commit_wgas: () => { },\n        gr_send_commit: () => { },\n        gr_send_init: () => { },\n        gr_send_push: () => { },\n        gr_send_wgas: () => { },\n        gr_send: () => { },\n        gr_size: (size_ptr) => {\n            assert.notStrictEqual(inputValue, undefined, 'Input value not found');\n            const len = new TypeRegistry().createType('u32', inputValue.byteLength).toU8a();\n            for (let i = 0; i < len.length; i++) {\n                new Uint8Array(memory.buffer)[size_ptr + i] = len[i];\n            }\n        },\n        gr_source: () => { },\n        gr_status_code: () => { },\n        gr_system_reserve_gas: () => { },\n        gr_unreserve_gas: () => { },\n        gr_value_available: () => { },\n        gr_value: () => { },\n        gr_wait: () => { },\n        gr_wait_up_to: () => { },\n        gr_wait_for: () => { },\n        gr_wake: () => { },\n        gr_reply_push_input: () => { },\n        gr_reply_input_wgas: () => { },\n        gr_reply_input: () => { },\n        gr_send_push_input: () => { },\n        gr_send_input_wgas: () => { },\n        gr_send_input: () => { },\n    },\n});\n\nexport { importObj as default };\n", "class GearEvents {\n    api;\n    constructor(gearApi) {\n        this.api = gearApi;\n    }\n    subscribeToGearEvent(method, callback) {\n        return this.api.query.system.events((events) => {\n            events\n                .filter(({ event }) => event.method === method)\n                .forEach(({ event }) => {\n                callback(event);\n            });\n        });\n    }\n    subscribeToGearVoucherEvent(method, callback) {\n        return this.api.query.system.events((events) => {\n            events\n                .filter(({ event }) => event.method === method)\n                .forEach(({ event }) => {\n                callback(event);\n            });\n        });\n    }\n    #umsActorsMatch(from, to, event) {\n        if (event.data.message.source.eq(from) || event.data.message.destination.eq(to)) {\n            return true;\n        }\n        return false;\n    }\n    subscribeToUserMessageSentByActor(options, callback) {\n        return this.api.query.system.events((events) => {\n            events\n                .filter(({ event }) => event.method === 'UserMessageSent')\n                .forEach(({ event }) => {\n                if (this.#umsActorsMatch(options.from, options.to, event)) {\n                    callback(event);\n                }\n            });\n        });\n    }\n    subscribeToTransferEvents(callback) {\n        return this.api.query.system.events((events) => {\n            events\n                .filter(({ event }) => this.api.events.balances.Transfer.is(event))\n                .forEach(({ event }) => {\n                callback(event);\n            });\n        });\n    }\n    /**\n     * @deprecated Use api.blocks.subscribeNewHeads instead\n     */\n    subscribeToNewBlocks(callback) {\n        return this.api.rpc.chain.subscribeNewHeads((header) => {\n            callback(header);\n        });\n    }\n    async subscribeToBalanceChanges(accountAddress, callback) {\n        let { data: { free: previousFree }, } = (await this.api.query.system.account(accountAddress));\n        return this.api.query.system.account(accountAddress, ({ data: { free: currentFree } }) => {\n            if (!currentFree.sub(previousFree).isZero()) {\n                callback(this.api.createType('Balance', currentFree));\n                previousFree = currentFree;\n            }\n        });\n    }\n}\n\nexport { GearEvents };\n", "class GearMailbox {\n    api;\n    claimValue;\n    constructor(api) {\n        this.api = api;\n        this.claimValue = api.claimValueFromMailbox;\n    }\n    async read(accountId, messageIdOrNumberOfMessages) {\n        const [messageId, numberOfMessages] = typeof messageIdOrNumberOfMessages === 'string'\n            ? [messageIdOrNumberOfMessages, undefined]\n            : [undefined, messageIdOrNumberOfMessages || 1000];\n        if (messageId) {\n            const mailbox = await this.api.query.gearMessenger.mailbox(accountId, messageId);\n            const typedMailbox = this.api.createType('Option<(UserStoredMessage, Interval)>', mailbox);\n            return typedMailbox.unwrapOr(null);\n        }\n        else {\n            const keyPrefixes = this.api.query.gearMessenger.mailbox.keyPrefix(accountId);\n            const keysPaged = await this.api.rpc.state.getKeysPaged(keyPrefixes, numberOfMessages, keyPrefixes);\n            if (keysPaged.length === 0) {\n                return [];\n            }\n            const mailbox = (await this.api.rpc.state.queryStorageAt(keysPaged));\n            return mailbox.map((item) => {\n                const typedItem = this.api.createType('Option<(UserStoredMessage, Interval)>', item);\n                return typedItem.unwrapOr(null);\n            });\n        }\n    }\n}\n\nexport { GearMailbox };\n", "import { ReplaySubject } from 'rxjs';\nimport { SendMessageError, SendReplyError } from './errors/message.errors.js';\nimport '@polkadot/util';\nimport './utils/generate.js';\nimport './utils/prefixes.js';\nimport './utils/separator.js';\nimport { validateValue, validateGasLimit, validateVoucher, validateMailboxItem } from './utils/validate.js';\nimport '@polkadot/api';\nimport '@polkadot/util-crypto';\nimport { encodePayload } from './utils/create-payload.js';\nimport { GearTransaction } from './Transaction.js';\n\nclass GearMessage extends GearTransaction {\n    /**\n     * ## Send Message\n     * @param message\n     * @param metaOrHexRegistry Metadata\n     * @param typeIndexOrTypeName type index in registry or type name\n     * @returns Submitted result\n     */\n    send({ destination, value, gasLimit, ...args }, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(value, this._api);\n        validateGasLimit(gasLimit, this._api);\n        const payload = encodePayload(args.payload, metaOrHexRegistry, 'handle', typeIndexOrTypeName);\n        try {\n            this.extrinsic = this._api.tx.gear.sendMessage(destination, payload, gasLimit, value || 0);\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new SendMessageError(error.message);\n        }\n    }\n    /**\n     * Sends reply message\n     * @param args Message parameters\n     * @param metaOrHexRegistry Metadata\n     * @param typeIndexOrTypeName type index in registry or type name\n     * @returns Submitted result\n     */\n    sendReply({ value, gasLimit, replyToId, ...args }, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(value, this._api);\n        validateGasLimit(gasLimit, this._api);\n        const payload = encodePayload(args.payload, metaOrHexRegistry, 'reply', typeIndexOrTypeName);\n        try {\n            this.extrinsic = this._api.tx.gear.sendReply(replyToId, payload, gasLimit, value);\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new SendReplyError();\n        }\n    }\n    async sendWithVoucher({ destination, value, gasLimit, payload, account }, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(value, this._api);\n        validateGasLimit(gasLimit, this._api);\n        await validateVoucher(destination, account, this._api);\n        const _payload = encodePayload(payload, metaOrHexRegistry, 'handle', typeIndexOrTypeName);\n        try {\n            this.extrinsic = this._api.tx.gear.sendMessageWithVoucher(destination, _payload, gasLimit, value || 0);\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new SendMessageError(error.message);\n        }\n    }\n    async sendReplyWithVoucher({ value, gasLimit, replyToId, payload, account }, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(value, this._api);\n        validateGasLimit(gasLimit, this._api);\n        const { source } = await validateMailboxItem(account, replyToId, this._api);\n        await validateVoucher(source.toHex(), account, this._api);\n        const _payload = encodePayload(payload, metaOrHexRegistry, 'reply', typeIndexOrTypeName);\n        try {\n            this.extrinsic = this._api.tx.gear.sendReplyWithVoucher(replyToId, _payload, gasLimit, value);\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new SendReplyError();\n        }\n    }\n    listenToReplies(programId, bufferSize = 5) {\n        let unsub;\n        const subject = new ReplaySubject(bufferSize);\n        this._api.gearEvents\n            .subscribeToGearEvent('UserMessageSent', ({ data }) => {\n            if (data.message.source.eq(programId)) {\n                if (data.message.details.isSome) {\n                    data.message.details.unwrap().to.toHex();\n                    {\n                        subject.next([data.message.details.unwrap().to.toHex(), data]);\n                    }\n                }\n            }\n        })\n            .then((result) => {\n            unsub = result;\n        });\n        return (messageId) => {\n            return new Promise((resolve) => {\n                subject.subscribe({\n                    next: ([id, data]) => {\n                        if (id === messageId) {\n                            subject.complete();\n                            unsub();\n                            resolve(data);\n                        }\n                    },\n                });\n            });\n        };\n    }\n}\n\nexport { GearMessage };\n", "class SendMessageError extends Error {\n    name = 'SendMessageError';\n    constructor(message) {\n        super(message || 'Can\\'t send message. Params are invalid');\n    }\n}\nclass SendReplyError extends Error {\n    name = 'SendReplyError';\n    constructor(message) {\n        super(message || 'Can\\'t send reply. Params are invalid');\n    }\n}\n\nexport { SendMessageError, SendReplyError };\n", "import { isHex, hexToU8a, isU8a } from '@polkadot/util';\nimport { GearMetadata } from '../metadata/metadata.js';\nimport { CreateType } from '../metadata/create-type.js';\nimport '@polkadot/types';\nimport 'assert';\nimport '../metadata/programMetadata.js';\nimport { isProgramMeta } from '../metadata/is.js';\n\nfunction getRegistry(metaOrHexRegistry) {\n    if (!metaOrHexRegistry) {\n        return undefined;\n    }\n    if (isHex(metaOrHexRegistry)) {\n        return metaOrHexRegistry;\n    }\n}\nfunction encodePayload(payload, hexRegistryOrMeta, type, typeIndexOrPayloadType) {\n    if (payload === undefined) {\n        return [];\n    }\n    if (isHex(payload)) {\n        return Array.from(hexToU8a(payload));\n    }\n    if (isU8a(payload)) {\n        return Array.from(payload);\n    }\n    const [reg, meta] = isProgramMeta(hexRegistryOrMeta)\n        ? [undefined, hexRegistryOrMeta]\n        : [hexRegistryOrMeta, undefined];\n    const [typeIndex, payloadType] = typeof typeIndexOrPayloadType === 'number'\n        ? [typeIndexOrPayloadType, undefined]\n        : [undefined, typeIndexOrPayloadType];\n    let result;\n    if (meta) {\n        if (typeIndex || typeIndex === 0) {\n            result = meta.createType(typeIndex, payload);\n        }\n        else if (payloadType) {\n            const index = meta.getTypeIndexByName(payloadType);\n            if (index === null) {\n                result = CreateType.create(payloadType, payload);\n            }\n            else {\n                result = meta.createType(meta.getTypeIndexByName(payloadType), payload);\n            }\n        }\n        else {\n            const withType = type === 'reply' ? meta.types[type] : meta.types[type].input;\n            result = meta.createType(withType, payload);\n        }\n    }\n    else if (reg) {\n        if (typeIndex || typeIndex === 0) {\n            result = new GearMetadata(reg).createType(typeIndex, payload);\n        }\n        else {\n            result = CreateType.create(payloadType, payload, reg);\n        }\n    }\n    else if (payloadType) {\n        result = CreateType.create(payloadType, payload);\n    }\n    else {\n        result = CreateType.create('Bytes', payload);\n    }\n    return Array.from(result.toU8a());\n}\n\nexport { encodePayload, getRegistry };\n", "import { ProgramMetadata } from './programMetadata.js';\nimport { StateMetadata } from './stateMetadata.js';\n\nfunction isProgramMeta(arg) {\n    if (typeof arg !== 'object') {\n        return false;\n    }\n    return arg instanceof ProgramMetadata;\n}\nfunction isStateMeta(arg) {\n    if (typeof arg !== 'object') {\n        return false;\n    }\n    return arg instanceof StateMetadata;\n}\n\nexport { isProgramMeta, isStateMeta };\n", "import { CreateType } from './create-type.js';\nimport { GearMetadata } from './metadata.js';\nimport importObj from '../wasm/importObj.js';\n\nclass StateMetadata extends GearMetadata {\n    functions;\n    constructor({ reg, functions }) {\n        super(reg);\n        this.functions = functions;\n    }\n}\nasync function getStateMetadata(wasmBytes) {\n    const memory = new WebAssembly.Memory({ initial: 17 });\n    let resolveMetadataPromise;\n    const metadata = new Promise((resolve) => {\n        resolveMetadataPromise = resolve;\n    });\n    const { instance } = await WebAssembly.instantiate(wasmBytes, importObj(memory, undefined, undefined, undefined, undefined, (payload, len) => {\n        resolveMetadataPromise(new Uint8Array(memory.buffer.slice(payload, payload + len)));\n    }));\n    const { exports } = instance;\n    if (!exports?.metadata) {\n        throw new Error('Unable to find metadata function in exports of applied wasm');\n    }\n    if (typeof exports.metadata !== 'function') {\n        throw new Error('exports.metadata is not a function');\n    }\n    exports.metadata();\n    const meta = CreateType.create('StateMetadataRepr', await metadata);\n    return new StateMetadata(meta.toJSON());\n}\n\nexport { StateMetadata, getStateMetadata };\n", "import { randomAsHex } from '@polkadot/util-crypto';\nimport { SubmitProgramError, ProgramDoesNotExistError, ProgramHasNoMetahash } from './errors/program.errors.js';\nimport '@polkadot/util';\nimport { generateCodeHash, generateProgramId } from './utils/generate.js';\nimport { getIdsFromKeys } from './utils/prefixes.js';\nimport './utils/separator.js';\nimport { validateValue, validateGasLimit, validateProgramId } from './utils/validate.js';\nimport '@polkadot/api';\nimport { encodePayload } from './utils/create-payload.js';\nimport { GearGas } from './Gas.js';\nimport { GearResumeSession } from './ResumeSession.js';\nimport { GearTransaction } from './Transaction.js';\n\nclass GearProgram extends GearTransaction {\n    _api;\n    calculateGas;\n    resumeSession;\n    constructor(_api) {\n        super(_api);\n        this._api = _api;\n        this.calculateGas = new GearGas(_api);\n        this.resumeSession = new GearResumeSession(_api);\n    }\n    upload(args, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(args.value, this._api);\n        validateGasLimit(args.gasLimit, this._api);\n        const salt = args.salt || randomAsHex(20);\n        const code = this._api.createType('Bytes', Array.from(args.code));\n        const payload = encodePayload(args.initPayload, metaOrHexRegistry, 'init', typeIndexOrTypeName);\n        const codeId = generateCodeHash(code);\n        const programId = generateProgramId(codeId, salt);\n        try {\n            this.extrinsic = this._api.tx.gear.uploadProgram(code, salt, payload, args.gasLimit, args.value || 0);\n            return { programId, codeId, salt, extrinsic: this.extrinsic };\n        }\n        catch (error) {\n            throw new SubmitProgramError();\n        }\n    }\n    create({ codeId, initPayload, value, gasLimit, ...args }, metaOrHexRegistry, typeIndexOrTypeName) {\n        validateValue(value, this._api);\n        validateGasLimit(gasLimit, this._api);\n        const payload = encodePayload(initPayload, metaOrHexRegistry, 'init', typeIndexOrTypeName);\n        const salt = args.salt || randomAsHex(20);\n        const programId = generateProgramId(codeId, salt);\n        try {\n            this.extrinsic = this._api.tx.gear.createProgram(codeId, salt, payload, gasLimit, value || 0);\n            return { programId, salt, extrinsic: this.extrinsic };\n        }\n        catch (error) {\n            throw new SubmitProgramError();\n        }\n    }\n    /**\n     * ### Pay program rent\n     * @param programId\n     * @param blockCount\n     * @returns\n     * @example\n     * ```javascript\n     * const tx = await api.program.payRent('0x...', 100_000);\n     * tx.signAndSend(account, (events) => {\n     *   events.forEach(({event}) => console.log(event.toHuman()))\n     * })\n     * ```\n     */\n    async payRent(programId, blockCount) {\n        await validateProgramId(programId, this._api);\n        return this._api.tx.gear.payProgramRent(programId, blockCount);\n    }\n    /**\n     * ### Calculate the cost of rent for a certain number of blocks\n     * @param blockCount\n     * @returns u128 number\n     */\n    calcualtePayRent(blockCount) {\n        return this.costPerBlock.muln(blockCount);\n    }\n    /**\n     * Get ids of all uploaded programs\n     * @returns Array of program ids\n     */\n    async allUploadedPrograms(count) {\n        const prefix = this._api.query.gearProgram.programStorage.keyPrefix();\n        const programIds = [];\n        if (count) {\n            const keys = await this._api.rpc.state.getKeysPaged(prefix, count);\n            programIds.push(...getIdsFromKeys(keys, prefix));\n        }\n        else {\n            count = 1000;\n            const keys = await this._api.rpc.state.getKeysPaged(prefix, count);\n            programIds.push(...getIdsFromKeys(keys, prefix));\n            let keysLength = keys.length;\n            let lastKey = keys.at(-1);\n            while (keysLength === count) {\n                const keys = await this._api.rpc.state.getKeysPaged(prefix, count, lastKey);\n                programIds.push(...getIdsFromKeys(keys, prefix));\n                lastKey = keys.at(-1);\n                keysLength = keys.length;\n            }\n        }\n        return programIds;\n    }\n    /**\n     *\n     * @param id A program id\n     * @returns `true` if address belongs to program, and `false` otherwise\n     */\n    async exists(id) {\n        const program = (await this._api.query.gearProgram.programStorage(id));\n        return program.isSome;\n    }\n    /**\n     * Get codeHash of program on-chain\n     * @param programId\n     * @returns codeHash of the program\n     */\n    async codeHash(id) {\n        const program = await this._api.programStorage.getProgram(id);\n        return program.codeHash.toHex();\n    }\n    /**\n     * ### Get hash of program metadata\n     * @param programId\n     * @param at (optional) block hash\n     * @returns\n     */\n    async metaHash(programId, at) {\n        try {\n            const metaHash = (await this._api.rpc['gear'].readMetahash(programId, at || null));\n            return metaHash.toHex();\n        }\n        catch (error) {\n            if (error.code === 8000) {\n                if (error.data.includes('Program not found')) {\n                    throw new ProgramDoesNotExistError(programId);\n                }\n                if (error.data.includes('unreachable')) {\n                    throw new ProgramHasNoMetahash(programId);\n                }\n            }\n            throw error;\n        }\n    }\n    get costPerBlock() {\n        return this._api.consts.gear.programRentCostPerBlock;\n    }\n    get rentMinimalResumePeriod() {\n        return this._api.consts.gear.programRentMinimalResumePeriod;\n    }\n    get rentFreePeriod() {\n        return this._api.consts.gear.programRentFreePeriod;\n    }\n}\n\nexport { GearProgram };\n", "import { encodePayload } from './utils/create-payload.js';\n\nclass GearGas {\n    _api;\n    constructor(_api) {\n        this._api = _api;\n    }\n    /**\n     * ### Get gas spent of init message using upload_program extrinsic\n     * @param sourceId Account Id\n     * @param code Program code\n     * @param payload Payload of init message\n     * @param value Value of message\n     * @param allowOtherPanics Should RPC call return error if other contracts panicked, during communication with the initial one\n     * @param meta (optional) Program metadata obtained using `getProgramMetadata` function.\n     * @param typeIndexOrTypeName  Index of type in the registry. If not specified the type index from `meta.init.input` will be used instead.\n     * If meta is not passed it's possible to specify type name that can be one of the default rust types\n     * @example\n     * ```javascript\n     * const code = fs.readFileSync('demo_meta.opt.wasm');\n     * const meta = await getProgramMetadata('0x...');\n     * const gas = await gearApi.program.gasSpent.init(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   code,\n     *   {\n     *     amount: 255,\n     *     currency: 'GRT',\n     *   },\n     *   0,\n     *   true,\n     *   meta\n     * );\n     * console.log(gas.toJSON());\n     *\n     * // Or\n     * const gas = await gearApi.program.gasSpent.init(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   code,\n     *   'Hello',\n     *   0,\n     *   true,\n     *   undefined,\n     *   'String',\n     * );\n     * ```\n     */\n    async initUpload(sourceId, code, payload, value, allowOtherPanics, meta, typeIndexOrTypeName) {\n        return this._api.rpc['gear'].calculateInitUploadGas(sourceId, encodePayload(code, undefined, undefined, 'Bytes'), encodePayload(payload, meta, 'init', typeIndexOrTypeName), value || 0, allowOtherPanics || true);\n    }\n    /**\n     * ### Get gas spent of init message using create_program extrinsic\n     * @param sourceId Account id\n     * @param code Program code\n     * @param payload Payload of init message\n     * @param value Value of message\n     * @param allowOtherPanics Should RPC call return error if other contracts panicked, during communication with the initial one\n     * @param meta Metadata\n     * @param typeIndexOrTypeName  Index of type in the registry. If not specified the type index from `meta.init.input` will be used instead.\n     * If meta is not passed it's possible to specify type name that can be one of the default rust types\n     * @example\n     * ```javascript\n     * const code = fs.readFileSync('demo_meta.opt.wasm');\n     * const meta = await getProgramMetadata('0x...');\n     * const gas = await gearApi.program.gasSpent.init(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   code,\n     *   {\n     *     amount: 255,\n     *     currency: 'GRT',\n     *   },\n     *   0,\n     *   true,\n     *   meta,\n     *   meta.types.init.input\n     * );\n     * // Or\n     * const gas = await gearApi.program.gasSpent.init(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   code,\n     *   'Hello World!',\n     *   0,\n     *   true,\n     *   undefined,\n     *   'String'\n     * );\n     * console.log(gas.toJSON());\n     * ```\n     */\n    async initCreate(sourceId, codeId, payload, value, allowOtherPanics, meta, typeIndexOrTypeName) {\n        const _payload = encodePayload(payload, meta, 'init', typeIndexOrTypeName);\n        return this._api.rpc['gear'].calculateInitCreateGas(sourceId, codeId, _payload, value || 0, allowOtherPanics || true);\n    }\n    /**\n     * ### Get gas spent of hanle message\n     * @param sourceId Account id\n     * @param destinationId Program id\n     * @param payload Payload of message\n     * @param value Value of message\n     * @param allowOtherPanics Should RPC call return error if other contracts panicked, during communication with the initial one\n     * @param meta Metadata\n     * @param typeIndexOrTypeName  Index of type in the registry. If not specified the type index from `meta.handle.input` will be used instead.\n     * If meta is not passed it's possible to specify type name that can be one of the default rust types\n     * @example\n     * ```javascript\n     * const code = fs.readFileSync('demo_meta.opt.wasm');\n     * const meta = await getProgramMetadata('0x...');\n     * const gas = await gearApi.program.gasSpent.handle(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   '0xa178362715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *    {\n     *       id: {\n     *         decimal: 64,\n     *         HexString: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *       },\n     *    },\n     *   0,\n     *   true,\n     *   meta\n     * );\n     * console.log(gas.toHuman());\n     * ```\n     */\n    async handle(sourceId, destinationId, payload, value, allowOtherPanics, meta, typeIndexOrTypeName) {\n        const _payload = encodePayload(payload, meta, 'handle', typeIndexOrTypeName);\n        return this._api.rpc['gear'].calculateHandleGas(sourceId, destinationId, _payload, value || 0, allowOtherPanics || true);\n    }\n    /**\n     * ### Get gas spent of reply message\n     * @param sourceId Account id\n     * @param messageId Message id of a message waiting for response\n     * @param exitCode Exit code of a message waiting for response\n     * @param payload Payload of message\n     * @param value Value of message\n     * @param allowOtherPanics Should RPC call return error if other contracts panicked, during communication with the initial one\n     * @param meta Metadata\n     * @param typeIndexOrTypeName  Index of type in the registry. If not specified the type index from `meta.reply.input` will be used instead.\n     * If meta is not passed it's possible to specify type name that can be one of the default rust types\n     * @example\n     * ```javascript\n     * const code = fs.readFileSync('demo_async.opt.wasm');\n     * const meta = await getProgramMetadata('0x...');\n     * const gas = await gearApi.program.gasSpent.reply(\n     *   '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n     *   '0x518e6bc03d274aadb3454f566f634bc2b6aef9ae6faeb832c18ae8300fd72635',\n     *   0,\n     *   'PONG',\n     *   1000,\n     *   true,\n     *   meta,\n     * );\n     * console.log(gas.toJSON());\n     * ```\n     */\n    async reply(sourceId, messageId, payload, value, allowOtherPanics, meta, typeIndexOrTypeName) {\n        const _payload = encodePayload(payload, meta, 'reply', typeIndexOrTypeName);\n        return this._api.rpc['gear'].calculateReplyGas(sourceId, messageId, _payload, value || 0, allowOtherPanics || true);\n    }\n}\n\nexport { GearGas };\n", "import { u8aToHex } from '@polkadot/util';\nimport { ResumeSessionInitError, ResumeSessionPushError, ResumeSessionCommitError } from './errors/program.errors.js';\nimport '@polkadot/types';\nimport 'assert';\nimport { CreateType } from './metadata/create-type.js';\nimport './metadata/programMetadata.js';\nimport { GearTransaction } from './Transaction.js';\n\nconst SIXTEEN_KB = 16384;\nclass GearResumeSession extends GearTransaction {\n    _api;\n    constructor(_api) {\n        super(_api);\n        this._api = _api;\n    }\n    /**\n     * ## Create a session for program resume. Get session id from `ProgramResumeSessionStarted` event\n     * @param args Resume program args\n     * @returns Submittable result\n     * @example\n     * ```javascript\n     * const program = await api.programStorage.getProgram(programId, oneBlockBeforePauseHash);\n     * const initTx = api.program.resumeSession.init({\n     *   programId,\n     *   allocations: program.allocations,\n     *   codeHash: program.codeHash.toHex(),\n     * });\n     *\n     * let sessionId: HexString;\n     * initTx.signAndSend(account, ({ events }) => {\n     *   events.forEach(({ event: { method, data }}) => {\n     *     if (method === 'ProgramResumeSessionStarted') {\n     *       sessionId = data.sessionId.toNumber();\n     *     }\n     *   })\n     * })\n     * ```\n     */\n    init({ programId, allocations, codeHash, }) {\n        try {\n            this.extrinsic = this._api.tx.gear.resumeSessionInit(programId, Array.from(CreateType.create('BTreeSet<u32>', allocations).toU8a()), codeHash);\n            return this.extrinsic;\n        }\n        catch (error) {\n            console.log(error);\n            throw new ResumeSessionInitError(programId, error.message);\n        }\n    }\n    /**\n     * ## Append program memory pages to the session data.\n     * @param args Push pages args\n     * @returns Submittable result\n     * @example\n     * ```javascript\n     * const pages = await api.programStorage.getProgramPages(programId, program, oneBlockBeforePauseHash);\n     * for (const memPage of Object.entries(page)) {\n     *   const tx = api.program.resumeSession.push({ sessionId, memoryPages: [memPage] });\n     *   tx.signAndSend(account);\n     * }\n     * ```\n     */\n    push({ sessionId, memoryPages }) {\n        if (!memoryPages.every(([_, page]) => {\n            if (typeof page === 'string') {\n                return page.length === SIXTEEN_KB * 2 + 2;\n            }\n            else {\n                return page.length === SIXTEEN_KB;\n            }\n        })) {\n            throw new ResumeSessionPushError(sessionId, 'Invalid memory page length. Must be 16KB.');\n        }\n        const vecLen = CreateType.create('Compact<u8>', memoryPages.length).toHex();\n        const tuples = memoryPages.map(([number, page]) => {\n            const num = CreateType.create('u32', number).toHex();\n            const p = typeof page === 'string' ? page : u8aToHex(page);\n            return num + p.slice(2);\n        });\n        try {\n            this.extrinsic = this._api.tx.gear.resumeSessionPush(sessionId, vecLen + tuples.slice(2));\n            return this.extrinsic;\n        }\n        catch (error) {\n            throw new ResumeSessionPushError(sessionId);\n        }\n    }\n    /**\n     * ## Finish program resume session with the given key `sessionId`.\n     * @param args Commit session args\n     * @returns Submittable result\n     * @example\n     * ```javascript\n     * const tx = api.program.resumeSession.commit({ sessionId, blockCount: 20_000 });\n     * tx.signAndSend(account);\n     * ```\n     */\n    commit({ sessionId, blockCount }) {\n        try {\n            this.extrinsic = this._api.tx.gear.resumeSessionCommit(sessionId, blockCount);\n            return this.extrinsic;\n        }\n        catch (error) {\n            console.log(error);\n            throw new ResumeSessionCommitError(sessionId, error.message);\n        }\n    }\n}\n\nexport { GearResumeSession };\n", "import '@polkadot/types';\nimport 'assert';\nimport '@polkadot/util';\nimport { CreateType } from './metadata/create-type.js';\nimport './metadata/programMetadata.js';\nimport { GearProgramStorage } from './Storage.js';\n\nclass GearProgramState extends GearProgramStorage {\n    /**\n     * ## Read state using meta wasm file\n     * @param args\n     * @param meta StateMetadata returned from getStateMetadata function\n     */\n    async readUsingWasm(args, meta) {\n        const fnTypes = meta?.functions[args.fn_name];\n        const payload = fnTypes?.input !== undefined && fnTypes?.input !== null\n            ? Array.from(meta.createType(fnTypes.input, args.argument).toU8a())\n            : null;\n        const code = typeof args.wasm === 'string' ? args.wasm : CreateType.create('Bytes', Array.from(args.wasm));\n        const state = await this._api.rpc['gear'].readStateUsingWasm(args.programId, args.fn_name, code, payload, args.at);\n        return meta && fnTypes ? meta.createType(fnTypes.output, state) : state;\n    }\n    /**\n     *\n     * @param args ProgramId and hash of block where it's necessary to read state (optional)\n     * @param meta Program metadata returned from getProgramMetadata function\n     * @param type (optional) Index of type to decode state. metadata.types.state is uesd by default\n     */\n    async read(args, meta, type) {\n        const state = await this._api.rpc['gear'].readState(args.programId, args.at || null);\n        return meta.createType(type || meta.types.state, state);\n    }\n}\n\nexport { GearProgramState };\n", "import { u8aToU8a } from '@polkadot/util';\nimport { ProgramDoesNotExistError, ProgramTerminatedError, ProgramExitedError, PausedProgramDoesNotExistError } from './errors/program.errors.js';\n\nclass GearProgramStorage {\n    _api;\n    constructor(_api) {\n        this._api = _api;\n    }\n    /**\n     * ### Get program from chain\n     * @param id Program id\n     * @param at _(optional)_ Hash of block to query at\n     * @returns\n     */\n    async getProgram(id, at) {\n        const api = at ? await this._api.at(at) : this._api;\n        const programOption = (await api.query.gearProgram.programStorage(id));\n        if (programOption.isNone) {\n            throw new ProgramDoesNotExistError(id);\n        }\n        const program = programOption.unwrap();\n        if (program.isTerminated)\n            throw new ProgramTerminatedError(program.asTerminated.toHex());\n        if (program.isExited)\n            throw new ProgramExitedError(program.asExited.toHex());\n        return program.asActive;\n    }\n    /**\n     * Get list of pages for program\n     * @param programId\n     * @param gProg\n     * @returns\n     */\n    async getProgramPages(programId, program, at) {\n        const pages = {};\n        for (const page of program.pagesWithData) {\n            pages[page.toNumber()] = u8aToU8a(await this._api.provider.send('state_getStorage', [\n                this._api.query.gearProgram.memoryPageStorage.key(programId, page),\n                at,\n            ]));\n        }\n        return pages;\n    }\n    /**\n     * ### Get block number and hash of paused program\n     * @param id paused program id\n     * @param at _(optional)_ Hash of block to query at\n     * @returns\n     */\n    async getPausedProgramHashAndBlockNumber(id, at) {\n        const storageOption = (await this._api.query.gearProgram.pausedProgramStorage(id, at));\n        if (storageOption.isNone) {\n            throw new PausedProgramDoesNotExistError(id);\n        }\n        const storage = storageOption.unwrap();\n        return {\n            blockNumber: storage[0],\n            hash: storage[1],\n        };\n    }\n}\n\nexport { GearProgramStorage };\n", "import '@polkadot/util';\nimport { generateVoucherId } from './utils/generate.js';\nimport './utils/prefixes.js';\nimport './utils/separator.js';\nimport { validateVoucher } from './utils/validate.js';\nimport '@polkadot/api';\nimport '@polkadot/util-crypto';\nimport '@polkadot/types';\nimport 'assert';\nimport './default/index.js';\nimport './metadata/programMetadata.js';\nimport { GearTransaction } from './Transaction.js';\n\nclass GearVoucher extends GearTransaction {\n    /**\n     * ### Issue a new voucher for a `user` to be used to pay for sending messages to `program_id` program.\n     * @param to The voucher holder account id.\n     * @param program The program id, messages to whom can be paid with the voucher.\n     * @param value The voucher amount.\n     * @returns Submittable result\n     *\n     * @example\n     * ```javascript\n     * const programId = '0x..';\n     * const account = '0x...'\n     * const tx = api.voucher.issue(account, programId, 10000)\n     * tx.signAndSend(account, (events) => {\n     *   events.forEach(({event}) => console.log(event.toHuman()))\n     * })\n     * ```\n     */\n    issue(to, program, value) {\n        const voucherId = generateVoucherId(to, program);\n        this.extrinsic = this._api.tx.gearVoucher.issue(to, program, value);\n        return { extrinsic: this.extrinsic, voucherId };\n    }\n    async exists(programId, accountId) {\n        try {\n            await validateVoucher(programId, accountId, this._api);\n        }\n        catch (_) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport { GearVoucher };\n", "class GearWaitlist {\n    _api;\n    constructor(_api) {\n        this._api = _api;\n    }\n    async read(programId, messageIdOrNumberOfMessages) {\n        const [messageId, numberOfMessages] = typeof messageIdOrNumberOfMessages === 'string'\n            ? [messageIdOrNumberOfMessages, undefined]\n            : [undefined, messageIdOrNumberOfMessages || 1000];\n        if (messageId) {\n            const waitlist = await this._api.query.gearMessenger.waitlist(programId, messageId);\n            const typedWaitlist = this._api.createType('Option<(GearCoreMessageStoredStoredDispatch, GearCommonStoragePrimitivesInterval)>', waitlist);\n            return typedWaitlist.unwrapOr(null);\n        }\n        else {\n            const keyPrefix = this._api.query.gearMessenger.waitlist.keyPrefix(programId);\n            const keysPaged = await this._api.rpc.state.getKeysPaged(keyPrefix, numberOfMessages, keyPrefix);\n            if (keysPaged.length === 0) {\n                return [];\n            }\n            const waitlist = (await this._api.rpc.state.queryStorageAt(keysPaged));\n            return waitlist.map((item) => {\n                const typedItem = this._api.createType('Option<(GearCoreMessageStoredStoredDispatch, GearCommonStoragePrimitivesInterval)>', item);\n                return typedItem.unwrapOr(null);\n            });\n        }\n    }\n}\n\nexport { GearWaitlist };\n", "import { isString, isU8a, hexToU8a, u8aToHex, stringToU8a } from '@polkadot/util';\nimport { mnemonicGenerate, mnemonicToMiniSecret } from '@polkadot/util-crypto';\nimport { Keyring } from '@polkadot/api';\nimport { waitReady } from '@polkadot/wasm-crypto';\nimport './utils/generate.js';\nimport './utils/prefixes.js';\nimport './utils/separator.js';\nimport '@polkadot/types';\nimport { decodeAddress } from './utils/address.js';\nimport 'assert';\nimport './default/index.js';\nimport './metadata/programMetadata.js';\n\nclass GearKeyring {\n    static unlock(keyring, passphrase) {\n        if (keyring.isLocked) {\n            keyring.unlock(passphrase);\n        }\n        return keyring;\n    }\n    static async fromSuri(suri, name) {\n        const keyring = new Keyring({ type: 'sr25519' });\n        await waitReady();\n        const keyPair = keyring.addFromUri(suri, { name });\n        return keyPair;\n    }\n    static fromKeyPair(pair, name) {\n        const keyring = new Keyring({ type: 'sr25519' });\n        return GearKeyring.unlock(keyring.addFromPair(pair, { name }));\n    }\n    static fromJson(keypairJson, passphrase) {\n        const json = isString(keypairJson) ? JSON.parse(keypairJson) : keypairJson;\n        const keyring = new Keyring().addFromJson(json);\n        return GearKeyring.unlock(keyring, passphrase);\n    }\n    static async fromSeed(seed, name) {\n        const keyring = new Keyring({ type: 'sr25519' });\n        await waitReady();\n        const keypair = isU8a(seed) ? keyring.addFromSeed(seed, { name }) : keyring.addFromSeed(hexToU8a(seed), { name });\n        return keypair;\n    }\n    static async fromMnemonic(mnemonic, name) {\n        return await GearKeyring.fromSuri(mnemonic, name);\n    }\n    static toJson(keyring, passphrase) {\n        return keyring.toJson(passphrase);\n    }\n    static async create(name, passphrase) {\n        const mnemonic = mnemonicGenerate();\n        const seed = mnemonicToMiniSecret(mnemonic);\n        const keyring = await GearKeyring.fromSeed(seed, name);\n        return {\n            keyring,\n            mnemonic: mnemonic,\n            seed: u8aToHex(seed),\n            json: keyring.toJson(passphrase),\n        };\n    }\n    static generateMnemonic() {\n        return mnemonicGenerate();\n    }\n    static generateSeed(mnemonic) {\n        if (!mnemonic) {\n            mnemonic = mnemonicGenerate();\n        }\n        return { seed: u8aToHex(mnemonicToMiniSecret(mnemonic)), mnemonic };\n    }\n    static sign(keyring, message) {\n        return keyring.sign(stringToU8a(message));\n    }\n    static checkPublicKey(publicKey) {\n        try {\n            decodeAddress(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport { GearKeyring };\n", "import { Keyring } from '@polkadot/api';\nimport { u8aToHex } from '@polkadot/util';\n\nfunction decodeAddress(publicKey) {\n    return u8aToHex(new Keyring().decodeAddress(publicKey));\n}\nfunction encodeAddress(publicKeyRaw) {\n    return new Keyring().encodeAddress(publicKeyRaw);\n}\n\nexport { decodeAddress, encodeAddress };\n", "import { GearTransaction } from './Transaction.js';\n\nclass DebugMode extends GearTransaction {\n    enabled;\n    enable() {\n        this.enabled = this._api.tx.sudo.sudo(this._api.tx.gearDebug.enableDebugMode(true));\n    }\n    disable() {\n        this.enabled = this._api.tx.sudo.sudo(this._api.tx.gearDebug.enableDebugMode(false));\n    }\n    snapshots(callback) {\n        return this._api.query.system.events((events) => {\n            events\n                .filter(({ event }) => this._api.events.gearDebug.DebugDataSnapshot.is(event))\n                .forEach(({ event }) => callback(event));\n        });\n    }\n}\n\nexport { DebugMode };\n", "import { PAGE_SIZE, getExportValue } from './utils.js';\nimport importObj from './importObj.js';\n\nasync function readState(wasmBytes, initialSize, pages, inputValue, blockTimestamp, blockNumber) {\n    const memory = new WebAssembly.Memory({ initial: initialSize });\n    const module = await WebAssembly.instantiate(wasmBytes, importObj(memory, true, inputValue, blockTimestamp, blockNumber));\n    Object.keys(pages).forEach((pageNumber) => {\n        const start = +pageNumber * PAGE_SIZE;\n        const end = start + PAGE_SIZE;\n        const page = pages[pageNumber];\n        for (let i = start; i < end; i++) {\n            new Uint8Array(memory.buffer)[i] = page[i % PAGE_SIZE];\n        }\n    });\n    const { exports } = module.instance;\n    return exports?.meta_state ? new Uint8Array(getExportValue(memory, exports.meta_state)) : null;\n}\n\nexport { readState };\n", "function getExportValue(memory, func) {\n    if (!func) {\n        return undefined;\n    }\n    const result_ptr = func();\n    const pointer = new Uint32Array(memory.buffer.slice(result_ptr, result_ptr + 4))[0];\n    const length = new Uint32Array(memory.buffer.slice(result_ptr + 4, result_ptr + 8))[0];\n    const buf = memory.buffer.slice(pointer, pointer + length);\n    return buf;\n}\nconst PAGE_SIZE = 4096;\n\nexport { PAGE_SIZE, getExportValue };\n", "import { GenericEventData } from '@polkadot/types';\n\nclass GearEventData extends GenericEventData {\n    constructor(data) {\n        super(data.registry, data.toU8a(), data.meta, data.section, data.method);\n    }\n}\n\nexport { GearEventData };\n", "import { stringCamelCase } from '@polkadot/util';\n\nfunction toCamelCase(array) {\n    let result = stringCamelCase(array.join('_'));\n    result = result.slice(0, 1).toUpperCase() + result.slice(1, result.length);\n    return result;\n}\nfunction splitByCommas(str) {\n    let counter = 0;\n    const result = [];\n    let lastTypeIndex = 0;\n    Array.from(str).forEach((char, index) => {\n        if (char === ',' && counter === 0) {\n            result.push(str.slice(lastTypeIndex, index).trim());\n            lastTypeIndex = index + 1;\n        }\n        (char === '<' || char === '(') && counter++;\n        (char === '>' || char === ')') && counter--;\n    });\n    result.push(str.slice(lastTypeIndex).trim());\n    return result;\n}\n\nexport { splitByCommas, toCamelCase };\n", "import { signatureVerify } from '@polkadot/util-crypto';\n\nfunction signatureIsValid(publicKey, signature, message) {\n    return signatureVerify(message, signature, publicKey).isValid;\n}\n\nexport { signatureIsValid };\n"],
  "mappings": "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",
  "names": ["require_shams", "bind", "Empty", "bind", "undefined", "doEval", "bind", "stringToPath", "first", "last", "getBaseIntrinsic", "alias", "bind", "applyBind", "all", "forEachArray", "iterator", "forEachString", "forEachObject", "forEach", "getPrototypeOf", "getPrototypeOf", "isPromise", "getOwnPropertyDescriptors", "keys", "isString", "x", "isNull", "isObject", "process", "deprecated", "isBoolean", "isUndefined", "isFunction", "isError", "isArray", "isNumber", "l", "timestamp", "_typeof", "obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "assert", "NodeError", "_wrapNativeSuper", "Class", "_construct", "Parent", "args", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "_typeof", "obj", "repeat", "count", "keys", "process", "AssertionError", "require_implementation", "keys", "isObject", "isFunction", "isString", "keys", "hasPropertyDescriptors", "keys", "concat", "isFunction", "map", "require_implementation", "require_implementation", "isNaN", "require_polyfill", "require_shim", "_typeof", "obj", "arrayFromSet", "arrayFromMap", "map", "keys", "count", "memo", "_typeof", "obj", "isPromise", "assert", "warn", "process", "Comparison", "keys", "packageInfo", "packageInfo", "packageInfo", "packageInfo", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "detectOther_default", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "detectOther_default", "packageInfo", "packageInfo", "packageInfo", "detectOther_default", "publicKey", "publicKey", "context", "publicKey", "encodeAddress", "meta", "publicKey", "detectOther_default", "packageInfo", "packageInfo", "detectOther_default", "packageInfo", "isSubscription", "keys", "count", "l", "packageInfo", "l", "timeout", "count", "endpoint", "EventEmitter", "d", "b", "from", "l", "v", "isFunction", "Subscription", "isFunction", "empty", "isFunction", "timeout", "noop", "Subscriber", "ConsumerObserver", "SafeSubscriber", "isFunction", "noop", "identity", "identity", "Observable", "observable", "isFunction", "isFunction", "OperatorSubscriber", "err", "ConnectableObservable", "timestamp", "timestamp", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "AsapAction", "delay", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "delay", "isFunction", "isFunction", "isFunction", "isFunction", "isFunction", "isFunction", "isFunction", "isFunction", "delay", "repeat", "delay", "delay", "iterator", "isFunction", "iterator", "isFunction", "NotificationKind", "Notification", "isFunction", "config", "info", "isArray", "keys", "keys", "keys", "identity", "i", "expand", "buffer", "isFunction", "identity", "noop", "isArray", "config", "count", "identity", "first", "identity", "isFunction", "windowTime", "isFunction", "isFunction", "_a", "identity", "TimeInterval", "interval", "l", "l", "account", "detectOther_default", "packageInfo", "detectOther_default", "detectOther_default", "packageInfo", "packageInfo", "detectOther_default", "packageInfo", "detectOther_default", "packageInfo", "packageInfo", "detectOther_default", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "runtime", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "definitions_default", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "definitions_default", "rpc", "runtime", "definitions_default", "runtime", "definitions_default", "rpc", "definitions_default", "rpc", "definitions_default", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "runtime", "definitions_default", "definitions_default", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "runtime", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "definitions_default", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "rpc", "definitions_default", "rpc", "rpc", "runtime", "definitions_default", "rpc", "runtime", "definitions_default", "definitions_default", "runtime", "definitions_default", "runtime", "definitions_default", "definitions_default", "definitions_default", "definitions_default", "definitions_default", "definitions_default", "definitions_default", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "definitions_default", "definitions_default", "detectOther_default", "packageInfo", "packageInfo", "detectOther_default", "TypeDefInfo", "detectOther_default", "packageInfo", "detectOther_default", "count", "BN", "keys", "count", "Type", "keys", "count", "from", "src", "box", "isArrayLike", "map", "types", "count", "keys", "count", "Type", "count", "keys", "Type", "index", "Type", "count", "types", "l", "Type", "count", "Type", "count", "map", "count", "keys", "count", "Type", "l", "count", "types", "l", "count", "MAX_LENGTH", "EMPTY", "decodeU8a", "Type", "Type", "MAX_LENGTH", "Type", "Type", "BN", "count", "keys", "decodeSet", "count", "isRustEnum", "count", "keys", "max", "nested", "wrapped", "map", "count", "Type", "Type", "info", "count", "all", "alias", "all", "v0", "v1", "definitions_default", "v0", "v1", "definitions_default", "rpc", "runtime", "definitions_default", "rpc", "runtime", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "runtime", "definitions_default", "runtime", "rpc", "definitions_default", "rpc", "rpc", "definitions_default", "rpc", "rpc", "definitions_default", "rpc", "rpc", "definitions_default", "rpc", "rpc", "runtime", "definitions_default", "rpc", "runtime", "rpc", "runtime", "definitions_default", "rpc", "runtime", "rpc", "definitions_default", "rpc", "section", "l", "count", "first", "params", "lookupIndex", "name", "alias", "types", "empty", "count", "info", "types", "count", "l", "throwError", "types", "extractTypes", "types", "all", "events", "throwError", "count", "info", "section", "count", "account", "decodeU8a", "count", "account", "first", "VERSIONS", "keys", "count", "isOption", "count", "account", "BN", "first", "all", "value", "BN", "decodeU8a", "decodeU8a", "decodeAccountId", "ACCOUNT_ID_PREFIX", "decodeString", "decodeU8a", "decodeAddressOrIndex", "u8a", "map", "count", "keys", "section", "section", "count", "v12", "knownTypes", "section", "types", "count", "alias", "result", "name", "events", "keys", "prefix", "map", "v13", "v14", "v15", "throwError", "decodeU8a", "count", "count", "events", "count", "section", "keys", "count", "prefix", "types", "u8", "prefix", "section", "substrate", "substrate", "count", "count", "section", "prefix", "latest", "l", "count", "keys", "index", "name", "events", "registry", "mapping", "i", "section", "Type", "knownTypes", "delay", "refCount", "delay", "l", "type", "section", "jsonrpc", "isSubscription", "error", "count", "rpc", "keys", "isEmpty", "key", "all", "prefix", "section", "getKeys", "identity", "count", "accountId", "accountIndex", "info", "accountId", "identity", "accountId", "indexes", "indexes", "accountId", "identity", "hasProposals", "members", "prime", "proposal", "proposalCount", "proposalHashes", "proposals", "section", "empty", "query", "section", "query", "proposals", "votes", "query", "section", "all", "members", "hasProposals", "proposal", "proposalCount", "proposalHashes", "proposals", "prime", "expand", "max", "query", "keys", "expand", "query", "account", "all", "all", "bestNumber", "locks", "BN", "all", "l", "accountId", "_a", "account", "votingBalance", "calcBalances", "accountId", "balances", "accountId", "all", "proposal", "bounties", "keys", "proposals", "validators", "bestNumber", "bestNumberFinalized", "accountId", "validators", "registry", "header", "author", "events", "validators", "registry", "block", "author", "events", "validators", "validators", "validators", "hasProposals", "members", "prime", "proposal", "proposalCount", "proposalHashes", "proposals", "accountId", "votes", "accountId", "votes", "from", "members", "hasProposals", "proposal", "proposalCount", "proposalHashes", "proposals", "prime", "info", "events", "section", "accountId", "events", "section", "childKey", "keys", "childKey", "keys", "all", "events", "_contributions", "latest", "proposals", "info", "sqrtElectorate", "BN", "votes", "keys", "scheduled", "info", "votes", "referendums", "accountId", "proposal", "keys", "parse", "proposals", "first", "referendums", "votes", "info", "accountId", "votes", "result", "sqrtElectorate", "referendums", "info", "info", "info", "candidates", "members", "validators", "hasProposals", "members", "prime", "proposal", "proposalCount", "proposalHashes", "proposals", "members", "hasProposals", "proposal", "proposalCount", "proposalHashes", "proposals", "prime", "info", "queue", "parse", "info", "parse", "indexes", "info", "parse", "empty", "indexes", "info", "indexes", "info", "sessionProgress", "eraProgress", "info", "members", "candidates", "info", "accountId", "accountIds", "accountId", "members", "account", "overview", "map", "BN", "parseResult", "keys", "query", "account", "accountId", "nextElected", "validators", "flags", "info", "CACHE_KEY", "query", "accountId", "eras", "validators", "max", "CACHE_KEY", "CACHE_KEY", "all", "validators", "CACHE_KEY", "CACHE_KEY", "validators", "overview", "indexes", "nextElected", "validators", "accountId", "accountId", "flags", "accountId", "validators", "accountId", "accountId", "validators", "accountId", "all", "erasPoints", "erasPrefs", "erasRewards", "isEmpty", "validators", "all", "rewards", "filter", "accountId", "accountId", "validators", "events", "keys", "keys", "accountId", "validators", "nextElected", "DEFAULT_FLAGS", "flags", "nextElected", "stashes", "info", "hasProposals", "members", "prime", "proposal", "proposalCount", "proposalHashes", "proposals", "members", "hasProposals", "proposal", "proposalCount", "proposalHashes", "proposals", "prime", "proposals", "parseResult", "proposalCount", "proposals", "proposal", "count", "events", "BN", "nonce", "keys", "all", "getKeys", "count", "getKeys", "count", "events", "section", "ExtrinsicBase", "account", "signingInfo", "blockHash", "events", "info", "isSubscription", "detectOther_default", "packageInfo", "packageInfo", "detectOther_default", "sharedTypes", "versioned", "versioned", "versioned", "sharedTypes", "addrAccountIdTypes", "versioned", "sharedTypes", "versioned", "versioned", "sharedTypes", "versioned", "sharedTypes", "addrAccountIdTypes", "versioned", "versioned", "upgrades", "upgrades", "upgrades", "BN", "upgrades", "min", "max", "types", "knownTypes", "known", "upgrades", "last", "l", "prefix", "section", "count", "section", "keys", "EventEmitter", "PAGE_SIZE_K", "l", "section", "BN", "types", "runtime", "count", "alias", "method", "rpc", "all", "keys", "query", "queue", "l", "section", "packageInfo", "rpc", "types", "types", "types", "types", "types", "account", "publicKey", "import_assert", "error", "assert", "types", "name", "index", "Lang", "types", "import_assert", "keys", "prefix", "BN", "account", "import_assert", "import_assert", "timestamp", "buffer", "assert", "buffer", "prefix", "keys", "events", "from", "accountId", "import_assert", "account", "import_assert", "count", "prefix", "keys", "import_assert", "import_assert", "accountId", "types", "decodeAddress", "publicKey", "encodeAddress", "import_assert", "publicKey", "decodeAddress", "events", "import_assert", "publicKey"]
}
